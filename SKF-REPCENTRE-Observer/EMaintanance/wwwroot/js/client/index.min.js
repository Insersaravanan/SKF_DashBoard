app.requires.push("commonMethods","ngTouch","ui.grid","ui.grid.selection","ui.grid.resizeColumns","ui.grid.edit","ui.grid.cellNav","ui.grid.pinning","ui.grid.exporter");app.controller("skfCtrl",function($scope,$filter,uiGridConstants,$http,$uibModal,$window,languageFactory,alertFactory,$timeout){function getCellClass(grid,row){return row.uid===highlightRow?"highlight":""}var _columns,highlightRow;$scope.startIndex=1;$scope.readOnlyPage=!1;$scope.language=null;$scope.isclear=!0;$scope.formatters={};_columns=[{name:"sno",displayName:"#",width:"4%",minWidth:50,cellClass:getCellClass,enableFiltering:!1,enableSorting:!1,cellTemplate:'<div class="ui-grid-cell-contents">{{grid.renderContainers.body.visibleRowCache.indexOf(row) + 1}}<\/div>'},{name:"ClientName",displayName:"Client Name",cellClass:getCellClass,enableColumnResizing:!0,width:"50%",minWidth:200,aggregationHideLabel:!1,aggregationType:uiGridConstants.aggregationTypes.count,footerCellTemplate:'<div class="ui-grid-cell-contents" >Total Count: {{col.getAggregationValue() | number:0 }}<\/div>'},{name:"ClientStatusName",displayName:"Status",cellClass:getCellClass,width:"15%",minWidth:100},{name:"Action",enableFiltering:!1,enableSorting:!1,cellClass:getCellClass,cellTemplate:'<div class="ui-grid-cell-contents"><a ng-click="grid.appScope.editRow(row.entity) || grid.appScope.toggleCreate()" <i class="fa fa-pencil-square-o icon-space-before" tooltip-append-to-body="true" uib-tooltip="Edit Client" tooltip-class="customClass"><\/i><\/a><a ng-click="grid.appScope.multiLanguage(row.entity)" <i class="fa fa-language icon-space-before" tooltip-append-to-body="true" uib-tooltip="Multi Language" tooltip-class="customClass"><\/i><\/a><\/div>',width:"30%",minWidth:100}];$scope.editRow=function(row){$scope.readOnlyPage=!1;$scope.isEdit=!0;$scope.clearModal();$scope.isCreate=!1;$scope.Client=row;$scope.Client.LookupId=row.ClientStatus};$scope.clearOut=function(){$scope.isEdit=!1;$scope.clearModal()};$scope.createToggle=function(){$scope.isCreate=!0;$scope.isEdit=!1;$scope.clearModal()};$scope.resetForm=function(){setTimeout(function(){for(var elements=document.getElementsByName("userForm")[0].querySelectorAll(".has-error"),i=0;i<elements.length;i++)elements[i].className=elements[i].className.replace(/\has-error\b/g,"")},500)};$scope.clearModal=function(){$scope.readOnlyPage=!1;$scope.isProcess=!1;$scope.Client={LanguageId:$scope.language.LanguageId,ClientName:null,ClientStatus:0,ClientStatusName:null,ClientId:0};$scope.resetForm()};$scope.clearValue=function(){$scope.S_Client={ClientStatus:""}};$scope.clearValue();$scope.columns=angular.copy(_columns);highlightRow=null;$scope.gridOpts={columnDefs:$scope.columns,enableFiltering:!0,enablePinning:!0,enableColumnResizing:!0,showColumnFooter:!0,enableRowSelection:!0,enableSorting:!0,onRegisterApi:function(gridApi){$scope.gridApi=gridApi;$scope.gridApi.core.refresh();$scope.gridApi.grid.clearAllFilters=function(){$scope.gridOpts.columnDefs=[];$timeout(function(){$scope.gridOpts.columnDefs=angular.copy(_columns)},2)};gridApi.cellNav.on.navigate($scope,function(selected){".ui-grid-cell-focus "&&(highlightRow=selected.row.uid,gridApi.core.notifyDataChange(uiGridConstants.dataChange.COLUMN))})},enableGridMenu:!0,enableSelectAll:!1,exporterMenuPdf:!1,exporterMenuCsv:!1,exporterExcelFilename:"EMaintenance_Client.xlsx",exporterExcelSheetName:"EMaintenance_Client",exporterExcelCustomFormatters:function(grid,workbook,docDefinition){var stylesheet=workbook.getStyleSheet(),stdStyle=stylesheet.createFontStyle({size:9,fontName:"Calibri"}),boldStyle=stylesheet.createFontStyle({size:9,fontName:"Calibri",bold:!0}),aFormatDefn={font:boldStyle.id,alignment:{wrapText:!0}},formatter=stylesheet.createFormat(aFormatDefn),dateFormatter,singleDefn;return $scope.formatters.bold=formatter,dateFormatter=stylesheet.createSimpleFormatter("date"),$scope.formatters.date=dateFormatter,aFormatDefn={font:stdStyle.id,fill:{type:"pattern",patternType:"solid",fgColor:"FFFFC7CE"},alignment:{wrapText:!0}},singleDefn={font:stdStyle.id,format:"#,##0.0"},formatter=stylesheet.createFormat(aFormatDefn),$scope.formatters.red=formatter,Object.assign(docDefinition.styles,$scope.formatters),docDefinition},exporterExcelHeader:function(grid,workbook,sheet){var stylesheet=workbook.getStyleSheet(),formatterId=stylesheet.createFormat({font:{size:11,fontName:"Calibri",bold:!0},alignment:{wrapText:!0}}),cols;sheet.mergeCells("B1","C1");cols=[];cols.push({value:""});cols.push({value:"SKF",metadata:{style:formatterId.id}});sheet.data.push(cols)},exporterFieldFormatCallback:function(grid,row,gridCol,cellValue){var formatterId=null;return gridCol.field==="name"&&cellValue&&cellValue.startsWith("W")&&(formatterId=$scope.formatters.red.id),gridCol.field==="updatedDate"&&(formatterId=$scope.formatters.date.id),formatterId?{metadata:{style:formatterId}}:null},exporterColumnScaleFactor:4.5,exporterFieldApplyFilters:!0};$scope.loadData=function(){$scope.isPageLoad=!0;$scope.gridOpts.data=[];var _url="/Client/GetClientByStatus?lId="+$scope.language.LanguageId+"&cliStatus="+$scope.S_Client.ClientStatus;$http.get(_url).then(function(response){$scope.gridOpts.data=response.data;angular.forEach($scope.gridOpts.data,function(val,i){val.sno=i+1})})};$scope.loadClient=function(){var _url="/Lookup/GetLookupByName?lId="+$scope.language.LanguageId+"&lName=ClientStatus";$http.get(_url).then(function(response){$scope.ClientDDL=response.data})};$scope.loadclientchange=function(){var _url="/lookup/getlookupbyname?lid="+$scope.language.languageid+"&lname=clientstatus";$http.get(_url).then(function(response){angular.foreach(response.data,function(val){_data==val.lookupid&&($scope.client.clientstatusname=val.lookupname,$scope.client.clientstatusid=val.lookupid)})})};$scope.$watch(function(){return languageFactory.getLanguage()},function(newValue,oldValue){newValue!=oldValue&&newValue&&($scope.language=newValue,$scope.loadData(),$scope.createToggle(),$scope.loadClient())});$scope.save=function(data){if($scope.userForm.$valid&&!$scope.isProcess&&!$scope.readOnlyPage){$scope.isProcess=!0;$http.post("/Client/Create",JSON.stringify($scope.Client)).then(function(response){response.data&&(response.data.toString().indexOf("<!DOCTYPE html>")>=0?alertFactory.setMessage({type:"warning",msg:"User not a privileged to perform this Action. Please Contact your Admin.."}):(alertFactory.setMessage({msg:"Data saved Successfully."}),data=="goto"?(angular.forEach(response.data,function(val){$scope.Id=val.ClientId}),sessionStorage.setItem("responseId",$scope.Id),$window.location.href="/clientSite"):($scope.clearOut(),$scope.loadData())));$scope.isProcess=!1},function(response){$scope.isProcess=!1;response.data.message&&alertFactory.setMessage({type:"warning",msg:String(response.data.message),exc:String(response.data.exception)})})}};$scope.update=function(){if($scope.userForm.$valid&&!$scope.isProcess&&!$scope.readOnlyPage){$scope.isProcess=!0;$http.post("/Client/Update",JSON.stringify($scope.Client)).then(function(response){response.data&&(response.data.toString().indexOf("<!DOCTYPE html>")>=0?alertFactory.setMessage({type:"warning",msg:"User not a privileged to perform this Action. Please Contact your Admin.."}):(alertFactory.setMessage({msg:"Data updated Successfully."}),$scope.loadData()));$scope.isProcess=!1},function(response){$scope.isProcess=!1;response.data.message&&alertFactory.setMessage({type:"warning",msg:String(response.data.message),exc:String(response.data.exception)})})}};$scope.multiLanguage=function(row){$http.get("/Client/GetTransClient?cliId="+row.ClientId).then(function(response){angular.forEach(response.data,function(val,i){val.sno=i+1});var modalInstance=$uibModal.open({templateUrl:"skfMultiLanguageModal.html",controller:"skfMultiLanguageModalCtrl",size:"lg",backdrop:"static",keyboard:!1,resolve:{params:function(){return{row:row,data:response.data}}}})});modalInstance.result.then(function(){$scope.loadData()},function(){$scope.loadData()})}});app.controller("skfMultiLanguageModalCtrl",function($scope,$http,$uibModalInstance,params,uiGridConstants,alertFactory,$timeout){var _param=params,_columns;$scope.ClientName=params.row.ClientName;_columns=[{name:"sno",displayName:"#",width:"50",cellClass:"lock-pinned",enableCellEdit:!1,enableFiltering:!1,cellTemplate:'<div class="ui-grid-cell-contents">{{grid.renderContainers.body.visibleRowCache.indexOf(row) + 1}}<\/div>'},{name:"LanguageName",displayName:"Language ",enableCellEdit:!1,enableFiltering:!0,cellTemplate:'<div> &nbsp;&nbsp;&nbsp;<img class="grid-flag" src="/images/flags/{{row.entity.LanguageCountryCode.toLowerCase()}}.png">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{{ row.entity.LanguageName }}<\/div>',minWidth:150},{name:"ClientName",displayName:"Client Name",enableColumnResizing:!0,enableCellEdit:!0,enableFiltering:!1,minWidth:150}];$scope.columns=angular.copy(_columns);$scope.gridOpts2={columnDefs:$scope.columns,data:_param.data,enablePinning:!1,enableSorting:!0,enableFiltering:!0,enableGridMenu:!0,enableColumnResizing:!0,exporterMenuPdf:!1,exporterMenuCsv:!1,exporterExcelFilename:"EMaintenance_Client.xlsx",exporterExcelSheetName:"EMaintenance_Client",onRegisterApi:function(gridApi){$scope.gridApi=gridApi;gridApi.edit.on.afterCellEdit($scope,function(rowEntity,colDef,newValue,oldValue){newValue!==oldValue&&(rowEntity.isDirty=!0)});$scope.gridApi.grid.clearAllFilters=function(){$scope.gridOpts2.columnDefs=[];$timeout(function(){$scope.gridOpts2.columnDefs=angular.copy(_columns)},2)}},exporterExcelCustomFormatters:function(grid,workbook,docDefinition){var stylesheet=workbook.getStyleSheet(),stdStyle=stylesheet.createFontStyle({size:9,fontName:"Calibri"}),boldStyle=stylesheet.createFontStyle({size:9,fontName:"Calibri",bold:!0}),aFormatDefn={font:boldStyle.id,alignment:{wrapText:!0}},formatter=stylesheet.createFormat(aFormatDefn),dateFormatter,singleDefn;return $scope.formatters.bold=formatter,dateFormatter=stylesheet.createSimpleFormatter("date"),$scope.formatters.date=dateFormatter,aFormatDefn={font:stdStyle.id,fill:{type:"pattern",patternType:"solid",fgColor:"FFFFC7CE"},alignment:{wrapText:!0}},singleDefn={font:stdStyle.id,format:"#,##0.0"},formatter=stylesheet.createFormat(aFormatDefn),$scope.formatters.red=formatter,Object.assign(docDefinition.styles,$scope.formatters),docDefinition},exporterExcelHeader:function(grid,workbook,sheet){var stylesheet=workbook.getStyleSheet(),formatterId=stylesheet.createFormat({font:{size:11,fontName:"Calibri",bold:!0},alignment:{wrapText:!0}}),cols;sheet.mergeCells("B1","C1");cols=[];cols.push({value:""});cols.push({value:"SKF",metadata:{style:formatterId.id}});sheet.data.push(cols)},exporterFieldFormatCallback:function(grid,row,gridCol,cellValue){var formatterId=null;return gridCol.field==="name"&&cellValue&&cellValue.startsWith("W")&&(formatterId=$scope.formatters.red.id),gridCol.field==="updatedDate"&&(formatterId=$scope.formatters.date.id),formatterId?{metadata:{style:formatterId}}:null},exporterColumnScaleFactor:4.5,exporterFieldApplyFilters:!0};$scope.save=function(){var postData=[],postUrl;angular.forEach($scope.gridOpts2.data,function(val){val.isDirty===!0&&postData.push(val)});$scope.isProcess||($scope.isProcess=!0,postUrl="/Client/SaveMultilingual",$http.post(postUrl,JSON.stringify(postData)).then(function(response){response.data&&(response.data.toString().indexOf("<!DOCTYPE html>")>=0?alertFactory.setMessage({type:"warning",msg:"User not a privileged to perform this Action. Please Contact your Admin.."}):alertFactory.setMessage({msg:"Data updated Successfully."}));$scope.isProcess=!1},function(response){$scope.isProcess=!1;response.data.message&&alertFactory.setMessage({type:"warning",msg:String(response.data.message),exc:String(response.data.exception)})}))};$scope.ok=function(){$uibModalInstance.close($scope.rowData)};$scope.cancel=function(){$uibModalInstance.dismiss("cancel")}});