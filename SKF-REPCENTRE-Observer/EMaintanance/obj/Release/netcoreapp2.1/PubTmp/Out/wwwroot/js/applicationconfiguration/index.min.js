app.requires.push("commonMethods","ngTouch","ui.grid","ui.grid.selection","angucomplete-alt","ui.grid.resizeColumns","ui.grid.edit","ui.grid.cellNav","ui.grid.pinning","ui.grid.exporter");app.controller("skfCtrl",function($scope,$filter,uiGridConstants,$http,$uibModal,languageFactory,alertFactory,$timeout){$scope.startIndex=1;$scope.isCreate=!1;$scope.isSearch=!0;$scope.isEdit=!1;$scope.isclear=!0;$scope.readOnlyPage=!1;$scope.formatters={};$scope.language=null;$scope.c_active="All";var _columns=[{name:"sno",displayName:"#",width:"4%",minWidth:50,enableFiltering:!1,enableSorting:!1,cellTemplate:'<div class="ui-grid-cell-contents">{{grid.renderContainers.body.visibleRowCache.indexOf(row) + 1}}<\/div>'},{name:"AppConfigCode",displayName:"AppConfig Code",enableColumnResizing:!0,width:"10%",minWidth:150,aggregationHideLabel:!1,aggregationType:uiGridConstants.aggregationTypes.count,footerCellTemplate:'<div class="ui-grid-cell-contents" >Total Count: {{col.getAggregationValue() | number:0 }}<\/div>'},{name:"AppConfigName",displayName:"AppConfig Name",enableColumnResizing:!0,width:"24%",minWidth:150},{name:"AppConfigValue",displayName:"AppConfig Value",enableColumnResizing:!0,width:"15%",minWidth:150},{name:"Descriptions",displayName:"Descriptions",enableColumnResizing:!0,width:"15%",minWidth:300},{name:"Active",displayName:"Status",cellTemplate:'<div class="status"> {{ row.entity.Active == "Y" ? "&nbsp;Active" : "&nbsp;Inactive" }}<\/div>',cellClass:function(grid,row,col){return grid.getCellValue(row,col)==="Y"?"green":grid.getCellValue(row,col)==="N"?"red":void 0},width:"12%",minWidth:100},{name:"Action",enableFiltering:!1,enableSorting:!1,cellTemplate:'<div class="ui-grid-cell-contents"><a ng-click="grid.appScope.editRow(row.entity) || grid.appScope.toggleCreate()" <i class="fa fa-pencil-square-o icon-space-before" tooltip-append-to-body="true" uib-tooltip="Edit AppConfig" tooltip-class="customClass"><\/i><\/a><\/div>',width:"9%",minWidth:100}];$scope.editRow=function(row){$scope.isEdit=!0;$scope.clearModal();$scope.isCreate=!1;$scope.isSearch=!1;$scope.AppConfig=row};$scope.clearOut=function(){$scope.isEdit=!1;$scope.isSearch=!1;$scope.clearModal()};$scope.searchToggle=function(){$scope.isCreate=!1;$scope.isEdit=!1;$scope.isSearch=!0;$scope.gridOpts.data=[]};$scope.createToggle=function(){$scope.isCreate=!0;$scope.clearOut()};$scope.clear=function(){$scope.c_active="All"};$scope.resetForm=function(){setTimeout(function(){for(var elements=document.getElementsByName("userForm")[0].querySelectorAll(".has-error"),i=0;i<elements.length;i++)elements[i].className=elements[i].className.replace(/\has-error\b/g,"")},500)};$scope.clearModal=function(){$scope.readOnlyPage=!1;$scope.isProcess=!1;$scope.AppConfig={AppConfigId:0,AppConfigCode:null,AppConfigName:null,AppConfigValue:null,Descriptions:null,Active:"Y"};$scope.resetForm()};$scope.columns=angular.copy(_columns);$scope.gridOpts={columnDefs:$scope.columns,enableFiltering:!0,enablePinning:!0,enableColumnResizing:!0,showColumnFooter:!0,enableRowSelection:!0,enableSorting:!0,onRegisterApi:function(gridApi){$scope.gridApi=gridApi;$scope.gridApi.core.refresh();$scope.gridApi.grid.clearAllFilters=function(){$scope.gridOpts.columnDefs=[];$timeout(function(){$scope.gridOpts.columnDefs=angular.copy(_columns)},2)}},enableGridMenu:!0,enableSelectAll:!1,exporterMenuPdf:!1,exporterMenuCsv:!1,exporterExcelFilename:"EMaintenance_AppConfiguration.xlsx",exporterExcelSheetName:"EMaintenance_AppConfiguration",exporterExcelCustomFormatters:function(grid,workbook,docDefinition){var stylesheet=workbook.getStyleSheet(),stdStyle=stylesheet.createFontStyle({size:9,fontName:"Calibri"}),boldStyle=stylesheet.createFontStyle({size:9,fontName:"Calibri",bold:!0}),aFormatDefn={font:boldStyle.id,alignment:{wrapText:!0}},formatter=stylesheet.createFormat(aFormatDefn),dateFormatter,singleDefn;return $scope.formatters.bold=formatter,dateFormatter=stylesheet.createSimpleFormatter("date"),$scope.formatters.date=dateFormatter,aFormatDefn={font:stdStyle.id,fill:{type:"pattern",patternType:"solid",fgColor:"FFFFC7CE"},alignment:{wrapText:!0}},singleDefn={font:stdStyle.id,format:"#,##0.0"},formatter=stylesheet.createFormat(aFormatDefn),$scope.formatters.red=formatter,Object.assign(docDefinition.styles,$scope.formatters),docDefinition},exporterExcelHeader:function(grid,workbook,sheet){var stylesheet=workbook.getStyleSheet(),formatterId=stylesheet.createFormat({font:{size:11,fontName:"Calibri",bold:!0},alignment:{wrapText:!0}}),cols;sheet.mergeCells("B1","C1");cols=[];cols.push({value:""});cols.push({value:"SKF",metadata:{style:formatterId.id}});sheet.data.push(cols)},exporterFieldFormatCallback:function(grid,row,gridCol,cellValue){var formatterId=null;return gridCol.field==="name"&&cellValue&&cellValue.startsWith("W")&&(formatterId=$scope.formatters.red.id),gridCol.field==="updatedDate"&&(formatterId=$scope.formatters.date.id),formatterId?{metadata:{style:formatterId}}:null},exporterColumnScaleFactor:4.5,exporterFieldApplyFilters:!0};$scope.loadData=function(){$scope.gridOpts.data=[];$scope.isPageLoad=!0;var _url="/ApplicationConfiguration/GetApplicationConfigurationByStatus?acId=&status="+$scope.c_active;$http.get(_url).then(function(response){$scope.gridOpts.data=response.data;angular.forEach($scope.gridOpts.data,function(val,i){val.sno=i+1})})};$scope.$watch(function(){return languageFactory.getLanguage()},function(newValue,oldValue){newValue!=oldValue&&newValue&&($scope.language=newValue,$scope.isPageLoad&&$scope.loadData())});$scope.save=function(){if($scope.userForm.$valid&&!$scope.isProcess&&!$scope.readOnlyPage){$scope.isProcess=!0;$http.post("/ApplicationConfiguration/Create",JSON.stringify($scope.AppConfig)).then(function(response){response.data&&(response.data.toString().indexOf("<!DOCTYPE html>")>=0?alertFactory.setMessage({type:"warning",msg:"User not a privileged to perform this Action. Please Contact your Admin.."}):(alertFactory.setMessage({msg:"Data saved Successfully."}),$scope.clearOut(),$scope.loadData()));$scope.isProcess=!1},function(response){$scope.isProcess=!1;response.data.message&&alertFactory.setMessage({type:"warning",msg:String(response.data.message),exc:String(response.data.exception)})})}};$scope.update=function(){if($scope.userForm.$valid&&!$scope.isProcess&&!$scope.readOnlyPage){$scope.isProcess=!0;$http.post("/ApplicationConfiguration/Create",JSON.stringify($scope.AppConfig)).then(function(response){response.data&&(response.data.toString().indexOf("<!DOCTYPE html>")>=0?alertFactory.setMessage({type:"warning",msg:"User not a privileged to perform this Action. Please Contact your Admin.."}):(alertFactory.setMessage({msg:"Data updated Successfully."}),$scope.searchToggle(),$scope.loadData()));$scope.isProcess=!1},function(response){$scope.isProcess=!1;response.data.message&&alertFactory.setMessage({type:"warning",msg:String(response.data.message),exc:String(response.data.exception)})})}}});