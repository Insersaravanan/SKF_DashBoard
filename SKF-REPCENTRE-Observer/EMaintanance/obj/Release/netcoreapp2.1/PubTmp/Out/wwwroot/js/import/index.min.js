app.requires.push("commonMethods","ngTouch","ui.grid","ui.grid.selection","ui.grid.resizeColumns","ui.grid.edit","ui.grid.cellNav","ui.grid.pinning","ui.grid.exporter");app.controller("skfImportModalCtrl",function($scope,$timeout,$http,$uibModalInstance,params){$scope.formatters={};$scope.alerts=[];$scope.closeAlert=function(index){try{$scope.alerts.splice(index,1)}catch(e){}};$scope.gridOptions={rowTemplate:"<div ng-class=\"{'invalid-input':row.entity.validationStatus == 'E','valid-input':row.entity.validationStatus == 'V'}\"><div ng-repeat=\"(colRenderIndex, col) in colContainer.renderedColumns track by col.colDef.name\" class=\"ui-grid-cell\" ng-class=\"{ 'ui-grid-row-header-cell': col.isRowHeader }\" ui-grid-cell><\/div><\/div>",enableFiltering:!0,onRegisterApi:function(gridApi){$scope.gridApi=gridApi;$scope.gridApi.core.refresh()},enableGridMenu:!0,enableSelectAll:!1,exporterMenuPdf:!1,exporterMenuCsv:!1,exporterExcelFilename:"EMaintenance_Export_"+params.templateName+".xlsx",exporterExcelSheetName:params.templateName,exporterExcelCustomFormatters:function(grid,workbook,docDefinition){var stylesheet=workbook.getStyleSheet(),stdStyle=stylesheet.createFontStyle({size:9,fontName:"Calibri"}),boldStyle=stylesheet.createFontStyle({size:9,fontName:"Calibri",bold:!0}),aFormatDefn={font:boldStyle.id,alignment:{wrapText:!0}},formatter=stylesheet.createFormat(aFormatDefn),dateFormatter,singleDefn;return $scope.formatters.bold=formatter,dateFormatter=stylesheet.createSimpleFormatter("date"),$scope.formatters.date=dateFormatter,aFormatDefn={font:stdStyle.id,fill:{type:"pattern",patternType:"solid",fgColor:"FFFFC7CE"},alignment:{wrapText:!0}},singleDefn={font:stdStyle.id,format:"#,##0.0"},formatter=stylesheet.createFormat(aFormatDefn),$scope.formatters.red=formatter,Object.assign(docDefinition.styles,$scope.formatters),docDefinition},exporterExcelHeader:function(grid,workbook,sheet){var stylesheet=workbook.getStyleSheet(),formatterId=stylesheet.createFormat({font:{size:11,fontName:"Calibri",bold:!0},alignment:{wrapText:!0}}),cols;sheet.mergeCells("B1","C1");cols=[];cols.push({value:""});cols.push({value:"SKF",metadata:{style:formatterId.id}});sheet.data.push(cols)},exporterFieldFormatCallback:function(grid,row,gridCol,cellValue){var formatterId=null;return gridCol.field==="name"&&cellValue&&cellValue.startsWith("W")&&(formatterId=$scope.formatters.red.id),gridCol.field==="updatedDate"&&(formatterId=$scope.formatters.date.id),formatterId?{metadata:{style:formatterId}}:null},exporterColumnScaleFactor:4.5,exporterFieldApplyFilters:!0};$scope.reset=function(){$scope.gridOptions.data=[];$scope.gridOptions.columnDefs=[];$scope.stacked=[]};$scope.template=params.templateName;$scope.loadColumns=function(){$scope.gridOptions.colTemp=[];$http.get("/Lookup/GetLookupByName?lId="+params.language.LanguageId+"&lName="+$scope.template+"_Template").then(function(response){response.data&&response.data.length>0&&($scope.gridOptions.colTemp=response.data.map(function(d){var obj={};return obj[d.LValue]="",obj}))})};$scope.loadColumns(params.templateName);$scope.downloadTemplate=function(){var ws=XLSX.utils.json_to_sheet($scope.gridOptions.colTemp),wb=XLSX.utils.book_new();XLSX.utils.book_append_sheet(wb,ws,$scope.template+"_Template");XLSX.writeFile(wb,$scope.template+"_Template.xlsx")};$scope.ok=function(){$uibModalInstance.close($scope.rowData)};$scope.cancel=function(){$uibModalInstance.dismiss("cancel")};$scope.cancelProgress=function(){$scope.progressCall(!1)};$scope.saveData=function(){$scope.SaveDataQueue=angular.copy($scope.gridOptions.data);$scope.progressCall(!0)};$scope.progressCall=function(flag){$scope.isProgress=flag;$timeout(function(){var _total=$scope.gridOptions.data.length,_progressed=_total-$scope.SaveDataQueue.length,_errorCount=$scope.gridOptions.data.filter(data=>data.validationStatus&&data.validationStatus==="E").length;flag?$scope.sendDataToImport(5):$scope.SaveDataQueue=[];$scope.stacked=[];$scope.stacked.push({value:Math.round((_progressed-_errorCount)/_total*100),type:"success",title:_progressed-_errorCount+" items Successfully updated"});$scope.stacked.push({value:Math.round(_errorCount/_total*100),type:"warning",title:_errorCount+" items having issue to upload."})},1)};$scope.updateGridData=function(col,flag){var _grid=$scope.gridOptions.data,_flag;angular.forEach(col,function(val,i){for(var i=0,len=_grid.length;i<len;i++)if(_grid[i].ReferenceNo==val.ReferenceNo){_grid[i].validationStatus=val.validationStatus;_grid[i].ValidationResult=val.ValidationResult;break}});_flag=$scope.SaveDataQueue.length>0&&flag?!0:!1;$scope.progressCall(_flag)};$scope.sendDataToImport=function(chunk){var postData={},postUrl;postData.PType=$scope.template;postData.LanguageId=params.language.LanguageId;postData.Flag="Save";postData.Detail=$scope.SaveDataQueue.splice(0,chunk);postUrl="/MasterImport/Import";$http.post(postUrl,JSON.stringify(postData)).then(function(response){if(response.data&&response.data.length)$scope.updateGridData(JSON.parse(response.data[0].MasterImport),!0);else if(response.data.isException){$scope.alerts.push({type:"warning",msg:String(response.data.message)});var _col=postData.Detail.map(function(item){return item.validationStatus="E",item.ValidationResult=response.data.message,item});$scope.updateGridData(_col,!1)}},function(response){$scope.alerts.push({type:"warning",msg:String(response.data.message)});var _col=postData.Detail.map(function(item){return item.validationStatus="E",item.ValidationResult=response.data.message,item});$scope.updateGridData(_col,!1)})}});app.directive("fileread",[function(){return{scope:{opts:"="},link:function($scope,$elm){$elm.on("change",function(changeEvent){var reader=new FileReader;$scope.opts.invalidUpload=!1;reader.onload=function(evt){$scope.$apply(function(){var _data=evt.target.result,workbook=XLSX.read(_data,{type:"binary"}),headerNames=XLSX.utils.sheet_to_json(workbook.Sheets[workbook.SheetNames[0]],{header:1})[0],data=XLSX.utils.sheet_to_json(workbook.Sheets[workbook.SheetNames[0]]),validateFile;$scope.opts.columnDefs=[];$scope.opts.columnDefs.push({field:"Sno",width:55,enableFiltering:!1,cellTemplate:'<div class="ui-grid-cell-contents"><p>{{grid.renderContainers.body.visibleRowCache.indexOf(row) + 1}}<\/p><\/div>'});validateFile=!0;headerNames.forEach(function(h){validateFile&&($scope.opts.columnDefs.push({field:h,minWidth:150}),validateFile=$scope.opts.colTemp.some(function(val){return val[h]!==undefined}))});$scope.opts.columnDefs.push({field:"ValidationResult",minWidth:150,cellTemplate:'<div class="ui-grid-cell-contents"><p tooltip-append-to-body="true" uib-tooltip="{{row.entity.ValidationResult}}" tooltip-class="customClass import-tooltip">{{row.entity.ValidationResult}}<\/p><\/div>'});validateFile&&$scope.opts.colTemp.length===$scope.opts.columnDefs.length-2?$scope.opts.data=data.map(function(item,i){return item.ReferenceNo=i+1,item}):($scope.opts.columnDefs=[],$scope.opts.invalidUpload=!0);$elm.val(null)})};reader.readAsBinaryString(changeEvent.target.files[0])})}}}]);