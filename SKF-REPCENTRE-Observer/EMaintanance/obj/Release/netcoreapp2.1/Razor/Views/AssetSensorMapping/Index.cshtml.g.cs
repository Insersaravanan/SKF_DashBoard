#pragma checksum "C:\SSK\SKF\Source Backup\REP-Online-Dashboard-30-04-2020\Observer-Dashboard-30-04-2020\EMaintanance\Views\AssetSensorMapping\Index.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "6d84d34b868c036e9c92a18ccf7663d20f887117"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_AssetSensorMapping_Index), @"mvc.1.0.view", @"/Views/AssetSensorMapping/Index.cshtml")]
[assembly:global::Microsoft.AspNetCore.Mvc.Razor.Compilation.RazorViewAttribute(@"/Views/AssetSensorMapping/Index.cshtml", typeof(AspNetCore.Views_AssetSensorMapping_Index))]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#line 1 "C:\SSK\SKF\Source Backup\REP-Online-Dashboard-30-04-2020\Observer-Dashboard-30-04-2020\EMaintanance\Views\_ViewImports.cshtml"
using EMaintanance;

#line default
#line hidden
#line 2 "C:\SSK\SKF\Source Backup\REP-Online-Dashboard-30-04-2020\Observer-Dashboard-30-04-2020\EMaintanance\Views\_ViewImports.cshtml"
using EMaintanance.Models;

#line default
#line hidden
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"6d84d34b868c036e9c92a18ccf7663d20f887117", @"/Views/AssetSensorMapping/Index.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"0d99d051589a223aabf24b8387c074a6009fff84", @"/Views/_ViewImports.cshtml")]
    public class Views_AssetSensorMapping_Index : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    {
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_0 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("href", new global::Microsoft.AspNetCore.Html.HtmlString("~/lib/angular/ui-grid/ui-grid.min.css"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_1 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("rel", new global::Microsoft.AspNetCore.Html.HtmlString("stylesheet"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_2 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("href", new global::Microsoft.AspNetCore.Html.HtmlString("~/lib/angucomplete/antocomplete-alt.css"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_3 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/lib/angular/ui-grid/ui-grid.min.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_4 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/lib/angucomplete/angucomplete-alt.min.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_5 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/lib/angular/ui-grid/export/csv.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_6 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/lib/angular/ui-grid/export/pdfmake.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_7 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/lib/angular/ui-grid/export/vfs_fonts.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_8 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/lib/angular/ui-grid/export/lodash.min.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_9 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/lib/angular/ui-grid/export/jszip.min.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_10 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/lib/angular/ui-grid/export/excel-builder.dist.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_11 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", "~/js/assetsensormapping/index.js", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_12 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("include", "Development", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_13 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", "~/js/assetsensormapping/index.min.js", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_14 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("exclude", "Development", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        #line hidden
        #pragma warning disable 0169
        private string __tagHelperStringValueBuffer;
        #pragma warning restore 0169
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperExecutionContext __tagHelperExecutionContext;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner __tagHelperRunner = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner();
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __backed__tagHelperScopeManager = null;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __tagHelperScopeManager
        {
            get
            {
                if (__backed__tagHelperScopeManager == null)
                {
                    __backed__tagHelperScopeManager = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager(StartTagHelperWritingScope, EndTagHelperWritingScope);
                }
                return __backed__tagHelperScopeManager;
            }
        }
        private global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper;
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.EnvironmentTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_EnvironmentTagHelper;
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.ScriptTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_ScriptTagHelper;
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
            BeginContext(0, 2, true);
            WriteLiteral("\r\n");
            EndContext();
#line 2 "C:\SSK\SKF\Source Backup\REP-Online-Dashboard-30-04-2020\Observer-Dashboard-30-04-2020\EMaintanance\Views\AssetSensorMapping\Index.cshtml"
  
    ViewData["Title"] = "Asset Sensor Mapping";
    Layout = "~/Views/Shared/_ObserverLayout.cshtml";

#line default
#line hidden
            BeginContext(113, 70, false);
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("link", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.SelfClosing, "5b5b07ee96c54a8cadf2bfe57694c49f", async() => {
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_0);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_1);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            EndContext();
            BeginContext(183, 2, true);
            WriteLiteral("\r\n");
            EndContext();
            BeginContext(185, 72, false);
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("link", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.SelfClosing, "b3e7b4832327466f9cd4fcd23e53d43d", async() => {
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_2);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_1);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            EndContext();
            BeginContext(257, 10113, true);
            WriteLiteral(@"

<div ng-controller=""skfCtrl"" class=""asset-sensor-mapping content-wrapper"">
    <div class=""container-fluid"" id=""Taxonomy"">
        <div class=""row heading-wrapper"">
            <div class=""col-md-3 heading assetMappingHeader"">
                <h4 class=""page-header text-primary"">Asset - Sensor Mapping</h4>
            </div>
            <div class=""col-md-9 menu-button"">
            </div>
        </div>
        <div>
            <div class=""row"">
                <div class=""col-md-12"">
                    <div class=""col-md-3 tree-wrapper"">
                        <span class=""tree-filter"">Search: <input class=""search-filter"" type=""text"" ng-model=""search""><i class=""fa fa-close search"" ng-click=""search = ''""></i> </span>
                        <div class=""tree-hierarchy"">
                            <span ng-if=""data[0].IsOClientMapped === 'True'"" class=""expand-icon"" ng-click=""expandTree()""><i ng-class=""{'fa fa-plus-square': !isExpand, 'fa fa-minus-square': isExpand}""></i>{{isExpand ?""&nbs");
            WriteLiteral(@"p;Collapse All"" : ""&nbsp;Expand All""}}</span>
                            <span ng-if=""data[0].IsOClientMapped === 'false'""><i class=""fa fa-minus-square""></i> &nbsp;Collapse All</span>
                            <ul ng-repeat=""h in data | filter:search"" class=""tree-structure"">
                                <li>
                                    <i class=""fa tree-icons"" ng-if="" h.PlantArea && h.IsOClientMapped == 'True'"" ng-click=""ToggleFilter(h)"" ng-class=""{'fa fa-plus-square-o': h.Toggle, 'fa fa-minus-square-o': !h.Toggle}""></i>
                                    <span>
                                        <i class=""fa fa-user-circle-o icon-filter tree-icons""></i>&nbsp;{{h.ClientSiteName}}  &nbsp;
                                        <a ng-if=""h.IsOClientMapped == 'false'"" tooltip-append-to-body=""true"" uib-tooltip=""Observer client node not mapped!"" class=""fa fa-exclamation-triangle icon-filter not-mapped-icon""></a>
                                    </span>
                             ");
            WriteLiteral(@"       <ul ng-if=""h.IsOClientMapped == 'True'"" ng-repeat=""i in h.PlantArea | filter:search"" class=""child"" ng-hide=""h.Toggle"">
                                        <li>
                                            &nbsp;<i class=""fa tree-icons"" ng-if=""i.Equipments"" ng-click=""ToggleFilter(i)"" ng-class=""{'fa fa-plus-square-o': i.Toggle, 'fa fa-minus-square-o': !i.Toggle}""></i>
                                            <span>
                                                <i class=""fa fa-map-marker icon-filter""></i>
                                                &nbsp;{{i.PlantAreaName}}
                                            </span>
                                            <ul ng-repeat=""j in i.Equipments | filter:search"" class=""child"" ng-hide=""i.Toggle"">
                                                <li>
                                                    <i class=""fa tree-icons"" ng-if=""j.Units"" ng-click=""ToggleFilter(j)"" ng-class=""{'fa fa-plus-square-o': j.Toggle, 'fa fa-minus-square-o");
            WriteLiteral(@"': !j.Toggle}""></i>
                                                    <span>
                                                        <i class=""fa fa-superpowers icon-filter""></i>
                                                        {{j.EquipmentName}}
                                                    </span>
                                                    <ul ng-repeat=""k in j.Units| filter:search"" class=""child"" id=""unit-child"" ng-hide=""j.Toggle"">
                                                        <li>
                                                            <span>
                                                                &nbsp; <i class=""fa tree-icons"" ng-if=""k.IntermediateUnit ||k.DriveUnit || k.DrivenUnit"" ng-click=""ToggleFilter(k)"" ng-class=""{'fa fa-plus-square-o': k.Toggle, 'fa fa-minus-square-o': !k.Toggle}""></i>
                                                                <i class=""fa tree-icons"" ng-class=""{'fa fa-cog': k.UnitType=='DR', 'fa fa-cogs': k.UnitType == ");
            WriteLiteral(@"'IN','fa fa-modx': k.UnitType =='DN'}""></i>
                                                                {{k.UnitName}}&nbsp;<span ng-class=""{noAssetCount:k.AssetCount == 0}"" class=""asset-count"">{{k.AssetCount}}</span>
                                                            </span>
                                                            <ul ng-repeat=""l in k.DriveUnit| filter:search"" class=""child"" ng-hide=""k.Toggle"">
                                                                <li>
                                                                    &nbsp;
                                                                    <span ng-class=""{'selected-asset-type':l.UnitId == selectedUnitId}"">
                                                                        <i class=""fa fa-wrench icon-filter""></i>
                                                                        <span class=""tree-asset-link"" ng-click=""ShowAsset(k.UnitType, l.UnitId,l.IsOAssetMapped,h.ClientSiteName,i.PlantAreaNa");
            WriteLiteral(@"me,j.EquipmentName,h.ClientSiteId,i.PlantAreaId)"">&nbsp;{{l.IdentificationName}}</span>
                                                                        <a ng-if=""l.IsOAssetMapped == 'false'"" tooltip-append-to-body=""true"" uib-tooltip=""Sensor not mapped !"" class=""fa fa-exclamation-triangle icon-filter not-mapped-icon""></a>
                                                                    </span>
                                                                </li>
                                                            </ul>
                                                            <ul ng-repeat=""l in k.IntermediateUnit| filter:search"" class=""child"" ng-hide=""k.Toggle"">
                                                                <li>
                                                                    &nbsp;
                                                                    <span ng-class=""{'selected-asset-type':l.UnitId == selectedUnitId}"">
                                          ");
            WriteLiteral(@"                              <i class=""fa fa-wrench icon-filter""></i>
                                                                        <span class=""tree-asset-link"" ng-click=""ShowAsset(k.UnitType, l.UnitId,l.IsOAssetMapped,h.ClientSiteName,i.PlantAreaName,j.EquipmentName,h.ClientSiteId,i.PlantAreaId)"">&nbsp;{{l.IdentificationName}}</span>
                                                                        &nbsp; <a ng-if=""l.IsOAssetMapped == 'false'"" tooltip-append-to-body=""true"" uib-tooltip=""Sensor not mapped !"" class=""fa fa-exclamation-triangle icon-filter not-mapped-icon""></a>
                                                                    </span>
                                                                </li>
                                                            </ul>
                                                            <ul ng-repeat=""l in k.DrivenUnit| filter:search"" class=""child"" ng-hide=""k.Toggle"">
                                                               ");
            WriteLiteral(@" <li>
                                                                    &nbsp;
                                                                    <span ng-class=""{'selected-asset-type':l.UnitId == selectedUnitId}"">
                                                                        <i class=""fa fa-wrench icon-filter""></i>
                                                                        <span class=""tree-asset-link"" ng-click=""ShowAsset(k.UnitType, l.UnitId, l.IsOAssetMapped,h.ClientSiteName,i.PlantAreaName,j.EquipmentName,h.ClientSiteId,i.PlantAreaId)"">&nbsp;{{l.IdentificationName}}</span>
                                                                        &nbsp;  <a ng-if=""l.IsOAssetMapped == 'false'"" tooltip-append-to-body=""true"" uib-tooltip=""Sensor not mapped !"" class=""fa fa-exclamation-triangle icon-filter not-mapped-icon""></a>
                                                                    </span>
                                                                </li>
         ");
            WriteLiteral(@"                                                   </ul>
                                                        </li>
                                                    </ul>
                                                </li>
                                            </ul>
                                        </li>
                                    </ul>
                                </li>
                            </ul>
                        </div>
                    </div>
                    <div class=""col-md-9 sensor-detail"" ng-hide=""!isAsset"">
                        <div class=""row heading-wrapper"">
                            <div class=""col-md-6 heading"">
                                <h4 class=""page-header text-primary""><span class=""unit-type"">{{selectedUnitType}}</span> - {{SensorDetail.IdentificationName}}</h4>
                            </div>
                            <div class=""col-md-6 menu-button"">
                                <a ng-if=""SensorDetai");
            WriteLiteral(@"l.ObserverNodeId"" ng-click=""save()"" title=""Save""><i class=""fa fa-save icon-filter""></i>Save</a>
                                <a ng-click=""cancel()"" title=""Cancel""><i class=""fa fa-close icon-filter""></i>Cancel</a>
                            </div>
                        </div>
                        <div class=""asset-unmapped"" ng-if=""!SensorDetail.ObserverNodeId"">
                            <div class=""menu-button"">
                                <h4><i class=""fa fa-exclamation-triangle icon-filter not-mapped-icon"" tooltip-append-to-body=""true"" uib-tooltip=""Sensor not mapped !""></i> &nbsp;<strong>{{SensorDetail.IdentificationName}}</strong> has not been mapped with observer node !</h4>
                                <a ng-click=""assetMapping(SensorDetail)"" title=""Asset Mapping""><i class=""fa fa-link icon-filter""></i><span>Click here to map with Observer Node</span></a>
");
            EndContext();
            BeginContext(10495, 389, true);
            WriteLiteral(@"                            </div>
                        </div>
                        <div class=""asset-details"" ng-if=""SensorDetail.ObserverNodeId"">
                            <div class=""col-md-12"">
                                <label class=""control-label"">
                                    <strong>Emaintenance Path: </strong>
                                </label>
");
            EndContext();
            BeginContext(10960, 1386, true);
            WriteLiteral(@"                            <span>{{EMaintClientName}}\{{EMaintPlantArea}}\{{EMaintEquipment}}\{{SensorDetail.IdentificationName}}</span>
                            </div>
                            <div class=""col-md-12"">
                                <label class=""control-label"">
                                    <strong>Observer Path:</strong>
                                </label>
                                <span>{{SensorDetail.ObserverNodePath}}</span>
                            </div>
                            <div class=""col-md-12"">
                                <label class=""control-label"">
                                    <strong> Asset Type: </strong>
                                </label>
                                <span ng-switch=""SensorDetail.UnitType"">
                                    <span ng-switch-when=""DR"">
                                        Drive Unit
                                    </span>
                                    <span ng-");
            WriteLiteral(@"switch-when=""IN"">
                                        Intermediate Unit
                                    </span>
                                    <span ng-switch-when=""DN"">
                                        Driven Unit
                                    </span>
                                </span>
                            </div>
");
            EndContext();
            BeginContext(12720, 12763, true);
            WriteLiteral(@"                        </div>
                        <div ng-if=""SensorDetail.ObserverNodeId"" class=""popup-user-role shaft-intermediate shaft-wrapper"">
                            <div class=""col-md-12 col-sm-12 input-field"" ng-repeat=""val in SensorDetail.Shaft | orderBy : ShaftOrder"">
                                <h3 class=""accordion"">
                                    <a ng-click=""showAcc(val.ShaftOrder)""> {{val.ShaftName}} </a>
                                </h3>
                                <div class=""accordion-content"" ng-show=""showMode{{val.ShaftOrder}}"">
                                    <div class=""col-md-12 col-sm-6 non-drive-end input-field"" ng-repeat=""i in val.DriveEnd"">
                                        <h5>Drive End</h5>
                                        <div class=""col-md-6 col-sm-6 input-field"">
                                            <label class=""control-label"">Node/Sensor*</label>
                                            <ui-select style=""width: 8");
            WriteLiteral(@"00px;"" ng-model=""Sensor.IdNode"" theme=""bootstrap"" ng-disabled=""readOnlyPage"" on-select=""SaveSensor($select.selected, val.ShaftOrder, i.ShaftSide)"">
                                                <ui-select-match placeholder=""Select Sensor..."">{{$select.selected.NodeName}}</ui-select-match>
                                                <ui-select-choices repeat=""observer.NodeType as observer in ObserverSensorDDL | propsFilter: {NodeName: $select.search}"">
                                                    <div ng-bind-html=""observer.NodeName | highlight: $select.search""></div>
                                                    <strong>
                                                        <small style=""font-size:11px; white-space: normal;"">
                                                            Path: {{observer.NodePath}}
                                                        </small>
                                                    </strong>
                                           ");
            WriteLiteral(@"     </ui-select-choices>
                                            </ui-select>
                                        </div>
                                        <div class=""table-responsive col-md-12 col-sm-12"">
                                            <table>
                                                <tr style=""background:#ccc"">
                                                    <th style=""width:5%"">S.No</th>
                                                    <th style=""width:20%"">Sensor Name*</th>
                                                    <th style=""width:15%"">Title*</th>
                                                    <th style=""width:14%"">Sensor Orientation</th>
                                                    <th style=""width:14%"">Warning Threshold*</th>
                                                    <th style=""width:14%"">Alarm Threshold*</th>
                                                    <th style=""width:14%"">EU Name*</th>
                    ");
            WriteLiteral(@"                                <th style=""width:5%"">Action</th>
                                                </tr>
                                                <tr ng-repeat=""j in i.Sensors"">
                                                    <td style=""width:5%"">{{$index + 1}} </td>
                                                    <td tooltip-class=""customClass"" tooltip-append-to-body=""true"" uib-tooltip=""Sensor Path - {{j.NodePath}}""style=""width:20%;cursor:pointer;"">
                                                        <input ng-class=""{'invalid-sensor':!j.NodeName && isSensorInvalid}"" type=""text"" class=""form-control"" ng-model=""j.NodeName"" name=""NodeName"" />
                                                    </td>
                                                    <td style=""width:19%"">
                                                        <input ng-class=""{'invalid-sensor':!j.SensorTitle && isSensorInvalid}"" type=""text"" class=""form-control"" ng-model=""j.SensorTitle"" name=""NodeTitle""");
            WriteLiteral(@" />
                                                    </td>
                                                    <td style=""width:14%"">
                                                        <select ng-model=""j.SensorOrientationid"" class=""form-control search-input"" name=""SpeedType""
                                                                ng-options=""value.LookupId as value.LValue for (key, value) in SensorOrientationDDL""></select>
                                                    </td>
                                                    <td style=""width:14%"">
                                                        <input ng-class=""{'invalid-sensor':!j.Warning && isSensorInvalid}"" type=""number"" class=""form-control"" ng-model=""j.Warning"" name=""WarningThreshold"" />
                                                    </td>
                                                    <td style=""width:14%"">
                                                        <input ng-class=""{'invalid-sensor':!j.Alar");
            WriteLiteral(@"m && isSensorInvalid}"" type=""number"" class=""form-control"" ng-model=""j.Alarm"" name=""AlarmThreshold"" />
                                                    </td>
                                                    <td style=""width:9%"">
                                                        <select ng-class=""{'invalid-sensor':!j.EUnitId && isSensorInvalid}"" ng-model=""j.EUnitId"" class=""form-control search-input"" name=""EUnit""
                                                                ng-options=""value.EUnitId as value.EUName for (key, value) in EUnitDDL""></select>
                                                    </td>
                                                    <td style=""width:5%"">
                                                        <label class=""ui-grid-cell-contents"">
                                                            <a class=""expand-icon"" title=""Remove"" ng-click=""DirtyValues(i.ShaftSide, val.ShaftOrder, j)"">
                                                               ");
            WriteLiteral(@" <i class=""fa fa-trash""></i>
                                                            </a>
                                                        </label>
                                                    </td>
                                                </tr>
                                                <tr ng-show=""!i.Sensors.length"">
                                                    <td colspan=""8"">No Records Found</td>
                                                </tr>
                                            </table>
                                        </div>
                                    </div>
                                    <div class=""col-md-12 col-sm-6 non-drive-end input-field"" ng-repeat=""i in val.NonDriveEnd"">
                                        <h5>Non Drive End</h5>
                                        <div class=""col-md-6 col-sm-6 input-field"">
                                            <label class=""control-label"">Node/Sensor*</label>
 ");
            WriteLiteral(@"                                           <ui-select style=""width: 800px;"" ng-model=""Sensor.IdNode"" theme=""bootstrap"" ng-disabled=""readOnlyPage"" on-select=""SaveSensor($select.selected, val.ShaftOrder, i.ShaftSide)"">
                                                <ui-select-match placeholder=""Select Sensor..."">{{$select.selected.NodeName}}</ui-select-match>
                                                <ui-select-choices repeat=""observer.NodeType as observer in ObserverSensorDDL | propsFilter: {NodeName: $select.search}"">
                                                    <div ng-bind-html=""observer.NodeName | highlight: $select.search""></div>
                                                    <strong>
                                                        <small style=""font-size:11px; white-space: normal;"">
                                                            Path: {{observer.NodePath}}
                                                        </small>
                                     ");
            WriteLiteral(@"               </strong>
                                                </ui-select-choices>
                                            </ui-select>
                                        </div>
                                        <div class=""table-responsive col-md-12 col-sm-12"">
                                            <table>
                                                <tr style=""background:#ccc"">
                                                    <th style=""width:5%"">S.No</th>
                                                    <th style=""width:20%"">Sensor Name*</th>
                                                    <th style=""width:15%"">Title*</th>
                                                    <th style=""width:14%"">Sensor Orientation</th>
                                                    <th style=""width:14%"">Warning Threshold*</th>
                                                    <th style=""width:14%"">Alarm Threshold*</th>
                                        ");
            WriteLiteral(@"            <th style=""width:14%"">EU Name*</th>
                                                    <th style=""width:5%"">Action</th>
                                                </tr>
                                                <tr ng-repeat=""j in i.Sensors"">
                                                    <td style=""width:5%"">{{$index + 1}} </td>
                                                    <td tooltip-class=""customClass"" tooltip-append-to-body=""true"" uib-tooltip=""Sensor Path - {{j.NodePath}}"" style=""width:20%;cursor:pointer"">
                                                        <input ng-class=""{'invalid-sensor':!j.NodeName && isSensorInvalid}"" type=""text"" class=""form-control"" ng-model=""j.NodeName"" name=""WarningThreshold"" />
                                                    </td>
                                                    <td style=""width:19%"">
                                                        <input ng-class=""{'invalid-sensor':!j.SensorTitle && isSensorInvalid");
            WriteLiteral(@"}"" type=""text"" class=""form-control"" ng-model=""j.SensorTitle"" name=""NodeTitle"" />
                                                    </td>
                                                    <td style=""width:14%"">
                                                        <select ng-model=""j.SensorOrientationid"" class=""form-control search-input"" name=""SpeedType""
                                                                ng-options=""value.LookupId as value.LValue for (key, value) in SensorOrientationDDL""></select>
                                                    </td>
                                                    <td style=""width:14%"">
                                                        <input ng-class=""{'invalid-sensor':!j.Warning && isSensorInvalid}"" type=""number"" class=""form-control"" ng-model=""j.Warning"" name=""WarningThreshold"" />
                                                    </td>
                                                    <td style=""width:14%"">
                     ");
            WriteLiteral(@"                                   <input ng-class=""{'invalid-sensor':!j.Alarm && isSensorInvalid}"" type=""number"" class=""form-control"" ng-model=""j.Alarm"" name=""AlarmThreshold"" />
                                                    </td>
                                                    <td style=""width:9%"">
                                                        <select ng-class=""{'invalid-sensor':!j.EUnitId && isSensorInvalid}"" ng-model=""j.EUnitId"" class=""form-control search-input"" name=""EUnit""
                                                                ng-options=""value.EUnitId as value.EUName for (key, value) in EUnitDDL""></select>
                                                    </td>
                                                    <td style=""width:5%""><label class=""ui-grid-cell-contents""><a class=""expand-icon"" title=""Remove"" ng-click=""DirtyValues(i.ShaftSide, val.ShaftOrder, j)""><i class=""fa fa-trash""></i></a></label></td>
                                                </tr>
       ");
            WriteLiteral(@"                                         <tr ng-show=""!i.Sensors.length"">
                                                    <td colspan=""8"">No Records Found</td>
                                                </tr>
                                            </table>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
");
            EndContext();
            BeginContext(25789, 949, true);
            WriteLiteral(@"                    </div>
                    <div class=""col-md-9"" ng-hide=""isAsset ||data[0].IsOClientMapped == 'false'"""">
                        <div class=""col-md-12 heading"">
                            <h4 class=""no-record text-primary ng-binding"">  <i class=""fa fa-exclamation-triangle no-record-icon""></i> No Records Selected</h4>
                        </div>
                    </div>
                    <div class=""asset-unmapped"" ng-if=""data[0].IsOClientMapped == 'false'"">
                        <div class=""menu-button"">
                            <h4><i class=""fa fa-exclamation-triangle icon-filter not-mapped-icon"" tooltip-append-to-body=""true"" uib-tooltip=""Observer client node not mapped""></i> &nbsp;Observer client node not mapped !</h4>
                            <a ng-click=""clientMapping(data[0])"" title=""Client Mapping""><i class=""fa fa-link icon-filter""></i><span>Click here to map with Client!</span></a>
");
            EndContext();
            BeginContext(26859, 5241, true);
            WriteLiteral(@"                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<script type=""text/ng-template"" id=""skfAssetMappingSensorModal.html"">
    <div class=""popup-product"">
        <div class=""modal-header"">
            <span class=""model-breadcrumb"">Asset Mapping</span>
            <div class=""col-lg-8 col-md-8 col-sm-12 heading"">
                <h4 class=""page-header text-primary"">&nbsp;&nbsp;<strong>{{selectedAssetTye}}</strong> - {{EMaintAssetName}}</h4>
            </div>
            <div class=""col-lg-4 col-md-4 col-sm-12 create-button  menu-button"">
                <span class=""Pipe""></span>
                <a ng-click=""saveMapping()"" title=""Save""><i class=""fa fa-save icon-filter""></i><span>Save</span></a>
                <a ng-click=""cancel()"" title=""Close""><i class=""fa fa-close icon-filter""></i><span>Close</span></a>
            </div>
        </div>
        <div class=""modal-body"">
            <div class=""well"">
 ");
            WriteLiteral(@"               <ui-select autofocus=""true"" ng-model=""Selected"" theme=""bootstrap"" ng-disabled=""readOnlyPage"" style=""width: 800px;"" title=""Choose a Asset"" on-select=""save($select.selected)"" required>
                    <ui-select-match placeholder=""Select ..."">
                        {{$select.selected.NodeName}}
                    </ui-select-match>
                    <ui-select-choices repeat=""assetObsr.NodeName as assetObsr in AssetsDDL | propsFilter: {NodeName: $select.search} | limitTo: 100"">
                        <div ng-bind-html=""assetObsr.NodeName | highlight: $select.search""></div>
                        <strong>
                            <small style=""font-size:11px; white-space: normal;"">
                                Path: {{assetObsr.NodePath}}
                            </small>
                        </strong>
                    </ui-select-choices>
                </ui-select>
            </div>
        </div>
        <div class=""modal-footer"">
        </div>
    ");
            WriteLiteral(@"</div>
</script>


<script type=""text/ng-template"" id=""skfClientMappingSensorModal.html"">
    <div class=""popup-product"">
        <div class=""modal-header"">
            <span class=""model-breadcrumb"">Client / Mapping</span>
            <div class=""col-lg-8 col-md-8 col-sm-12 heading"">
                <h4 class=""page-header text-primary""><span class=""unit-type"">EMaintenance Client</span> -{{ClientName}} </h4>
            </div>
            <div class=""col-lg-4 col-md-4 col-sm-12 create-button  menu-button"">
                <span class=""Pipe""></span>
                <a ng-click=""save()"" title=""Save""><i class=""fa fa-save icon-filter""></i><span>Save</span></a>
                <a ng-click=""cancel()"" title=""Close""><i class=""fa fa-close icon-filter""></i><span>Close</span></a>
            </div>
        </div>
        <div class=""modal-body"">
            <form name=""userForm"" novalidate>
                <div class=""row create-form"">
                    <div class=""col-md-12"">
                    ");
            WriteLiteral(@"    <div class=""col-md-3 col-sm-5 input-field"">
                            <label class=""control-label"">Observer Database Account*</label>
                            <ui-select ng-model=""ClientMapping.ObserverDBId"" theme=""bootstrap"" ng-disabled=""readOnlyPage"" style=""width: 800px;"" on-select=""SaveODb($select.selected)"">
                                <ui-select-match placeholder=""Select Database..."">{{$select.selected.Name}}</ui-select-match>
                                <ui-select-choices repeat=""observer.Id as observer in ObserverdbDDL | propsFilter: {Name: $select.search}"">
                                    <div ng-bind-html=""observer.Name | highlight: $select.search""></div>
                                </ui-select-choices>
                            </ui-select>
                        </div>
                        <div class=""col-md-6 col-sm-7 input-field"">
                            <label class=""control-label"">Client Name (Observer)*</label>
                            <ui-selec");
            WriteLiteral(@"t ng-model=""ClientMapping.ObserverNodeId"" theme=""bootstrap"" ng-disabled=""readOnlyPage"" style=""width:1200px;"" on-select=""SaveOClient($select.selected)"">
                                <ui-select-match placeholder=""Select Client..."">{{$select.selected.NodeName}}</ui-select-match>
                                <ui-select-choices repeat=""OClient.IDNode as OClient in ObserverClientDDL | propsFilter: {NodeName: $select.search}"">
                                    <div ng-bind-html=""OClient.NodeName | highlight: $select.search""></div>
                                    <strong>
                                        <small style=""font-size:11px; white-space: normal;"">
                                            Path: {{OClient.NodePath}}
                                        </small>
                                    </strong>
                                </ui-select-choices>
                            </ui-select>
                        </div>
                    </div>
                <");
            WriteLiteral("/div>\r\n            </form>\r\n        </div>\r\n        <div class=\"modal-footer\">\r\n        </div>\r\n    </div>\r\n</script>\r\n\r\n");
            EndContext();
            DefineSection("Scripts", async() => {
                BeginContext(32118, 6, true);
                WriteLiteral("\r\n    ");
                EndContext();
                BeginContext(32124, 60, false);
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "d501fa39c9f74c97b3d4b7e712fd29f4", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_3);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                EndContext();
                BeginContext(32184, 6, true);
                WriteLiteral("\r\n    ");
                EndContext();
                BeginContext(32190, 66, false);
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "e20843a8eccf433187dbfe2c6f7bebef", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_4);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                EndContext();
                BeginContext(32256, 6, true);
                WriteLiteral("\r\n    ");
                EndContext();
                BeginContext(32262, 59, false);
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "66bd172683c04466ae6115c4acba69f4", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_5);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                EndContext();
                BeginContext(32321, 6, true);
                WriteLiteral("\r\n    ");
                EndContext();
                BeginContext(32327, 59, false);
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "dbf22ac3796344abb2dc3b01f6b6b86f", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_5);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                EndContext();
                BeginContext(32386, 6, true);
                WriteLiteral("\r\n    ");
                EndContext();
                BeginContext(32392, 63, false);
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "52346e32666c4191b5030a7a3a9d8b7c", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_6);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                EndContext();
                BeginContext(32455, 6, true);
                WriteLiteral("\r\n    ");
                EndContext();
                BeginContext(32461, 65, false);
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "a12df3e07738489d8ee9d24f5bf15bdd", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_7);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                EndContext();
                BeginContext(32526, 6, true);
                WriteLiteral("\r\n    ");
                EndContext();
                BeginContext(32532, 66, false);
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "79b1605496794d919f237a851c0ac889", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_8);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                EndContext();
                BeginContext(32598, 6, true);
                WriteLiteral("\r\n    ");
                EndContext();
                BeginContext(32604, 65, false);
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "5ceaa2c4dd684e9dbb5190151ab79f11", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_9);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                EndContext();
                BeginContext(32669, 6, true);
                WriteLiteral("\r\n    ");
                EndContext();
                BeginContext(32675, 74, false);
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "48c4f467fe634e49ae08feb37f1c3deb", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_10);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                EndContext();
                BeginContext(32749, 8, true);
                WriteLiteral("\r\n\r\n    ");
                EndContext();
                BeginContext(32757, 147, false);
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("environment", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "1f98a0e458904ada9cf06715f5efc139", async() => {
                    BeginContext(32792, 10, true);
                    WriteLiteral("\r\n        ");
                    EndContext();
                    BeginContext(32802, 82, false);
                    __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "097ffc108c67422badff0d06a8705988", async() => {
                    }
                    );
                    __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                    __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                    __Microsoft_AspNetCore_Mvc_TagHelpers_ScriptTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.ScriptTagHelper>();
                    __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_ScriptTagHelper);
                    __Microsoft_AspNetCore_Mvc_TagHelpers_ScriptTagHelper.Src = (string)__tagHelperAttribute_11.Value;
                    __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_11);
#line 401 "C:\SSK\SKF\Source Backup\REP-Online-Dashboard-30-04-2020\Observer-Dashboard-30-04-2020\EMaintanance\Views\AssetSensorMapping\Index.cshtml"
__Microsoft_AspNetCore_Mvc_TagHelpers_ScriptTagHelper.AppendVersion = true;

#line default
#line hidden
                    __tagHelperExecutionContext.AddTagHelperAttribute("asp-append-version", __Microsoft_AspNetCore_Mvc_TagHelpers_ScriptTagHelper.AppendVersion, global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
                    await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                    if (!__tagHelperExecutionContext.Output.IsContentModified)
                    {
                        await __tagHelperExecutionContext.SetOutputContentAsync();
                    }
                    Write(__tagHelperExecutionContext.Output);
                    __tagHelperExecutionContext = __tagHelperScopeManager.End();
                    EndContext();
                    BeginContext(32884, 6, true);
                    WriteLiteral("\r\n    ");
                    EndContext();
                }
                );
                __Microsoft_AspNetCore_Mvc_TagHelpers_EnvironmentTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.EnvironmentTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_EnvironmentTagHelper);
                __Microsoft_AspNetCore_Mvc_TagHelpers_EnvironmentTagHelper.Include = (string)__tagHelperAttribute_12.Value;
                __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_12);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                EndContext();
                BeginContext(32904, 6, true);
                WriteLiteral("\r\n    ");
                EndContext();
                BeginContext(32910, 151, false);
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("environment", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "7d0a7cf84efe45bd8ad070f289199c5d", async() => {
                    BeginContext(32945, 10, true);
                    WriteLiteral("\r\n        ");
                    EndContext();
                    BeginContext(32955, 86, false);
                    __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "f92f0a174f31478db13344ab4716f207", async() => {
                    }
                    );
                    __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                    __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                    __Microsoft_AspNetCore_Mvc_TagHelpers_ScriptTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.ScriptTagHelper>();
                    __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_ScriptTagHelper);
                    __Microsoft_AspNetCore_Mvc_TagHelpers_ScriptTagHelper.Src = (string)__tagHelperAttribute_13.Value;
                    __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_13);
#line 404 "C:\SSK\SKF\Source Backup\REP-Online-Dashboard-30-04-2020\Observer-Dashboard-30-04-2020\EMaintanance\Views\AssetSensorMapping\Index.cshtml"
__Microsoft_AspNetCore_Mvc_TagHelpers_ScriptTagHelper.AppendVersion = true;

#line default
#line hidden
                    __tagHelperExecutionContext.AddTagHelperAttribute("asp-append-version", __Microsoft_AspNetCore_Mvc_TagHelpers_ScriptTagHelper.AppendVersion, global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
                    await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                    if (!__tagHelperExecutionContext.Output.IsContentModified)
                    {
                        await __tagHelperExecutionContext.SetOutputContentAsync();
                    }
                    Write(__tagHelperExecutionContext.Output);
                    __tagHelperExecutionContext = __tagHelperScopeManager.End();
                    EndContext();
                    BeginContext(33041, 6, true);
                    WriteLiteral("\r\n    ");
                    EndContext();
                }
                );
                __Microsoft_AspNetCore_Mvc_TagHelpers_EnvironmentTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.EnvironmentTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_EnvironmentTagHelper);
                __Microsoft_AspNetCore_Mvc_TagHelpers_EnvironmentTagHelper.Exclude = (string)__tagHelperAttribute_14.Value;
                __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_14);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                EndContext();
                BeginContext(33061, 2, true);
                WriteLiteral("\r\n");
                EndContext();
            }
            );
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; }
    }
}
#pragma warning restore 1591
