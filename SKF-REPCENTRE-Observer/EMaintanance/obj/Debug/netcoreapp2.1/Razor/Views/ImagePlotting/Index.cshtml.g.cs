#pragma checksum "C:\SSK\SKF\Source Backup\REP-Online-Dashboard-18-07-2020\REP-Online-Dashboard-30-04-2020\Observer-Dashboard-30-04-2020\EMaintanance\Views\ImagePlotting\Index.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "18096e83ab07f9436bd9d240a19aede53b7469b1"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_ImagePlotting_Index), @"mvc.1.0.view", @"/Views/ImagePlotting/Index.cshtml")]
[assembly:global::Microsoft.AspNetCore.Mvc.Razor.Compilation.RazorViewAttribute(@"/Views/ImagePlotting/Index.cshtml", typeof(AspNetCore.Views_ImagePlotting_Index))]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#line 1 "C:\SSK\SKF\Source Backup\REP-Online-Dashboard-18-07-2020\REP-Online-Dashboard-30-04-2020\Observer-Dashboard-30-04-2020\EMaintanance\Views\_ViewImports.cshtml"
using EMaintanance;

#line default
#line hidden
#line 2 "C:\SSK\SKF\Source Backup\REP-Online-Dashboard-18-07-2020\REP-Online-Dashboard-30-04-2020\Observer-Dashboard-30-04-2020\EMaintanance\Views\_ViewImports.cshtml"
using EMaintanance.Models;

#line default
#line hidden
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"18096e83ab07f9436bd9d240a19aede53b7469b1", @"/Views/ImagePlotting/Index.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"0d99d051589a223aabf24b8387c074a6009fff84", @"/Views/_ViewImports.cshtml")]
    public class Views_ImagePlotting_Index : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    {
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_0 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("href", new global::Microsoft.AspNetCore.Html.HtmlString("~/lib/angular/ui-grid/ui-grid.min.css"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_1 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("rel", new global::Microsoft.AspNetCore.Html.HtmlString("stylesheet"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_2 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("href", new global::Microsoft.AspNetCore.Html.HtmlString("~/lib/angucomplete/antocomplete-alt.css"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_3 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/lib/angular/ui-grid/ui-grid.min.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_4 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/lib/angucomplete/angucomplete-alt.min.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_5 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/lib/angular/ui-grid/export/csv.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_6 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/lib/angular/ui-grid/export/pdfmake.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_7 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/lib/angular/ui-grid/export/vfs_fonts.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_8 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/lib/angular/ui-grid/export/lodash.min.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_9 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/lib/angular/ui-grid/export/jszip.min.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_10 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/lib/angular/ui-grid/export/excel-builder.dist.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_11 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", "~/js/imageplotting/index.js", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_12 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("include", "Development", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_13 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", "~/js/imageplotting/index.min.js", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_14 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("exclude", "Development", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        #line hidden
        #pragma warning disable 0169
        private string __tagHelperStringValueBuffer;
        #pragma warning restore 0169
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperExecutionContext __tagHelperExecutionContext;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner __tagHelperRunner = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner();
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __backed__tagHelperScopeManager = null;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __tagHelperScopeManager
        {
            get
            {
                if (__backed__tagHelperScopeManager == null)
                {
                    __backed__tagHelperScopeManager = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager(StartTagHelperWritingScope, EndTagHelperWritingScope);
                }
                return __backed__tagHelperScopeManager;
            }
        }
        private global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper;
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.EnvironmentTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_EnvironmentTagHelper;
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.ScriptTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_ScriptTagHelper;
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
#line 1 "C:\SSK\SKF\Source Backup\REP-Online-Dashboard-18-07-2020\REP-Online-Dashboard-30-04-2020\Observer-Dashboard-30-04-2020\EMaintanance\Views\ImagePlotting\Index.cshtml"
  
    ViewData["Title"] = "Image Plotting";
    Layout = "~/Views/Shared/_ObserverLayout.cshtml";

#line default
#line hidden
            BeginContext(105, 70, false);
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("link", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.SelfClosing, "1c6a043094984556b6cc980033a6cd0f", async() => {
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_0);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_1);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            EndContext();
            BeginContext(175, 2, true);
            WriteLiteral("\r\n");
            EndContext();
            BeginContext(177, 72, false);
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("link", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.SelfClosing, "13ec765784b64b01bb9d66310f17a0f4", async() => {
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_2);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_1);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            EndContext();
            BeginContext(249, 9739, true);
            WriteLiteral(@"

<div ng-controller=""skfCtrl"" class=""clientsite content-wrapper image-plotting"">
    <div class=""container-fluid"" id=""Taxonomy"">
        <div class=""row heading-wrapper"">
            <div class=""col-md-3 heading assetMappingHeader"">
                <h4 class=""page-header text-primary"">Image Plotting</h4>
            </div>
            <div class=""col-md-9 menu-button"">
            </div>
        </div>
        <div>
            <div class=""row"">
                <div class=""col-lg-12 col-md-12"">
                    <div class=""col-md-3 tree-wrapper"">
                        <span class=""tree-filter"">Search: <input class=""search-filter"" type=""text"" ng-model=""search""><i class=""fa fa-close search"" ng-click=""search = ''""></i> </span>
                        <div class=""tree-hierarchy"">
                            <span ng-if=""data[0].IsOClientMapped === 'True'"" class=""expand-icon"" ng-click=""expandTree()""><i ng-class=""{'fa fa-plus-square': !isExpand, 'fa fa-minus-square': isExpand}""></i>{{isExpand");
            WriteLiteral(@" ?""&nbsp;Collapse All"" : ""&nbsp;Expand All""}}</span>
                            <span ng-if=""data[0].IsOClientMapped === 'false'""><i class=""fa fa-minus-square""></i> &nbsp;Collapse All</span>
                            <ul ng-repeat=""h in data | filter:search"" class=""tree-structure"">
                                <li>
                                    <i class=""fa"" ng-if=""h.PlantArea && h.IsOClientMapped == 'True'"" ng-click=""ToggleFilter(h)"" ng-class=""{'fa fa-plus-square-o': h.Toggle, 'fa fa-minus-square-o': !h.Toggle}""></i>
                                    <span>
                                        <i class=""fa fa-user-circle-o icon-filter tree-icons""></i>&nbsp;{{h.ClientSiteName}}
                                    </span>
                                    <ul ng-if=""h.IsOClientMapped == 'True'"" ng-repeat=""i in h.PlantArea| filter:search"" class=""child"" ng-hide=""h.Toggle"">
                                        <li>
                                            <i class=""fa tree-icons");
            WriteLiteral(@""" ng-if=""i.Equipments"" ng-click=""ToggleFilter(i)"" ng-class=""{'fa fa-plus-square-o': i.Toggle, 'fa fa-minus-square-o': !i.Toggle}""></i>
                                            <span class=""tree-asset-link"" ng-class=""{'selected-plotted-type':i.PlantAreaId == selectedPlotId}"" ng-click=""Showdata(i, i.PlantAreaId, $index)"">
                                                <i class=""fa fa-map-marker icon-filter""></i>
                                                &nbsp;{{i.PlantAreaName}}
                                            </span>
                                            <ul ng-repeat=""j in i.Equipments| filter:search"" class=""child"" ng-hide=""i.Toggle"">
                                                <li>
                                                    <i class=""fa tree-icons"" ng-if=""j.Units"" ng-click=""ToggleFilter(j)"" ng-class=""{'fa fa-plus-square-o': j.Toggle, 'fa fa-minus-square-o': !j.Toggle}""></i>
                                                    <span class=""tree-asset-link"" ng-cl");
            WriteLiteral(@"ass=""{'selected-plotted-type':j.EquipmentId == selectedPlotId}"" ng-click=""Showdata(j, j.EquipmentId, $index)"">
                                                        <i class=""fa fa-superpowers""></i>&nbsp;{{j.EquipmentName}}
                                                    </span>
                                                    <ul ng-repeat=""k in j.Units| filter:search"" class=""child"" id=""unit-child"" ng-hide=""j.Toggle"">
                                                        <li>
                                                            <span>
                                                                &nbsp;
                                                                <i class=""fa tree-icons"" ng-if=""k.IntermediateUnit ||k.DriveUnit || k.DrivenUnit"" ng-click=""ToggleFilter(k)"" ng-class=""{'fa fa-plus-square-o': k.Toggle, 'fa fa-minus-square-o': !k.Toggle}""></i>
                                                                <i class=""fa tree-icons"" ng-class=""{'fa fa-cog': k.UnitType=='D");
            WriteLiteral(@"R', 'fa fa-cogs': k.UnitType == 'IN','fa fa-modx': k.UnitType =='DN'}""></i>
                                                                {{k.UnitName}} &nbsp;&nbsp;<span ng-class=""{noAssetCount:k.AssetCount == 0}"" class=""asset-count"">{{k.AssetCount}}</span>
                                                            </span>
                                                            <ul ng-repeat=""l in k.DriveUnit| filter:search"" class=""child"" ng-hide=""k.Toggle"">
                                                                <li>
                                                                    &nbsp;
                                                                    <span ng-class=""{'selected-plotted-type':l.UnitId == selectedPlotId}"">
                                                                        <span ng-class=""{'asset-disable' :l.IsOAssetMapped =='false'}"" class=""tree-asset-link"" ng-click=""Showdata(l, l.UnitId, $index)""><i class=""fa fa-wrench icon-filter""></i>&nbsp;{{l.Identificatio");
            WriteLiteral(@"nName}}</span>
                                                                    </span>
                                                                </li>
                                                            </ul>
                                                            <ul ng-repeat=""l in k.IntermediateUnit| filter:search"" class=""child"" ng-hide=""k.Toggle"">
                                                                <li>
                                                                    &nbsp;
                                                                    <span ng-class=""{'selected-plotted-type':l.UnitId == selectedPlotId}"">
                                                                        <span ng-class=""{'asset-disable' :l.IsOAssetMapped =='false'}"" class=""tree-asset-link"" ng-click=""Showdata(l, l.UnitId, $index)""><i class=""fa fa-wrench icon-filter""></i>&nbsp;{{l.IdentificationName}}</span>
                                                                    </span>
 ");
            WriteLiteral(@"                                                               </li>
                                                            </ul>
                                                            <ul ng-repeat=""l in k.DrivenUnit| filter:search"" class=""child"" ng-hide=""k.Toggle"">
                                                                <li>
                                                                    &nbsp;
                                                                    <span ng-class=""{'selected-plotted-type':l.UnitId == selectedPlotId}"">
                                                                        <span ng-class=""{'asset-disable' :l.IsOAssetMapped =='false'}"" class=""tree-asset-link"" ng-click=""Showdata(l, l.UnitId, $index)""><i class=""fa fa-wrench icon-filter""></i>&nbsp;{{l.IdentificationName}}</span>
                                                                    </span>
                                                                </li>
                              ");
            WriteLiteral(@"                              </ul>
                                                        </li>
                                                    </ul>
                                                </li>
                                            </ul>
                                        </li>
                                    </ul>
                                </li>
                            </ul>
                        </div>
                    </div>
                    <div class=""col-md-6 sensor-image"" ng-show=""isDetail"">
                        <div class=""col-md-12 heading"">
                            <h4 class=""page-header text-primary ng-binding""><span class=""unit-type"">{{selectedUnitType}} - </span> {{displayName}}</h4>
                            <div ng-if=""selectedUnitType ==='Plant' && !isNoimg"">
                                <span class=""expand-icon"" tooltip-append-to-body=""true"" tooltip-class=""customClass"" uib-tooltip=""Latitude and Longitude for Plant Area");
            WriteLiteral(@""" style=""font-size:17px;"" ng-class=""{'has-geo-count' : latitude || longitude,'has-no-geo-count' : !latitude && !longitude }"" ng-click=""savePlantGeo()""><i class=""fa fa-globe""></i></span>
                                <span>
                                    <strong>Latitude: </strong>{{latitude}}&nbsp;
                                    <strong>Longitude: </strong>{{longitude}}&nbsp;
                                </span>
                            </div>
                            <div class=""plotting-wrapper"">
                                <div class=""plotting-img"" ng-hide=""isNoimg"">
                                    <!--<canvas id=""canvas"" width=""{{imgWidth}}"" height=""{{imgheight}}"" ng-click=""getPosition($event)"" style=""cursor:crosshair;background:url('{{PhysicalPath}}');background-position: center;background-size: {{imgWidth}}px {{imgheight}}px""></canvas>-->
                                    <canvas id=""canvas"" width=""{{imgWidth}}"" height=""{{imgheight}}"" ng-click=""getPosition($event)");
            WriteLiteral(@""" style=""cursor:crosshair;background:url('{{PhysicalPath}}');background-position: center;background-size:100% 100%""></canvas>
                                    <span ng-repeat=""i in loadtable"">
                                        <span tooltip-append-to-body=""true"" tooltip-class=""customClass"" uib-tooltip=""{{i.ObserverNodeName}}"" ng-if=""getImg.PlotType === 'AS'"" ng-hide=""i.XPos === 0 && i.YPos === 0"" ng-class=""{'plotted-dot': i.highlight == true}"" class=""plot-point"" style=""left:{{i.YPos}}px;top:{{i.XPos}}px"">
");
            EndContext();
            BeginContext(10129, 367, true);
            WriteLiteral(@"                                        </span>
                                        <span tooltip-append-to-body=""true"" tooltip-class=""customClass"" uib-tooltip=""{{i.UnitName}}"" ng-if=""getImg.PlotType === 'EQ'"" ng-class=""{'plotted-dot': i.highlight === true}"" class=""plot-point"" ng-hide=""i.XPos === 0 && i.YPos === 0"" style=""left:{{i.YPos}}px;top:{{i.XPos}}px"">
");
            EndContext();
            BeginContext(10630, 372, true);
            WriteLiteral(@"                                        </span>
                                        <span tooltip-append-to-body=""true"" tooltip-class=""customClass"" uib-tooltip=""{{i.EquipmentName}}"" ng-if=""getImg.PlotType === 'PL'"" ng-hide=""i.XPos === 0 && i.YPos === 0"" ng-class=""{'plotted-dot': i.highlight === true}"" class=""plot-point"" style=""left:{{i.YPos}}px;top:{{i.XPos}}px"">
");
            EndContext();
            BeginContext(11141, 953, true);
            WriteLiteral(@"                                        </span>
                                    </span>
                                </div>
                                <a ng-disabled=""mappedCount"" class=""btn btn-primary delete-icon"" ng-click=""removeAttachment()""><i class=""fa fa-trash""></i></a>
                            </div>
                            <div class=""plotting-no-img"" ng-show=""isNoimg"">
                                <div class=""upload-wrapper"">
                                    <div class=""msg"">
                                        <input type=""file"" id=""files"" class=""uploadfile"" name=""files[]"" ng-model=""attach"" multiple accept=""image/x-png,image/jpeg"" onchange=""angular.element(this).scope().uploadImageStart()"" />
                                        <span class=""upload-img first-child"">Add Image For {{selectedUnitType}}</span>
                                        <span class=""upload-img""> {{displayName}} ");
            EndContext();
            BeginContext(12115, 368, true);
            WriteLiteral(@" </span>
                                        <span class=""upload-img""><i>Recommended size 300w * 600h </i></span>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class=""col-md-3 mapped-details-wrapper"" >
");
            EndContext();
            BeginContext(13294, 73, true);
            WriteLiteral("                        <div class=\"mapped-details\" ng-show=\"isDetail\">\r\n");
            EndContext();
            BeginContext(14588, 616, true);
            WriteLiteral(@"                            <div ng-hide=""isNoimg"" class=""image-details"">
                                <div class=""canvas-wrap"">
                                    <canvas id=""mapcount"" width=""300"" height=""300""></canvas>
                                    <span id=""procent"">
                                    </span>
                                </div>
                                <span class=""mapping-detail""><strong>&nbsp;{{mappedCount}} of {{unMappedCount+mappedCount}} Mapped</strong></span>
                            </div>

                        </div>
                    </div>
");
            EndContext();
            BeginContext(15651, 2204, true);
            WriteLiteral(@"

                    <div class=""col-md-9  shaft-intermediate shaft-wrapper"" ng-show=""isDetail"" ng-if=""getImg.PlotType === 'AS'"">
                        <span class=""table-filter""><strong>Search:</strong> &nbsp; <input type=""text"" ng-model=""searchAssetTable"" /><i class=""fa fa-close"" ng-click=""searchAssetTable = ''""></i></span>
                        <div class=""table-responsive"">
                            <table>
                                <thead>
                                    <tr style=""background:#ccc"">
                                        <th style=""width:5%"">S.No</th>
                                        <th style=""width:20%"">Unit Name </th>
                                        <th style=""width:40%"">Observer Unit Name</th>
                                        <th style=""width:20%"">Status</th>
                                        <th style=""width:15%"">Action</th>
                                    </tr>
                                </thead>
                ");
            WriteLiteral(@"                <tbody>
                                    <tr ng-repeat=""i in loadtable | filter:searchAssetTable "" ng-click=""highlightPoint($index)"" ng-class=""{selected : $index === isSelectedRow}"">
                                        <td style=""width:5%"">{{$index + 1}} </td>
                                        <td style=""width:20%"">{{i.UnitName}}</td>
                                        <td style=""width:40%"">{{i.ObserverNodeName}}</td>
                                        <td style=""width:20%"">
                                            <span class=""plotted-status"" ng-class=""{'mapped-dot' : i.IsMapped === 'Y' && $index === isSelectedRow,'mapped-unit' :i.IsMapped === 'Y'}""></span>
                                            {{ i.IsMapped === 'Y' ? ""&nbsp;Mapped"" : ""&nbsp;Unmapped"" }}
                                        </td>
                                        <td style=""width:15%;cursor:pointer"" ng-class=""{'map-remove' :i.IsMapped === 'N'}"" ng-click=""removePoint(i.Plotting");
            WriteLiteral("Id, i.ObserverNodeName)\"><i class=\"fa fa-trash\"></i>&nbsp;Remove</td>\r\n                                    </tr>\r\n                                </tbody>\r\n");
            EndContext();
            BeginContext(18047, 2389, true);
            WriteLiteral(@"                            </table>
                        </div>
                    </div>
                    <div class=""col-md-9 shaft-intermediate shaft-wrapper"" ng-show=""isDetail"" ng-if=""getImg.PlotType === 'EQ'"">
                        <span class=""table-filter""><strong>Search:</strong> &nbsp; <input type=""text"" ng-model=""searchEquipmentTable"" /><i class=""fa fa-close"" ng-click=""searchEquipmentTable = ''""></i></span>
                        <div class=""table-responsive"">
                            <table>
                                <thead>
                                    <tr style=""background:#ccc"">
                                        <th style=""width:5%"">S.No</th>
                                        <th style=""width:45%"">Unit Name </th>
                                        <th style=""width:20%"">Unit Type</th>
                                        <th style=""width:15%"">Status</th>
                                        <th style=""width:15%"">Action</th>
         ");
            WriteLiteral(@"                           </tr>
                                </thead>
                                <tbody>
                                    <tr ng-repeat=""i in loadtable |filter:searchEquipmentTable"" ng-click=""highlightPoint($index)"" ng-class=""{selected :$index === isSelectedRow}"">
                                        <td style=""width:5%"">{{$index + 1}} </td>
                                        <td style=""width:45%"">{{i.UnitName}}</td>
                                        <td style=""width:20%"">
                                            <span ng-switch=""i.UnitType"">
                                                <span ng-switch-when=""DR"">
                                                    Drive Unit
                                                </span>
                                                <span ng-switch-when=""IN"">
                                                    Intermediate Unit
                                                </span>
                     ");
            WriteLiteral(@"                           <span ng-switch-when=""DN"">
                                                    Driven unit
                                                </span>
                                            </span>
                                        </td>
                                        <td style=""width:15%"">
");
            EndContext();
            BeginContext(20500, 2117, true);
            WriteLiteral(@"                                            <span class=""plotted-status"" ng-class=""{'mapped-dot' : i.IsMapped === 'Y' && $index === isSelectedRow,'mapped-unit' :i.IsMapped === 'Y' }""></span>
                                            {{ i.IsMapped === 'Y' ? ""&nbsp;Mapped"" : ""&nbsp;Unmapped"" }}
                                        </td>
                                        <td style=""width:15%;cursor:pointer"" ng-class=""{'map-remove' :i.IsMapped === 'N'}"" ng-click=""removePoint(i.PlottingId,i.UnitName)""><i class=""fa fa-trash""></i>&nbsp;Remove</td>
                                    </tr>
                                </tbody>
                            </table>
                        </div>
                    </div>
                    <div class=""col-md-9 shaft-intermediate shaft-wrapper"" ng-show=""isDetail"" ng-if=""getImg.PlotType === 'PL'"">
                        <span class=""table-filter""><strong>Search:</strong> &nbsp;<input type=""text"" ng-model=""searchPlantTable""><i class=""fa fa-close");
            WriteLiteral(@""" ng-click=""searchPlantTable = ''""></i></span>
                        <div class=""table-responsive"">
                            <table>
                                <thead>
                                    <tr style=""background:#ccc"">
                                        <th style=""width:5%"">S.No</th>
                                        <th style=""width:60%"">Equipment Name </th>
                                        <th style=""width:25%"">Status</th>
                                        <th style=""width:15%"">Action</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    <tr ng-repeat=""i in loadtable | filter:searchPlantTable"" ng-click=""highlightPoint($index)"" ng-class=""{selected : $index === isSelectedRow}"">
                                        <td style=""width:5%"">{{$index + 1}} </td>
                                        <td style=""width:60%"">{{i.EquipmentName}}</");
            WriteLiteral("td>\r\n                                        <td style=\"width:25%\">\r\n");
            EndContext();
            BeginContext(22681, 1173, true);
            WriteLiteral(@"                                            <span class=""plotted-status"" ng-class=""{'mapped-dot' : i.IsMapped === 'Y' && $index === isSelectedRow,'mapped-unit' :i.IsMapped === 'Y' }""></span>
                                            {{ i.IsMapped === 'Y' ? ""&nbsp;Mapped"" : ""&nbsp;Unmapped"" }}
                                        </td>
                                        <td style=""width:15%;cursor:pointer"" ng-class=""{'map-remove' :i.IsMapped === 'N'}"" ng-click=""removePoint(i.PlottingId,i.EquipmentName)""><i class=""fa fa-trash"">&nbsp;</i>Remove</td>
                                    </tr>
                                </tbody>
                            </table>
                        </div>
                    </div>
                    <div class=""col-md-9"" ng-hide=""isDetail"">
                        <div class=""col-md-12 heading"">
                            <h4 class=""no-record text-primary ng-binding""><i class=""fa fa-exclamation-triangle no-record-icon""></i>No records selected</h4");
            WriteLiteral(">\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    </div>\r\n\r\n");
            EndContext();
            DefineSection("Scripts", async() => {
                BeginContext(23876, 10, true);
                WriteLiteral("\r\n        ");
                EndContext();
                BeginContext(23886, 60, false);
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "230f46caf33a4f229a289dfb6e1f5cc8", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_3);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                EndContext();
                BeginContext(23946, 10, true);
                WriteLiteral("\r\n        ");
                EndContext();
                BeginContext(23956, 66, false);
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "b63e0d9631c941c487bfd327e63a060c", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_4);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                EndContext();
                BeginContext(24022, 10, true);
                WriteLiteral("\r\n        ");
                EndContext();
                BeginContext(24032, 59, false);
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "a257c4748480492ea4766c3fbed68a3a", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_5);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                EndContext();
                BeginContext(24091, 10, true);
                WriteLiteral("\r\n        ");
                EndContext();
                BeginContext(24101, 59, false);
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "ff6233df7e06402faceb928a9acaebc5", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_5);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                EndContext();
                BeginContext(24160, 10, true);
                WriteLiteral("\r\n        ");
                EndContext();
                BeginContext(24170, 63, false);
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "390f17bec06c4405a3ba6ee267c8e517", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_6);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                EndContext();
                BeginContext(24233, 10, true);
                WriteLiteral("\r\n        ");
                EndContext();
                BeginContext(24243, 65, false);
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "38f9ea7433d94ec59c2f8ae806cc41cb", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_7);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                EndContext();
                BeginContext(24308, 10, true);
                WriteLiteral("\r\n        ");
                EndContext();
                BeginContext(24318, 66, false);
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "ba754231a7bc402a8fd7ed0cffad9edd", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_8);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                EndContext();
                BeginContext(24384, 10, true);
                WriteLiteral("\r\n        ");
                EndContext();
                BeginContext(24394, 65, false);
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "1ae028ca8afd4860bbaddd0b37ed7387", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_9);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                EndContext();
                BeginContext(24459, 10, true);
                WriteLiteral("\r\n        ");
                EndContext();
                BeginContext(24469, 74, false);
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "6676bbec6a584a1d9c7b1a0c396cb163", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_10);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                EndContext();
                BeginContext(24543, 12, true);
                WriteLiteral("\r\n\r\n        ");
                EndContext();
                BeginContext(24555, 150, false);
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("environment", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "09a22adf7dc9489e962a93dcbb78347b", async() => {
                    BeginContext(24590, 14, true);
                    WriteLiteral("\r\n            ");
                    EndContext();
                    BeginContext(24604, 77, false);
                    __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "371af6ccd0bb4120b638f50210ffaec8", async() => {
                    }
                    );
                    __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                    __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                    __Microsoft_AspNetCore_Mvc_TagHelpers_ScriptTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.ScriptTagHelper>();
                    __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_ScriptTagHelper);
                    __Microsoft_AspNetCore_Mvc_TagHelpers_ScriptTagHelper.Src = (string)__tagHelperAttribute_11.Value;
                    __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_11);
#line 299 "C:\SSK\SKF\Source Backup\REP-Online-Dashboard-18-07-2020\REP-Online-Dashboard-30-04-2020\Observer-Dashboard-30-04-2020\EMaintanance\Views\ImagePlotting\Index.cshtml"
__Microsoft_AspNetCore_Mvc_TagHelpers_ScriptTagHelper.AppendVersion = true;

#line default
#line hidden
                    __tagHelperExecutionContext.AddTagHelperAttribute("asp-append-version", __Microsoft_AspNetCore_Mvc_TagHelpers_ScriptTagHelper.AppendVersion, global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
                    await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                    if (!__tagHelperExecutionContext.Output.IsContentModified)
                    {
                        await __tagHelperExecutionContext.SetOutputContentAsync();
                    }
                    Write(__tagHelperExecutionContext.Output);
                    __tagHelperExecutionContext = __tagHelperScopeManager.End();
                    EndContext();
                    BeginContext(24681, 10, true);
                    WriteLiteral("\r\n        ");
                    EndContext();
                }
                );
                __Microsoft_AspNetCore_Mvc_TagHelpers_EnvironmentTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.EnvironmentTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_EnvironmentTagHelper);
                __Microsoft_AspNetCore_Mvc_TagHelpers_EnvironmentTagHelper.Include = (string)__tagHelperAttribute_12.Value;
                __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_12);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                EndContext();
                BeginContext(24705, 10, true);
                WriteLiteral("\r\n        ");
                EndContext();
                BeginContext(24715, 154, false);
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("environment", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "be58d3fc340e40a28aee2fc9b8427dce", async() => {
                    BeginContext(24750, 14, true);
                    WriteLiteral("\r\n            ");
                    EndContext();
                    BeginContext(24764, 81, false);
                    __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "82a7a013f731445fa64342e2a4295903", async() => {
                    }
                    );
                    __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                    __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                    __Microsoft_AspNetCore_Mvc_TagHelpers_ScriptTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.ScriptTagHelper>();
                    __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_ScriptTagHelper);
                    __Microsoft_AspNetCore_Mvc_TagHelpers_ScriptTagHelper.Src = (string)__tagHelperAttribute_13.Value;
                    __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_13);
#line 302 "C:\SSK\SKF\Source Backup\REP-Online-Dashboard-18-07-2020\REP-Online-Dashboard-30-04-2020\Observer-Dashboard-30-04-2020\EMaintanance\Views\ImagePlotting\Index.cshtml"
__Microsoft_AspNetCore_Mvc_TagHelpers_ScriptTagHelper.AppendVersion = true;

#line default
#line hidden
                    __tagHelperExecutionContext.AddTagHelperAttribute("asp-append-version", __Microsoft_AspNetCore_Mvc_TagHelpers_ScriptTagHelper.AppendVersion, global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
                    await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                    if (!__tagHelperExecutionContext.Output.IsContentModified)
                    {
                        await __tagHelperExecutionContext.SetOutputContentAsync();
                    }
                    Write(__tagHelperExecutionContext.Output);
                    __tagHelperExecutionContext = __tagHelperScopeManager.End();
                    EndContext();
                    BeginContext(24845, 10, true);
                    WriteLiteral("\r\n        ");
                    EndContext();
                }
                );
                __Microsoft_AspNetCore_Mvc_TagHelpers_EnvironmentTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.EnvironmentTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_EnvironmentTagHelper);
                __Microsoft_AspNetCore_Mvc_TagHelpers_EnvironmentTagHelper.Exclude = (string)__tagHelperAttribute_14.Value;
                __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_14);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                EndContext();
                BeginContext(24869, 6, true);
                WriteLiteral("\r\n    ");
                EndContext();
            }
            );
            BeginContext(24878, 8139, true);
            WriteLiteral(@"
    <script type=""text/ng-template"" id=""skfPlotModal.html"">
        <div class=""popup-product table"">
            <div class=""modal-header"">
                <span class=""model-breadcrumb"">Plot Point</span>
                <div class=""col-lg-5 col-md-5 col-sm-12 heading"">
                    <h4 class=""page-header text-primary""><strong>{{unitType}}</strong> - {{displayName}}</h4>
                </div>
                <div class=""col-lg-7 col-md-7 col-sm-12 create-button  menu-button"">
                    <span class=""Pipe""></span>
                    <a ng-click=""save()"" ng-disabled=""readOnlyPage"" title=""Save""><i class=""fa fa-save icon-filter""></i><span>Save</span></a>
                    <a ng-click=""cancel()"" title=""Close""><i class=""fa fa-close icon-filter""></i><span>Close</span></a>
                </div>
            </div>
            <div class=""row popwid"">
                <form name=""userForm"" novalidate>
                    <div class=""col-md-12"">
                        <div class=""");
            WriteLiteral(@"col-md-9 col-sm-6 input-field"" ng-if=""PlotType === 'AS'"">
                            <label class=""control-label"">Sensor*</label>
                            <ui-select autofocus=""true"" ng-model=""plot.UnitSensorId"" theme=""bootstrap"" style=""width: 800px;"" title=""Choose a Sensor"">
                                <ui-select-match placeholder=""Select..."">{{$select.selected.ObserverNodeName}}</ui-select-match>
                                <ui-select-choices repeat=""value.UnitSensorId as value in data | propsFilter: {ObserverNodeName: $select.search} | limitTo: 50"">
                                    <div ng-bind-html=""value.ObserverNodeName | highlight: $select.search""></div>
                                </ui-select-choices>
                            </ui-select>
                        </div>
                        <div class=""col-md-9 col-sm-6 input-field"" ng-if=""PlotType === 'EQ'"">
                            <label class=""control-label"">Asset List*</label>

                            <u");
            WriteLiteral(@"i-select autofocus=""true"" ng-model=""Selected"" theme=""bootstrap"" ng-disabled=""readOnlyPage"" style=""width: 800px;"" title=""Choose a Asset"" on-select=""onAssetchange($select.selected)"" required>
                                <ui-select-match placeholder=""Select ..."">
                                    {{$select.selected.UnitName}}
                                </ui-select-match>
                                <ui-select-choices repeat=""value.UnitId as value in data | propsFilter: {UnitName: $select.search} | limitTo: 100"">
                                    <div ng-bind-html=""value.UnitName | highlight: $select.search""></div>
                                </ui-select-choices>
                            </ui-select>
                        </div>
                        <div class=""col-md-12 col-sm-6"" ng-if=""PlotType === 'PL'"">
                            <div class=""col-md-8 col-sm-6 input-field"">
                                <label class=""control-label"">Equipment List*</label>
           ");
            WriteLiteral(@"                     <ui-select autofocus=""true"" ng-model=""plot.EquipmentId"" theme=""bootstrap"" style=""width: 800px;"" title=""Choose a Equipment"">
                                    <ui-select-match placeholder=""Select..."">{{$select.selected.EquipmentName}}</ui-select-match>
                                    <ui-select-choices repeat=""value.EquipmentId as value in data | propsFilter: {EquipmentName: $select.search} | limitTo: 50"">
                                        <div ng-bind-html=""value.EquipmentName | highlight: $select.search""></div>
                                    </ui-select-choices>
                                </ui-select>
                                </div>
                            </div>
                            </div>
                </form>
            </div>
        </div>
    </script>

    <script type=""text/ng-template"" id=""skfRemoveAttachmentModal.html"">
        <div class=""popup-product image-plot-remove-attachment"">
            <div class=""modal-header");
            WriteLiteral(@""">
                <div class=""heading"">
                    <h4 class=""text-primary"">&nbsp;&nbsp;<strong>{{unitType}}</strong> - {{displayName}}</h4>
                </div>
            </div>
            <div class=""modal-body"">
                <div class=""alert-removeattach"" style=""text-align:center"">
                    <span>
                        <i class=""fa fa-exclamation-triangle""></i>&nbsp;
                        Are you sure you want to Remove the Image of {{displayName}}?&nbsp;&nbsp;
                    </span>
                </div>
            </div>
            <div class=""modal-footer"">
                <span class=""buttons create filter-button"">
                    <button class=""btn btn-info"" ng-click=""deleteImage()"" title=""Yes""><i class=""fa fa-save icon-filter""></i><span>Yes</span></button>
                    <button class=""btn btn-info"" ng-click=""cancel()"" title=""No""><i class=""fa fa-close icon-filter""></i><span>No</span></button>
                </span>
            </di");
            WriteLiteral(@"v>
        </div>
    </script>

    <script type=""text/ng-template"" id=""skfRemovePointModal.html"">
        <div class=""popup-product image-remove-plot"">
            <div class=""modal-header"">
                <div>
                    <h4 class=""text-primary"">&nbsp;&nbsp;<strong>{{unitType}}:</strong> {{displayName}} - {{NodeName}}</h4>
                </div>
            </div>
            <div class=""modal-body"">
                <div class=""alert-removeattach"" style=""text-align:center"">
                    <span>
                        <i class=""fa fa-exclamation-triangle""></i>&nbsp;
                        Are you sure you want to remove the plotted point of node {{NodeName}}?&nbsp;&nbsp;
                    </span>
                </div>
            </div>
            <div class=""modal-footer"">
                <span class=""buttons create filter-button"">
                    <button class=""btn btn-info"" ng-click=""deleteImage()"" title=""Yes""><i class=""fa fa-save icon-filter""></i><span>Yes");
            WriteLiteral(@"</span></button>
                    <button class=""btn btn-info"" ng-click=""cancel()"" title=""No""><i class=""fa fa-close icon-filter""></i><span>No</span></button>
                </span>
            </div>
        </div>
    </script>

    <script type=""text/ng-template"" id=""skfPlantGeoLocModal.html"">
        <div class=""popup-product"">
            <div class=""modal-header image-plotting-geo"">
                <div class=""col-lg-5 col-md-5 col-sm-12 heading"">
                    <h4 class=""page-header text-primary""><strong>Plant: &nbsp;</strong>{{PlantName}}</h4>
                </div>
                <div class=""col-lg-7 col-md-7 col-sm-12 create-button  menu-button"">
                    <span class=""Pipe""></span>
                    <a ng-click=""save()"" ng-disabled=""readOnlyPage"" title=""Save""><i class=""fa fa-save icon-filter""></i><span>Save</span></a>
                    <a ng-click=""cancel()"" title=""Close""><i class=""fa fa-close icon-filter""></i><span>Close</span></a>
                </div>
 ");
            WriteLiteral(@"           </div>
            <div class=""row popwid"">
                <form name=""userForm"" novalidate>
                    <div class=""col-md-12"" style=""margin-top:10px; margin-bottom:10px"">
                        <div class=""col-md-4 col-sm-6"">
                            <label class=""control-label"">Latitude</label>
                            <input type=""number"" class=""form-control lat-input"" ng-model=""latitude"" name=""Longitude"" />
                        </div>
                        <div class=""col-md-4 col-sm-6"">
                            <label class=""control-label"">Longitude</label>
                            <input type=""number"" class=""form-control lat-input"" ng-model=""longitude"" name=""Longitude"" />
                        </div>
                        </div>
                        </form>
                    </div>
                    <div class=""modal-footer"">
                    </div>
            </div>
</script>

");
            EndContext();
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; }
    }
}
#pragma warning restore 1591
