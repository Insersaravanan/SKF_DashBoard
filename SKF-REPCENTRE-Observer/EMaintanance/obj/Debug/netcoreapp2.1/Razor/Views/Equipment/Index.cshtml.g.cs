#pragma checksum "C:\SSK\SKF\Source Backup\REP-Online-Dashboard-18-07-2020\REP-Online-Dashboard-30-04-2020\Observer-Dashboard-30-04-2020\EMaintanance\Views\Equipment\Index.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "2c8bab2a2add3aba5e859714bf6ece5ee5d484e6"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_Equipment_Index), @"mvc.1.0.view", @"/Views/Equipment/Index.cshtml")]
[assembly:global::Microsoft.AspNetCore.Mvc.Razor.Compilation.RazorViewAttribute(@"/Views/Equipment/Index.cshtml", typeof(AspNetCore.Views_Equipment_Index))]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#line 1 "C:\SSK\SKF\Source Backup\REP-Online-Dashboard-18-07-2020\REP-Online-Dashboard-30-04-2020\Observer-Dashboard-30-04-2020\EMaintanance\Views\_ViewImports.cshtml"
using EMaintanance;

#line default
#line hidden
#line 2 "C:\SSK\SKF\Source Backup\REP-Online-Dashboard-18-07-2020\REP-Online-Dashboard-30-04-2020\Observer-Dashboard-30-04-2020\EMaintanance\Views\_ViewImports.cshtml"
using EMaintanance.Models;

#line default
#line hidden
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"2c8bab2a2add3aba5e859714bf6ece5ee5d484e6", @"/Views/Equipment/Index.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"0d99d051589a223aabf24b8387c074a6009fff84", @"/Views/_ViewImports.cshtml")]
    public class Views_Equipment_Index : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    {
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_0 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("href", new global::Microsoft.AspNetCore.Html.HtmlString("~/lib/angular/ui-grid/ui-grid.min.css"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_1 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("rel", new global::Microsoft.AspNetCore.Html.HtmlString("stylesheet"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_2 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("href", new global::Microsoft.AspNetCore.Html.HtmlString("~/lib/angular/ui-select/select.min.css"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_3 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("href", new global::Microsoft.AspNetCore.Html.HtmlString("~/lib/angucomplete/antocomplete-alt.css"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_4 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("value", "Y", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_5 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("value", "N", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_6 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("name", new global::Microsoft.AspNetCore.Html.HtmlString("userForm"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_7 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("name", new global::Microsoft.AspNetCore.Html.HtmlString("DriveUserForm"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_8 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("name", new global::Microsoft.AspNetCore.Html.HtmlString("IntermediateUserForm"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_9 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("name", new global::Microsoft.AspNetCore.Html.HtmlString("DrivenUserForm"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_10 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/lib/angular/ui-grid/ui-grid.min.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_11 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/lib/angular/ui-grid/export/csv.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_12 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/lib/angucomplete/angucomplete-alt.min.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_13 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/lib/angular/ui-grid/export/pdfmake.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_14 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/lib/angular/ui-grid/export/vfs_fonts.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_15 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/lib/angular/ui-grid/export/lodash.min.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_16 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/lib/angular/ui-grid/export/jszip.min.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_17 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/lib/angular/ui-grid/export/excel-builder.dist.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_18 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", "~/js/equipment/index.js", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_19 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("include", "Development", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_20 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", "~/js/equipment/index.min.js", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_21 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("exclude", "Development", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        #line hidden
        #pragma warning disable 0169
        private string __tagHelperStringValueBuffer;
        #pragma warning restore 0169
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperExecutionContext __tagHelperExecutionContext;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner __tagHelperRunner = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner();
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __backed__tagHelperScopeManager = null;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __tagHelperScopeManager
        {
            get
            {
                if (__backed__tagHelperScopeManager == null)
                {
                    __backed__tagHelperScopeManager = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager(StartTagHelperWritingScope, EndTagHelperWritingScope);
                }
                return __backed__tagHelperScopeManager;
            }
        }
        private global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper;
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper;
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.RenderAtEndOfFormTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper;
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper;
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.EnvironmentTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_EnvironmentTagHelper;
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.ScriptTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_ScriptTagHelper;
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
#line 1 "C:\SSK\SKF\Source Backup\REP-Online-Dashboard-18-07-2020\REP-Online-Dashboard-30-04-2020\Observer-Dashboard-30-04-2020\EMaintanance\Views\Equipment\Index.cshtml"
  
    ViewData["Title"] = "Equipment";
    Layout = "~/Views/Shared/_ObserverLayout.cshtml";

#line default
#line hidden
            BeginContext(100, 2, true);
            WriteLiteral("\r\n");
            EndContext();
            BeginContext(102, 70, false);
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("link", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.SelfClosing, "6c6053636bd8406da54dd50ca2186790", async() => {
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_0);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_1);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            EndContext();
            BeginContext(172, 2, true);
            WriteLiteral("\r\n");
            EndContext();
            BeginContext(174, 71, false);
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("link", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.SelfClosing, "7591aa6a67474dd998c4e834ad032282", async() => {
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_2);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_1);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            EndContext();
            BeginContext(245, 2, true);
            WriteLiteral("\r\n");
            EndContext();
            BeginContext(247, 72, false);
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("link", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.SelfClosing, "0f0d94709ad0461faf88b600d1b4a21e", async() => {
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_3);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_1);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            EndContext();
            BeginContext(319, 3241, true);
            WriteLiteral(@"
<div ng-controller=""skfCtrl"" class=""equipment content-wrapper"">
    <div class=""container-fluid rds"" id=""rds"">
        <div class=""wizard-inner"">
            <div class=""connecting-line""></div>
            <ul class=""tabs"">
                <li class=""list-tab"" ng-class=""{'active':equipmentListActive}"" ng-disabled=""equipmentListActive"">
                    <a ng-click=""next('stage0')"" Title=""Equipment List"">
                        <span class=""round-tab"">
                            EL
                        </span>
                        <i class=""fa fa-play eqp-play"" aria-hidden=""true""></i>

                    </a>
                </li>
                <li class=""list-tab"" ng-class=""{'active':equipmentActive}"" ng-disabled=""equipmentActive"">
                    <a ng-click=""next('stage1')"" Title=""Equipment Create"">
                        <span class=""round-tab"">
                            EQ
                        </span>
                        <i class=""fa fa-play eqp-play"" aria-");
            WriteLiteral(@"hidden=""true""></i>

                    </a>
                </li>
                <li class=""list-tab"" ng-class=""{'active':DriveActive}"">
                    <a ng-click=""!isSaved || userForm.$invalid || DriveActive || GotoDrive()"" Title=""Drive Unit"" ng-disabled=""userForm.$invalid || DriveActive || !isSaved"">
                        <span class=""round-tab"">
                            DR
                        </span>
                        <i class=""fa fa-play eqp-play"" aria-hidden=""true""></i>

                    </a>
                </li>
                <li class=""list-tab"" ng-class=""{'active':IntermediateActive}"">
                    <a ng-click=""IntermidiateActive || GotoIntermediate()"" ng-disabled=""IntermidiateActive || (!isEdit && !isView)"" Title=""Intermediate Unit"">
                        <span class=""round-tab"">
                            IN
                        </span>
                        <i class=""fa fa-play eqp-play"" aria-hidden=""true""></i>

                    </a");
            WriteLiteral(@">
                </li>
                <li class=""list-tab"" ng-class=""{'active':DrivenActive}"">
                    <a ng-click=""DrivenActive || GotoDriven()"" Title=""Driven Unit"" ng-disabled=""DrivenActive || (!isEdit && !isView)"">
                        <span class=""round-tab"">
                            DN
                        </span>
                    </a>
                </li>
            </ul>
        </div>
        <div class=""animate-switch-container"" ng-switch on=""stage"">
            <div class=""equipment-list animate-switch"" ng-switch-default>
                <div class=""row heading-wrapper"">
                    <div class=""col-md-3 heading"">
                        <h4 class=""page-header text-primary"">Equipment List</h4>
                    </div>

                </div>

                <div class=""table-responsive"">
                    <div class=""grid data"">
                        <div id=""uiGrid"" ui-grid=""gridOpts"" class=""grid"" ui-grid-cellnav ui-grid-pinning ui-gri");
            WriteLiteral("d-resize-columns ui-grid-exporter></div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <div class=\"equipment\">\r\n                ");
            EndContext();
            BeginContext(3560, 11916, false);
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("form", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "1b868387915b4c84987966bf7e1468ab", async() => {
                BeginContext(3593, 11513, true);
                WriteLiteral(@"
                    <div class=""equipment animate-switch"" ng-switch-when=""stage1"">
                        <div class=""row heading-wrapper"">
                            <div class=""col-md-3 heading"">
                                <h4 class=""page-header text-primary"">{{isEdit?""Edit Equipment"":isSearch?""Search Equipment Unit"":isView?""View Equipment Unit"":isCreate?""Create Equipment"":""Equipment Unit""}}</h4>
                            </div>
                            <div class=""col-md-9 menu-button"">
                                <a ng-disabled=""isCreate"" ng-click=""isCreate || createToggle()"" title=""Create""><i class=""fa fa-plus icon-filter""></i>Create</a>
                                <a ng-disabled=""isSearch"" ng-click=""isSearch || searchToggle()"" title=""Search""><i class=""fa fa-search-plus icon-filter""></i><span>Search</span></a>
                                <span class=""Pipe""></span>
                                <a ng-disabled=""readOnlyPage || userForm.$invalid || !equipment.PlantAreaId");
                WriteLiteral(@""" ng-click=""readOnlyPage || userForm.$invalid || GotoDrive()"" ng-show=""!isEdit"" title=""create""><i class=""fa fa-arrow-right icon-filter""></i><span>GoTo: Drive</span></a>
                                <a ng-disabled=""readOnlyPage || userForm.$invalid"" ng-click=""readOnlyPage || userForm.$invalid || update()"" ng-show=""isEdit || isView"" title=""Update""><i class=""fa fa-save icon-filter""></i><span>Update</span></a>
                                <a ng-disabled=""isEdit || isView"" ng-click=""isEdit || clearOut()"" ng-show=""isCreate || isEdit || isView"" title=""Clear""><i class=""fa fa-eraser icon-filter""></i><span>Clear</span></a>
                            </div>
                        </div>
                        <div class=""row create-form"" ng-show=""isEdit || isCreate || isView"">
                            <div class=""col-md-12"">
                                <div class=""col-md-3 col-sm-6 input-field"">
                                    <label class=""control-label"">
                                   ");
                WriteLiteral(@"     Plant* &nbsp;&nbsp;&nbsp;
                                        <a ng-click=""Plant()"" tooltip-append-to-body=""true"" uib-tooltip=""Click here to create new Plant"" tooltip-class=""customClass"" class=""mouse-pointer""><i class=""fa fa-plus-square""></i></a>
                                    </label>
                                    <ui-select ng-model=""equipment.PlantAreaId"" theme=""bootstrap"" ng-disabled=""readOnlyPage"" style=""width: 800px;"" on-select=""loadArea(equipment.PlantAreaId, 'change')"">
                                        <ui-select-match placeholder=""Select ..."">{{$select.selected.PlantAreaName}}</ui-select-match>
                                        <ui-select-choices repeat=""equip.PlantAreaId as equip in PlantDDL | propsFilter: {PlantAreaName: $select.search} | limitTo: 50"" null-option=""defaultplant"" loose-null>
                                            <div ng-bind-html=""equip.PlantAreaName | highlight: $select.search""></div>
                                        </ui-select-c");
                WriteLiteral(@"hoices>
                                    </ui-select>
                                </div>
                                <div class=""col-md-3 col-sm-6 input-field"">
                                    <label class=""control-label"">
                                        Area &nbsp;&nbsp;&nbsp;
                                        <a ng-click=""Area()"" ng-disabled=""equipment.PlantAreaId == null"" tooltip-append-to-body=""true"" uib-tooltip=""Click here to create new Area"" tooltip-class=""customClass"" class=""mouse-pointer""><i class=""fa fa-plus-square""></i></a>
                                    </label>
                                    <ui-select ng-model=""equipment.AreaId"" theme=""bootstrap"" ng-disabled=""readOnlyPage || equipment.PlantAreaId == null"" style=""width: 800px;"" on-select=""loadSystem(equipment.AreaId, 'change')"">
                                        <ui-select-match placeholder=""Select ..."">{{$select.selected.AreaName}}</ui-select-match>
                                        <ui");
                WriteLiteral(@"-select-choices repeat=""equip.AreaId as equip in AreaDDL | propsFilter: {AreaName: $select.search} | limitTo: 50"" null-option=""defaultarea"" loose-null>
                                            <div ng-bind-html=""equip.AreaName | highlight: $select.search""></div>

                                        </ui-select-choices>
                                    </ui-select>
                                </div>
                                <div class=""col-md-3 col-sm-6 input-field"">
                                    <label class=""control-label"">
                                        System &nbsp;&nbsp;&nbsp;
                                        <a ng-click=""System()"" ng-disabled=""equipment.PlantAreaId == null || equipment.AreaId == null"" tooltip-append-to-body=""true"" uib-tooltip=""Click here to create new System"" tooltip-class=""customClass"" class=""mouse-pointer""><i class=""fa fa-plus-square""></i></a>
                                    </label>
                                    <ui-selec");
                WriteLiteral(@"t ng-model=""equipment.SystemId"" theme=""bootstrap"" ng-disabled=""readOnlyPage || equipment.PlantAreaId == null || equipment.AreaId == null"" style=""width: 800px;"">
                                        <ui-select-match placeholder=""Select ..."">{{$select.selected.SystemName}}</ui-select-match>
                                        <ui-select-choices repeat=""equip.SystemId as equip in SystemDDL | propsFilter: {SystemName: $select.search} | limitTo: 50"" null-option=""defaultsystem"" loose-null>
                                            <div ng-bind-html=""equip.SystemName | highlight: $select.search""></div>

                                        </ui-select-choices>
                                    </ui-select>
                                </div>
                                <div class=""col-md-2 col-sm-6 input-field"">
                                    <label class=""control-label"">Equipment Number</label>
                                    <div>
                                        <in");
                WriteLiteral(@"put ng-disabled=""readOnlyPage"" class=""form-control"" ng-model=""equipment.EquipmentCode"" name=""EquipmentCode"" />
                                        <span class=""text-danger""></span>
                                    </div>
                                </div>
                                <div class=""col-md-3 col-sm-6 input-field"" ng-class=""{ 'has-error' : userForm.EquipmentName.$invalid && !userForm.EquipmentName.$pristine }"">
                                    <label class=""control-label"">Equipment Name*</label>
                                    <div>
                                        <input ng-disabled=""readOnlyPage"" class=""form-control"" required ng-model=""equipment.EquipmentName"" name=""EquipmentName"" />
                                        <span class=""text-danger""></span>
                                    </div>
                                </div>
                                <div class=""col-md-2 col-sm-6 input-field"" ng-class=""{ 'has-error' : userForm.ListOrder.$i");
                WriteLiteral(@"nvalid && !userForm.ListOrder.$pristine }"">
                                    <label class=""control-label"">Reporting Order</label>
                                    <div>
                                        <input type=""number"" min=""0"" onkeypress=""return event.charCode >= 48 && event.charCode <= 57 || event.charCode == 46"" ng-disabled=""readOnlyPage"" class=""form-control"" ng-model=""equipment.ListOrder"" name=""ListOrder"" />
                                        <span class=""text-danger""></span>
                                    </div>
                                </div>
                                <div class=""col-md-2 col-sm-6 input-field"">
                                    <label class=""control-label"">Orientation</label>
                                    <ui-select ng-model=""equipment.OrientationId"" theme=""bootstrap"" ng-disabled=""readOnlyPage"" style=""width: 800px;"">
                                        <ui-select-match placeholder=""Select ..."">{{$select.selected.LValue}}</ui-s");
                WriteLiteral(@"elect-match>
                                        <ui-select-choices repeat=""equip.LookupId as equip in OrientationDDL | propsFilter: {LValue: $select.search} | limitTo: 50"" null-option=""defaultorientation"" loose-null>
                                            <div ng-bind-html=""equip.LValue | highlight: $select.search""></div>
                                        </ui-select-choices>
                                    </ui-select>

                                </div>
                                <div class=""col-md-3 col-sm-6 input-field"">
                                    <label class=""control-label"">Stand By Equipment</label>
                                    <ui-select ng-model=""equipment.StandByEquipId"" theme=""bootstrap"" ng-disabled=""readOnlyPage"" style=""width: 800px;"">
                                        <ui-select-match placeholder=""Select ..."">{{$select.selected.EquipmentName}}</ui-select-match>
                                        <ui-select-choices repeat=""equip.Eq");
                WriteLiteral(@"uipmentId as equip in StandByEquipmentDDL | propsFilter: {EquipmentName: $select.search} | limitTo: 50"" null-option=""defaultStandbyEquip"" loose-null>
                                            <div ng-bind-html=""equip.EquipmentName | highlight: $select.search""></div>
                                        </ui-select-choices>
                                    </ui-select>
                                </div>
                                <div class=""col-md-2 col-sm-6 input-field"">
                                    <label class=""control-label"">Mounting</label>
                                    <ui-select ng-model=""equipment.MountingId"" theme=""bootstrap"" ng-disabled=""readOnlyPage"" style=""width: 800px;"">
                                        <ui-select-match placeholder=""Select ..."">{{$select.selected.LValue}}</ui-select-match>
                                        <ui-select-choices repeat=""equip.LookupId as equip in MountingDDL | propsFilter: {LValue: $select.search} | limitTo: 50"" nul");
                WriteLiteral(@"l-option=""defaultmounting"" loose-null>
                                            <div ng-bind-html=""equip.LValue | highlight: $select.search""></div>

                                        </ui-select-choices>
                                    </ui-select>
                                </div>
                                <div class=""col-md-3 col-sm-6 input-field"">
                                    <label class=""control-label"">Equipment Description</label>
                                    <div>
                                        <textarea rows=""1"" name=""Description"" ng-disabled=""readOnlyPage"" class=""form-control"" maxlength=""100"" ng-model=""equipment.Descriptions""></textarea>
                                        <span class=""text-danger""></span>
                                    </div>
                                </div>
                                <div class=""col-md-2 col-sm-6 input-field"" ng-show=""isEdit"">
                                    <label class=""control-l");
                WriteLiteral("abel\">Status</label>\r\n                                    <div>\r\n                                        <select ng-disabled=\"readOnlyPage\" class=\"form-control\" ng-model=\"equipment.Active\" name=\"Active\">\r\n                                            ");
                EndContext();
                BeginContext(15106, 33, false);
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "2de601732ebb48c298162f0107319333", async() => {
                    BeginContext(15124, 6, true);
                    WriteLiteral("Active");
                    EndContext();
                }
                );
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_4.Value;
                __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_4);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                EndContext();
                BeginContext(15139, 46, true);
                WriteLiteral("\r\n                                            ");
                EndContext();
                BeginContext(15185, 35, false);
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "23c04447e8a34591a79ba1f31013cc79", async() => {
                    BeginContext(15203, 8, true);
                    WriteLiteral("Inactive");
                    EndContext();
                }
                );
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_5.Value;
                __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_5);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                EndContext();
                BeginContext(15220, 249, true);
                WriteLiteral("\r\n                                        </select>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                ");
                EndContext();
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.RenderAtEndOfFormTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_6);
            BeginWriteTagHelperAttribute();
            __tagHelperStringValueBuffer = EndWriteTagHelperAttribute();
            __tagHelperExecutionContext.AddHtmlAttribute("novalidate", Html.Raw(__tagHelperStringValueBuffer), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.Minimized);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            EndContext();
            BeginContext(15476, 73, true);
            WriteLiteral("\r\n            </div>\r\n\r\n            <div class=\"drive\">\r\n                ");
            EndContext();
            BeginContext(15549, 29208, false);
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("form", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "959c54626c534d78aa99723f199e2a42", async() => {
                BeginContext(15587, 11880, true);
                WriteLiteral(@"
                    <div class=""drive-unit animate-switch"" ng-switch-when=""stage2"">
                        <div class=""row heading-wrapper"">
                            <div class=""col-md-3 heading"">
                                <h4 class=""page-header text-primary"">{{isEditDrive?""Edit Drive unit"":isSearchDrive?""Search Drive Unit"":isViewDrive?""View Drive Unit"":isCreateDrive?""Create Drive Unit"":""DriveUnit""}}</h4>
                            </div>
                            <div class=""col-md-9 menu-button"">
                                <a ng-click=""next('stage1')""><i class=""fa fa-arrow-left icon-filter"" title=""Back to Equipment""></i>Go Back Equipment</a>
                                <a ng-disabled=""isCreateDrive"" ng-click=""isCreateDrive || createDriveToggle()"" title=""Create""><i class=""fa fa-plus icon-filter""></i>Create</a>
                                <span class=""Pipe""></span>
                                <span class=""rds-buttons"">
                                    <span class=""");
                WriteLiteral(@"dropdown"" ng-show=""isCreateDrive"">
                                        <a ng-disabled=""readOnlyDrivePage || DriveUserForm.$invalid"" ng-click=""readOnlyDrivePage || DriveUserForm.$invalid || save()""><i class=""fa fa-save icon-filter""></i><span>Save</span></a>
                                        <a class=""dropdown-toggle arrow"" id=""dropdownMenuButton"" data-toggle=""dropdown"" aria-haspopup=""true"" aria-expanded=""false""></a>
                                        <span class=""dropdown-menu"" aria-labelledby=""dropdownMenuButton"">
                                            <a class=""dropdown-item"" ng-disabled=""readOnlyDrivePage || DriveUserForm.$invalid"" ng-click=""readOnlyDrivePage || DriveUserForm.$invalid || save('stage3')"">Save & Add Intermediate</a>
                                            <a class=""dropdown-item"" ng-disabled=""readOnlyDrivePage || DriveUserForm.$invalid"" ng-click=""readOnlyDrivePage || DriveUserForm.$invalid || save('stage4')"">Save & Add Driven</a>
                                 ");
                WriteLiteral(@"       </span>
                                    </span>
                                </span>
                                <span class=""rds-buttons"">
                                    <span class=""dropdown"" ng-show=""isEditDrive || isViewDrive"">
                                        <a ng-disabled=""readOnlyDrivePage || DriveUserForm.$invalid"" ng-click=""readOnlyDrivePage || DriveUserForm.$invalid || updateDrive()"" title=""Update""><i class=""fa fa-save icon-filter""></i><span>Update</span></a>
                                        <a class=""dropdown-toggle arrow"" id=""dropdownMenuButton"" data-toggle=""dropdown"" aria-haspopup=""true"" aria-expanded=""false""></a>
                                        <span class=""dropdown-menu"" aria-labelledby=""dropdownMenuButton"">
                                            <a class=""dropdown-item"" ng-disabled=""readOnlyDrivePage || DriveUserForm.$invalid"" ng-click=""readOnlyDrivePage || DriveUserForm.$invalid || updateDrive('stage3')"">Update & Add Intermediate</a>");
                WriteLiteral(@"
                                            <a class=""dropdown-item"" ng-disabled=""readOnlyDrivePage || DriveUserForm.$invalid"" ng-click=""readOnlyDrivePage || DriveUserForm.$invalid || updateDrive('stage4')"">Update & Add Driven</a>
                                        </span>
                                    </span>
                                </span>
                                <a ng-disabled=""isEditDrive || isViewDrive"" ng-click=""isEditDrive || clearOutDrive()"" ng-show=""isCreateDrive || isEditDrive || isViewDrive"" title=""Clear""><i class=""fa fa-eraser icon-filter""></i><span>Clear</span></a>
                                <a ng-show=""isSearchDrive"" ng-click=""clearDriveModal()"" title=""Clear""><i class=""fa fa-eraser icon-filter""></i><span>Clear</span></a>
                            </div>
                        </div>

                        <div class=""row create-form"" ng-show=""isEditDrive || isCreateDrive || isViewDrive"">
                            <div class=""col-md-12"">
        ");
                WriteLiteral(@"                        <div class=""col-md-2 col-sm-3 input-field"">
                                    <label class=""control-label"">Equipment Name</label>
                                    <div>
                                        <input disabled class=""form-control"" value={{equipment.EquipmentName}} name=""EquipmentName"" />
                                        <span class=""text-danger""></span>
                                    </div>
                                </div>
                                <div class=""col-md-2 col-sm-3 input-field"" ng-class=""{ 'has-error' : DriveUserForm.IdentificationName.$invalid && !DriveUserForm.IdentificationName.$pristine }"">
                                    <label class=""control-label"">Asset Name*</label>
                                    <div>
                                        <input ng-disabled=""readOnlyDrivePage"" class=""form-control"" required ng-model=""driveUnit.IdentificationName"" name=""IdentificationName"" />
                         ");
                WriteLiteral(@"               <span class=""text-danger""></span>
                                    </div>
                                </div>
                                <div class=""col-md-2 col-sm-6 input-field"">
                                    <label class=""control-label"">
                                        <a ng-click=""ChooseAsset('Drive')"" tooltip-append-to-body=""true"" uib-tooltip=""Select Taxonomy"" tooltip-class=""customClass"" class=""mouse-pointer"">
                                            Select Taxonomy* <i class=""fa fa-info""></i>
                                        </a>
                                    </label>
                                    <div>
                                        <input disabled class=""form-control"" required ng-model=""driveUnit.AssetCode"" name=""Asset"" />
                                        <span class=""text-danger""></span>
                                    </div>
                                </div>
                                <div class");
                WriteLiteral(@"=""col-md-2 col-sm-6 input-field"" ng-class=""{ 'has-error' : DriveUserForm.ListOrder.$invalid && !DriveUserForm.ListOrder.$pristine }"">
                                    <label class=""control-label"">Reporting Order</label>
                                    <div>
                                        <input type=""number"" min=""0"" onkeypress=""return event.charCode >= 48 && event.charCode <= 57 || event.charCode == 46"" ng-disabled=""readOnlyDrivePage"" class=""form-control"" ng-model=""driveUnit.ListOrder"" name=""ListOrder"" />
                                        <span class=""text-danger""></span>
                                    </div>
                                </div>
                                <div class=""col-md-2 col-sm-6 input-field"">
                                    <label class=""control-label"">Manufacturer*</label>
                                    <ui-select required ng-model=""driveUnit.ManufacturerId"" theme=""bootstrap"" ng-disabled=""readOnlyDrivePage"" style=""width: 800px;"">
   ");
                WriteLiteral(@"                                     <ui-select-match placeholder=""Select ..."">{{$select.selected.ManufacturerName}}</ui-select-match>
                                        <ui-select-choices repeat=""drive.ManufacturerId as drive in DriveMFTDDL | propsFilter: {ManufacturerName: $select.search} | limitTo: 50"" null-option=""defaultmanufacture"" loose-null>
                                            <div ng-bind-html=""drive.ManufacturerName | highlight: $select.search""></div>

                                        </ui-select-choices>
                                    </ui-select>
                                </div>
                                <div class=""col-md-2 col-sm-6 input-field"">
                                    <label style=""margin-left: 15px; margin-top: 24px;"" class=""control-label shaft-label link"">
                                        <a ng-click=""SelectShaft('DR')"" ng-disabled=""driveUnit.IdentificationName.length == null"" tooltip-append-to-body=""true"" uib-tooltip=""Select Sh");
                WriteLiteral(@"aft"" tooltip-class=""customClass"" class=""mouse-pointer"">
                                            Shaft* <i class=""fa fa-info""></i>
                                        </a>
                                    </label>
                                </div>

                                <div class=""taxonomy-values"">
                                    <div class=""col-md-2 col-sm-6 input-field"">
                                        <label class=""control-label"">Mean Repair Man (Hrs)</label>
                                        <div>
                                            <input type=""number"" min=""0"" onkeypress=""return event.charCode >= 48 && event.charCode <= 57 || event.charCode == 46"" ng-disabled=""readOnlyDrivePage"" class=""form-control"" ng-model=""driveUnit.MeanRepairManHours"" name=""MeanRepairManHours"" />
                                            <span class=""text-danger""></span>
                                        </div>
                                    </div>
       ");
                WriteLiteral(@"                             <div class=""col-md-2 col-sm-6 input-field"">
                                        <label class=""control-label"">Down Time Cost/Hr :</label>
                                        <span class=""unit"">$</span>
                                        <div>
                                            <input type=""number"" min=""0"" onkeypress=""return event.charCode >= 48 && event.charCode <= 57 || event.charCode == 46"" ng-disabled=""readOnlyDrivePage"" class=""form-control"" ng-model=""driveUnit.DownTimeCostPerHour"" name=""DownTimeCostPerHour"" />
                                            <span class=""text-danger""></span>
                                        </div>
                                    </div>
                                    <div class=""col-md-2 col-sm-6 input-field"">
                                        <label class=""control-label"">Cost To Repair :</label>
                                        <span class=""unit"">$</span>
                                 ");
                WriteLiteral(@"       <div>
                                            <input type=""number"" min=""0"" onkeypress=""return event.charCode >= 48 && event.charCode <= 57 || event.charCode == 46"" ng-disabled=""readOnlyDrivePage"" class=""form-control"" ng-model=""driveUnit.CostToRepair"" name=""CostToRepair"" />
                                            <span class=""text-danger""></span>
                                        </div>
                                    </div>
                                    <div class=""col-md-2 col-sm-6 input-field"">
                                        <label class=""control-label"">Mean Time Failure Rate :</label>
                                        <span class=""unit"">%</span>
                                        <div>
                                            <input type=""number"" min=""0"" onkeypress=""return event.charCode >= 48 && event.charCode <= 57 || event.charCode == 46"" ng-disabled=""readOnlyDrivePage"" class=""form-control"" ng-model=""driveUnit.MeanFailureRate"" name=""MeanFail");
                WriteLiteral(@"ureRate"" />
                                            <span class=""text-danger""></span>
                                        </div>
                                    </div>
                                    <div class=""col-md-2 col-sm-6 input-field"" ng-show=""isEditDrive"">
                                        <label class=""control-label"">Status</label>
                                        <div>
                                            <select ng-disabled=""readOnlyDrivePage"" class=""form-control"" ng-model=""driveUnit.Active"" name=""Active"">
                                                ");
                EndContext();
                BeginContext(27467, 33, false);
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "96a1b3e206e845af98b21bc98c9a5aab", async() => {
                    BeginContext(27485, 6, true);
                    WriteLiteral("Active");
                    EndContext();
                }
                );
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_4.Value;
                __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_4);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                EndContext();
                BeginContext(27500, 50, true);
                WriteLiteral("\r\n                                                ");
                EndContext();
                BeginContext(27550, 35, false);
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "4b20fb9a130241669ba0497e8aa0e7e1", async() => {
                    BeginContext(27568, 8, true);
                    WriteLiteral("Inactive");
                    EndContext();
                }
                );
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_5.Value;
                __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_5);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                EndContext();
                BeginContext(27585, 3009, true);
                WriteLiteral(@"
                                            </select>
                                        </div>
                                    </div>
                                    <div class=""col-md-2 col-sm-6 input-field"">
                                        <label class=""control-label"">Line Frequency*</label>
                                        <select ng-model=""driveUnit.LineFrequencyId"" required class=""form-control search-input"" name=""LineFrequency""
                                                ng-options=""value.LookupId as value.LValue for (key, value) in LineFrequencyDDL""></select>
                                    </div>
                                    <div class=""col-md-2 col-sm-6 input-field"" ng-class=""{ 'has-error' : DriveUserForm.RPM.$invalid && !DriveUserForm.RPM.$pristine }"">
                                        <label class=""control-label"">RPM*</label>
                                        <div>
                                            <input ng-disabled=""rea");
                WriteLiteral(@"dOnlyDrivePage"" required class=""form-control"" ng-model=""driveUnit.RPM"" name=""RPM"" />
                                            <span class=""text-danger""></span>
                                        </div>
                                    </div>
                                    <div class=""col-md-2 col-sm-6 input-field"">
                                        <label class=""control-label"">Speed Type*</label>
                                        <select ng-model=""driveUnit.SpeedTypeId"" class=""form-control search-input"" name=""SpeedType"" ng-change=""onTypechange(driveUnit.SpeedTypeId)""
                                                ng-options=""value.LookupId as value.LValue for (key, value) in SpeedTypeDDL""></select>
                                    </div>
                                    <div class=""col-md-1 col-sm-6 input-field speed-type"" ng-show=""isTypeDrive"">
                                        <label class=""control-label"">Min*</label>
                                      ");
                WriteLiteral(@"  <div>
                                            <input type=""number"" min=""0"" onkeypress=""return event.charCode >= 48 && event.charCode <= 57 || event.charCode == 46"" ng-disabled=""readOnlyDrivePage"" class=""form-control"" ng-model=""driveUnit.MinRPM"" name=""minValue"">
                                        </div>
                                    </div>
                                    <div class=""col-md-1 col-sm-6 input-field speed-type"" ng-show=""isTypeDrive"">
                                        <label class=""control-label"">Max*</label>
                                        <div>
                                            <input type=""number"" min=""0"" onkeypress=""return event.charCode >= 48 && event.charCode <= 57 || event.charCode == 46"" ng-disabled=""readOnlyDrivePage"" class=""form-control"" ng-model=""driveUnit.MaxRPM"" name=""maxValue"">
                                        </div>
                                    </div>

");
                EndContext();
                BeginContext(31117, 13633, true);
                WriteLiteral(@"                                    <div class=""col-md-2 col-sm-6 input-field"" checked>
                                        <label class=""control-label"">Reporting Service(s)</label>
                                        <div ng-dropdown-multiselect=""""
                                             options=""DriveReporting""
                                             selected-model=""DriveSelectedData""
                                             extra-settings=""ReportingSerSettings"" checkboxes=""true"" disabled=""readOnlyDrivePage"" class=""reporting"">
                                        </div>
                                    </div>
                                </div>
                                <div class=""view-more-wrapper"">
                                    <span class=""more-info"" ng-click=""morefields()"">
                                        <span class=""more-info-text"">{{moreFields?""- Less Info"":""+ More Info""}}</span>
                                    </span>
             ");
                WriteLiteral(@"                   </div>
                                <div ng-show=""moreFields"" class=""morefileds"">
                                    <div class=""col-md-2 col-sm-6 input-field"">
                                        <label class=""control-label"">Year Of Manufacture</label>
                                        <div>
                                            <input ng-disabled=""readOnlyDrivePage"" class=""form-control"" ng-model=""driveUnit.ManufactureYear"" name=""ManufactureYear"" />
                                            <span class=""text-danger""></span>
                                        </div>
                                    </div>
                                    <div class=""col-md-2 col-sm-6 input-field"">
                                        <label class=""control-label"">First Installation Date:</label>
                                        <p class=""input-group date-picker date-wrapper"">
                                            <input type=""text"" class=""form-cont");
                WriteLiteral(@"rol date-picker-input"" ng-dblclick=""d_FirstInstallationDate=true"" placeholder=""dd/mm/yyyy"" uib-datepicker-popup=""dd/MM/yyyy""
                                                   ng-model=""driveUnit.FirstInstallationDate"" ng-disabled=""readOnlyDrivePage"" name=""FirstInstallationDate"" ng-init=""d_FirstInstallationDate=false"" is-open=""d_FirstInstallationDate""
                                                   datepicker-options=""E_options"" close-text=""Close"" alt-input-formats=""['M!/d!/yyyy']"" />
                                            <span class=""input-group-btn date-picker-button"">
                                                <button type=""button"" class=""btn btn-default"" ng-disabled=""readOnlyDrivePage"" ng-click=""d_FirstInstallationDate=true""><i class=""fa fa-calendar""></i></button>
                                            </span>
                                        </p>
                                    </div>
                                    <div class=""col-md-2 col-sm-6 input-field"">
  ");
                WriteLiteral(@"                                      <label class=""control-label"">Operating Mode</label>
                                        <ui-select ng-model=""driveUnit.OperationModeId"" theme=""bootstrap"" ng-disabled=""readOnlyDrivePage"" style=""width: 800px;"">
                                            <ui-select-match placeholder=""Select ..."">{{$select.selected.LValue}}</ui-select-match>
                                            <ui-select-choices repeat=""drive.LookupId as drive in OperationModeDDL | propsFilter: {LValue: $select.search} | limitTo: 50"" null-option=""defaultoperationmode"" loose-null>
                                                <div ng-bind-html=""drive.LValue | highlight: $select.search""></div>

                                            </ui-select-choices>
                                        </ui-select>
                                    </div>
                                    <div class=""col-md-2 col-sm-6 input-field"">
                                        <label class=""co");
                WriteLiteral(@"ntrol-label"">Model</label>
                                        <div>
                                            <input ng-disabled=""readOnlyDrivePage"" class=""form-control"" ng-model=""driveUnit.Model"" name=""Model"" />
                                            <span class=""text-danger""></span>
                                        </div>
                                    </div>
                                    <div class=""col-md-2 col-sm-6 input-field"">
                                        <label class=""control-label"">Frame</label>
                                        <div>
                                            <input ng-disabled=""readOnlyDrivePage"" class=""form-control"" ng-model=""driveUnit.Frame"" name=""Frame"" />
                                            <span class=""text-danger""></span>
                                        </div>
                                    </div>

                                    <div class=""col-md-2 col-sm-6 input-field"">
                ");
                WriteLiteral(@"                        <label class=""control-label"">Serial Number</label>
                                        <div>
                                            <input ng-disabled=""readOnlyDrivePage"" class=""form-control"" ng-model=""driveUnit.SerialNumber"" name=""SerialNumber"" />
                                            <span class=""text-danger""></span>
                                        </div>
                                    </div>
                                    <div class=""col-md-2 col-sm-6 input-field"">
                                        <label class=""control-label"">Voltage</label>
                                        <div>
                                            <input ng-disabled=""readOnlyDrivePage"" class=""form-control"" ng-model=""driveUnit.Voltage"" name=""Voltage"" />
                                            <span class=""text-danger""></span>
                                        </div>
                                    </div>
                               ");
                WriteLiteral(@"     <div class=""col-md-2 col-sm-6 input-field"">
                                        <label class=""control-label"">Power Factor</label>
                                        <div>
                                            <input ng-disabled=""readOnlyDrivePage"" class=""form-control"" ng-model=""driveUnit.PowerFactor"" name=""PowerFactor"" />
                                            <span class=""text-danger""></span>
                                        </div>
                                    </div>
                                    <div class=""col-md-2 col-sm-6 input-field"">
                                        <label class=""control-label"">Unit Rate (Energy) :</label>
                                        <span class=""unit"">$</span>
                                        <div>
                                            <input ng-disabled=""readOnlyDrivePage"" class=""form-control"" ng-model=""driveUnit.UnitRate"" name=""UnitRate"" />
                                            <span class");
                WriteLiteral(@"=""text-danger""></span>
                                        </div>
                                    </div>

                                    <div class=""col-md-2 col-sm-6 input-field"">
                                        <label class=""control-label"">HP/KW</label>
                                        <div>
                                            <input ng-disabled=""readOnlyDrivePage"" class=""form-control"" ng-model=""driveUnit.HP"" name=""HP"" />
                                            <span class=""text-danger""></span>
                                        </div>
                                    </div>
                                    <div class=""col-md-2 col-sm-6 input-field"">
                                        <label class=""control-label"">Type</label>
                                        <div>
                                            <input ng-disabled=""readOnlyDrivePage"" class=""form-control"" ng-model=""driveUnit.MType"" name=""Type"" />
                       ");
                WriteLiteral(@"                     <span class=""text-danger""></span>
                                        </div>
                                    </div>
                                    <div class=""col-md-2 col-sm-6 input-field"">
                                        <label class=""control-label"">Motor Fan Blades</label>
                                        <div>
                                            <input ng-disabled=""readOnlyDrivePage"" class=""form-control"" ng-model=""driveUnit.MotorFanBlades"" name=""MotorFanBlades"" />
                                            <span class=""text-danger""></span>
                                        </div>
                                    </div>
                                    <div class=""col-md-2 col-sm-6 input-field"">
                                        <label class=""control-label"">Rotor Bars</label>
                                        <div>
                                            <input ng-disabled=""readOnlyDrivePage"" class=""form-cont");
                WriteLiteral(@"rol"" ng-model=""driveUnit.RotorBars"" name=""RotorBars"" />
                                            <span class=""text-danger""></span>
                                        </div>
                                    </div>
                                    <div class=""col-md-2 col-sm-6 input-field"">
                                        <label class=""control-label"">Poles</label>
                                        <div>
                                            <input ng-disabled=""readOnlyDrivePage"" class=""form-control"" ng-model=""driveUnit.Poles"" name=""Poles"" />
                                            <span class=""text-danger""></span>
                                        </div>
                                    </div>
                                    <div class=""col-md-2 col-sm-6 input-field"">
                                        <label class=""control-label"">Slots</label>
                                        <div>
                                            <input ng");
                WriteLiteral(@"-disabled=""readOnlyDrivePage"" class=""form-control"" ng-model=""driveUnit.Slots"" name=""Slots"" />
                                            <span class=""text-danger""></span>
                                        </div>
                                    </div>

                                    <div class=""col-md-2 col-sm-6 input-field"">
                                        <label class=""control-label"">Belt Length</label>
                                        <div>
                                            <input ng-disabled=""readOnlyDrivePage"" class=""form-control"" ng-model=""driveUnit.BeltLength"" name=""BeltLength"" />
                                            <span class=""text-danger""></span>
                                        </div>
                                    </div>
                                    <div class=""col-md-2 col-sm-6 input-field"">
                                        <label class=""control-label"">Coupling</label>
                                        <");
                WriteLiteral(@"ui-select ng-model=""driveUnit.CouplingId"" theme=""bootstrap"" ng-disabled=""readOnlyDrivePage"" style=""width: 800px;"">
                                            <ui-select-match placeholder=""Select ..."">{{$select.selected.LValue}}</ui-select-match>
                                            <ui-select-choices repeat=""drive.LookupId as drive in CouplingDDL | propsFilter: {LValue: $select.search} | limitTo: 50"" null-option=""defaultcoupling"" loose-null>
                                                <div ng-bind-html=""drive.LValue | hig+hlight: $select.search""></div>

                                            </ui-select-choices>
                                        </ui-select>
                                    </div>
                                    <div class=""col-md-2 col-sm-6 input-field"">
                                        <label class=""control-label"">Pulley Diameter (Drive)</label>
                                        <div>
                                            <input ng");
                WriteLiteral(@"-disabled=""readOnlyDrivePage"" class=""form-control"" ng-model=""driveUnit.PulleyDiaDrive"" name=""PulleyDiaDrive"" />
                                            <span class=""text-danger""></span>
                                        </div>
                                    </div>
                                    <div class=""col-md-2 col-sm-6 input-field"">
                                        <label class=""control-label"">Pulley Diameter (Driven)</label>
                                        <div>
                                            <input ng-disabled=""readOnlyDrivePage"" class=""form-control"" ng-model=""driveUnit.PulleyDiaDriven"" name=""PulleyDiaDriven"" />
                                            <span class=""text-danger""></span>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class=""table-responsive"">
      ");
                WriteLiteral(@"                      <div class=""grid data"">
                                <div id=""uiGrid"" ui-grid=""gridOpts1"" class=""grid"" ui-grid-cellnav ui-grid-pinning ui-grid-resize-columns ui-grid-exporter></div>
                            </div>
                        </div>
                    </div>
                ");
                EndContext();
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.RenderAtEndOfFormTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_7);
            BeginWriteTagHelperAttribute();
            __tagHelperStringValueBuffer = EndWriteTagHelperAttribute();
            __tagHelperExecutionContext.AddHtmlAttribute("novalidate", Html.Raw(__tagHelperStringValueBuffer), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.Minimized);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            EndContext();
            BeginContext(44757, 73, true);
            WriteLiteral("\r\n            </div>\r\n\r\n            <div class=\"inter\">\r\n                ");
            EndContext();
            BeginContext(44830, 25271, false);
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("form", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "37ece0ccad984044a3991eceb0933f6d", async() => {
                BeginContext(44875, 11498, true);
                WriteLiteral(@"
                    <div class=""intermediate-unit animate-switch"" ng-switch-when=""stage3"">
                        <div class=""row heading-wrapper"">
                            <div class=""col-md-3 heading"">
                                <h4 class=""page-header text-primary"">{{isEditInter?""Edit Intermediate Unit"":isSearchInter?""Search Intermediate Unit"":isViewInter?""View Intermediate Unit"":isCreateInter?""Create Intermediate Unit"":""Intermediate Unit""}}</h4>
                            </div>
                            <div class=""col-md-9 menu-button"">
                                <a ng-click=""next('stage2')""><i class=""fa fa-arrow-left icon-filter"" title=""Back to Drive""></i>Go Back Drive</a>
                                <a ng-disabled=""isCreateInter"" ng-click=""isCreateInter || createInterToggle()"" title=""Create""><i class=""fa fa-plus icon-filter""></i>Create</a>
                                <span class=""Pipe""></span>
                                <span class=""rds-buttons"">
              ");
                WriteLiteral(@"                      <span class=""dropdown"" ng-show=""isCreateInter"">
                                        <a ng-disabled=""readOnlyInterPage || IntermediateUserForm.$invalid"" ng-click=""readOnlyInterPage || IntermediateUserForm.$invalid || saveIntermediate()""><i class=""fa fa-save icon-filter""></i><span>Save</span></a>
                                        <a class=""dropdown-toggle arrow"" id=""dropdownMenuButton"" data-toggle=""dropdown"" aria-haspopup=""true"" aria-expanded=""false""></a>
                                        <span class=""dropdown-menu"" aria-labelledby=""dropdownMenuButton"">
                                            <a class=""dropdown-item"" ng-disabled=""readOnlyInterPage || IntermediateUserForm.$invalid"" ng-click=""readOnlyInterPage || IntermediateUserForm.$invalid || saveIntermediate('stage4')"">Save & Add Driven</a>
                                        </span>
                                    </span>
                                </span>
                                <span cl");
                WriteLiteral(@"ass=""rds-buttons"">
                                    <span class=""dropdown"" ng-show=""isEditInter || isViewInter"">
                                        <a ng-disabled=""readOnlyInterPage || IntermediateUserForm.$invalid"" ng-click=""readOnlyInterPage || IntermediateUserForm.$invalid || updateIntermediate()"" title=""Update""><i class=""fa fa-save icon-filter""></i><span>Update</span></a>
                                        <a class=""dropdown-toggle arrow"" id=""dropdownMenuButton"" data-toggle=""dropdown"" aria-haspopup=""true"" aria-expanded=""false""></a>
                                        <span class=""dropdown-menu"" aria-labelledby=""dropdownMenuButton"">
                                            <a class=""dropdown-item"" ng-disabled=""readOnlyInterPage || IntermediateUserForm.$invalid"" ng-click=""readOnlyInterPage || IntermediateUserForm.$invalid || updateIntermediate('stage4')"">Update & Add Driven</a>
                                        </span>
                                    </span>
           ");
                WriteLiteral(@"                     </span>

                                <a ng-disabled=""isEditInter || isViewInter"" ng-click=""isEditInter || clearOutInter()"" ng-show=""isCreateInter || isEditInter || isViewInter"" title=""Clear""><i class=""fa fa-eraser icon-filter""></i><span>Clear</span></a>
                                <a ng-show=""isSearchInter"" ng-click=""clearIntermediateModal()"" title=""Clear""><i class=""fa fa-eraser icon-filter""></i><span>Clear</span></a>
                            </div>
                        </div>
                        <div class=""row create-form"" ng-show=""isEditInter || isCreateInter || isViewInter"">
                            <div class=""col-md-12"">
                                <div class=""col-md-2 col-sm-3 input-field"">
                                    <label class=""control-label"">Equipment Name</label>
                                    <div>
                                        <input disabled class=""form-control"" value={{equipment.EquipmentName}} name=""EquipmentName");
                WriteLiteral(@""" />
                                        <span class=""text-danger""></span>
                                    </div>
                                </div>
                                <div class=""col-md-2 col-sm-3 input-field"" ng-class=""{ 'has-error' : IntermediateUserForm.IdentificationName.$invalid && !IntermediateUserForm.IdentificationName.$pristine }"">
                                    <label class=""control-label"">Asset Name*</label>
                                    <div>
                                        <input ng-disabled=""readOnlyInterPage"" class=""form-control"" required ng-model=""intermediateUnit.IdentificationName"" name=""IdentificationName"" />
                                        <span class=""text-danger""></span>
                                    </div>
                                </div>
                                <div class=""col-md-2 col-sm-6 input-field"">
                                    <label class=""control-label"">
                                ");
                WriteLiteral(@"        <a ng-click=""ChooseAsset('Intermediate')"" tooltip-append-to-body=""true"" uib-tooltip=""Select Taxonomy"" tooltip-class=""customClass"" class=""mouse-pointer"">
                                            Select Taxonomy* <i class=""fa fa-info""></i>
                                        </a>
                                    </label>
                                    <div>
                                        <input disabled class=""form-control"" required ng-model=""intermediateUnit.AssetCode"" name=""Asset"" />
                                        <span class=""text-danger""></span>
                                    </div>
                                </div>
                                <div class=""col-md-2 col-sm-6 input-field"" ng-class=""{ 'has-error' : IntermediateUserForm.ListOrder.$invalid && !IntermediateUserForm.ListOrder.$pristine }"">
                                    <label class=""control-label"">Reporting Order</label>
                                    <div>
              ");
                WriteLiteral(@"                          <input type=""number"" ng-disabled=""readOnlyInterPage"" class=""form-control"" ng-model=""intermediateUnit.ListOrder"" name=""ListOrder"" />
                                        <span class=""text-danger""></span>
                                    </div>
                                </div>
                                <div class=""col-md-2 col-sm-6 input-field"">
                                    <label class=""control-label"">Manufacturer*</label>
                                    <ui-select required ng-model=""intermediateUnit.ManufacturerId"" theme=""bootstrap"" ng-disabled=""readOnlyInterPage"" style=""width: 800px;"">
                                        <ui-select-match placeholder=""Select ..."">{{$select.selected.ManufacturerName}}</ui-select-match>
                                        <ui-select-choices repeat=""inter.ManufacturerId as inter in IntermediateMFTDDL | propsFilter: {ManufacturerName: $select.search} | limitTo: 50"" null-option=""defaultmanufacture"" loose-null>");
                WriteLiteral(@"
                                            <div ng-bind-html=""inter.ManufacturerName | highlight: $select.search""></div>

                                        </ui-select-choices>
                                    </ui-select>
                                </div>
                                <div class=""col-md-2 col-sm-6 input-field"">
                                    <label style=""margin-left: 15px; margin-top: 24px;"" class=""control-label shaft-label link"">
                                        <a ng-click=""SelectShaft('IN')"" ng-disabled=""intermediateUnit.IdentificationName.length == null"" tooltip-append-to-body=""true"" uib-tooltip=""Select Shaft"" tooltip-class=""customClass"" class=""mouse-pointer"">
                                            Shaft* <i class=""fa fa-info""></i>
                                        </a>
                                    </label>
                                </div>

                                <div class=""taxonomy-values"">
                  ");
                WriteLiteral(@"                  <div class=""col-md-2 col-sm-6 input-field"">
                                        <label class=""control-label"">Mean Repair Man (Hrs)</label>
                                        <div>
                                            <input type=""number"" min=""0"" onkeypress=""return event.charCode >= 48 && event.charCode <= 57 || event.charCode == 46"" ng-disabled=""readOnlyInterPage"" class=""form-control"" ng-model=""intermediateUnit.MeanRepairManHours"" name=""MeanRepairManHours"" />
                                            <span class=""text-danger""></span>
                                        </div>
                                    </div>
                                    <div class=""col-md-2 col-sm-6 input-field"">
                                        <label class=""control-label"">Down Time Cost/Hr :</label>
                                        <span class=""unit"">$</span>
                                        <div>
                                            <input type=");
                WriteLiteral(@"""number"" min=""0"" onkeypress=""return event.charCode >= 48 && event.charCode <= 57 || event.charCode == 46"" ng-disabled=""readOnlyInterPage"" class=""form-control"" ng-model=""intermediateUnit.DownTimeCostPerHour"" name=""DownTimeCostPerHour"" />
                                            <span class=""text-danger""></span>
                                        </div>
                                    </div>
                                    <div class=""col-md-2 col-sm-6 input-field"">
                                        <label class=""control-label"">Cost To Repair :</label>
                                        <span class=""unit"">$</span>
                                        <div>
                                            <input type=""number"" min=""0"" onkeypress=""return event.charCode >= 48 && event.charCode <= 57 || event.charCode == 46"" ng-disabled=""readOnlyInterPage"" class=""form-control"" ng-model=""intermediateUnit.CostToRepair"" name=""CostToRepair"" />
                                           ");
                WriteLiteral(@" <span class=""text-danger""></span>
                                        </div>
                                    </div>
                                    <div class=""col-md-2 col-sm-6 input-field"">
                                        <label class=""control-label"">Mean Time Failure Rate :%</label>
                                        <div>
                                            <input type=""number"" min=""0"" onkeypress=""return event.charCode >= 48 && event.charCode <= 57 || event.charCode == 46"" ng-disabled=""readOnlyInterPage"" class=""form-control"" ng-model=""intermediateUnit.MeanFailureRate"" name=""MeanFailureRate"" />
                                            <span class=""text-danger""></span>
                                        </div>
                                    </div>

                                    <div class=""col-md-2 col-sm-6 input-field"" ng-show=""isEditInter"">
                                        <label class=""control-label"">Status</label>
                 ");
                WriteLiteral("                       <div>\r\n                                            <select ng-disabled=\"readOnlyInterPage\" class=\"form-control\" ng-model=\"intermediateUnit.Active\" name=\"Active\">\r\n                                                ");
                EndContext();
                BeginContext(56373, 33, false);
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "0bae23d1d37b4afea1a65df76941d007", async() => {
                    BeginContext(56391, 6, true);
                    WriteLiteral("Active");
                    EndContext();
                }
                );
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_4.Value;
                __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_4);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                EndContext();
                BeginContext(56406, 50, true);
                WriteLiteral("\r\n                                                ");
                EndContext();
                BeginContext(56456, 35, false);
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "be0884d150fb45a6bf4e6fa48d2df012", async() => {
                    BeginContext(56474, 8, true);
                    WriteLiteral("Inactive");
                    EndContext();
                }
                );
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_5.Value;
                __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_5);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                EndContext();
                BeginContext(56491, 149, true);
                WriteLiteral("\r\n                                            </select>\r\n                                        </div>\r\n                                    </div>\r\n");
                EndContext();
                BeginContext(57170, 7541, true);
                WriteLiteral(@"                                    <div class=""col-md-2 col-sm-6 input-field"">
                                        <label class=""control-label"">Reporting Service(s)</label>
                                        <div ng-dropdown-multiselect=""""
                                             options=""InterReporting""
                                             selected-model=""InterSelectedData""
                                             extra-settings=""ReportingSerSettings"" checkboxes=""true"" disabled=""readOnlyInterPage"" class=""reporting"">
                                        </div>
                                    </div>

                                    <div class=""view-more-wrapper"">
                                        <span class=""more-info"" ng-click=""morefields()"">
                                            <span class=""more-info-text"">{{moreFields?""- Less Info"":""+ More Info""}}</span>
                                        </span>
                                    </div>");
                WriteLiteral(@"
                                    <div ng-show=""moreFields"" class=""morefileds"">
                                        <div class=""col-md-2 col-sm-6 input-field"">
                                            <label class=""control-label"">Year Of Manufacture</label>
                                            <div>
                                                <input ng-disabled=""readOnlyInterPage"" class=""form-control"" ng-model=""intermediateUnit.ManufactureYear"" name=""ManufactureYear"" />
                                                <span class=""text-danger""></span>
                                            </div>
                                        </div>
                                        <div class=""col-md-2 col-sm-6 input-field"">
                                            <label class=""control-label"">First Installation Date:</label>
                                            <p class=""input-group date-picker date-wrapper"">
                                                <input");
                WriteLiteral(@" type=""text"" class=""form-control date-picker-input"" ng-dblclick=""d_FirstInstallationDate=true"" placeholder=""dd/mm/yyyy"" uib-datepicker-popup=""dd/MM/yyyy""
                                                       ng-model=""intermediateUnit.FirstInstallationDate"" ng-disabled=""readOnlyInterPage"" name=""FirstInstallationDate"" ng-init=""d_FirstInstallationDate=false"" is-open=""d_FirstInstallationDate""
                                                       datepicker-options=""E_options"" close-text=""Close"" alt-input-formats=""['M!/d!/yyyy']"" />
                                                <span class=""input-group-btn date-picker-button"">
                                                    <button type=""button"" class=""btn btn-default"" ng-disabled=""readOnlyInterPage"" ng-click=""d_FirstInstallationDate=true""><i class=""fa fa-calendar""></i></button>
                                                </span>
                                            </p>
                                        </div>
                   ");
                WriteLiteral(@"                     <div class=""col-md-2 col-sm-6 input-field"">
                                            <label class=""control-label"">Operating Mode</label>
                                            <ui-select ng-model=""intermediateUnit.OperationModeId"" theme=""bootstrap"" ng-disabled=""readOnlyInterPage"" style=""width: 800px;"">
                                                <ui-select-match placeholder=""Select ..."">{{$select.selected.LValue}}</ui-select-match>
                                                <ui-select-choices repeat=""inter.LookupId as inter in OperationModeDDL | propsFilter: {LValue: $select.search} | limitTo: 50"" null-option=""defaultoperationmode"" loose-null>
                                                    <div ng-bind-html=""inter.LValue | highlight: $select.search""></div>
                                                </ui-select-choices>
                                            </ui-select>
                                        </div>
                                ");
                WriteLiteral(@"        <div class=""col-md-2 col-sm-6 input-field"">
                                            <label class=""control-label"">Model</label>
                                            <div>
                                                <input ng-disabled=""readOnlyInterPage"" class=""form-control"" ng-model=""intermediateUnit.Model"" name=""Model"" />
                                                <span class=""text-danger""></span>
                                            </div>
                                        </div>
                                        <div class=""col-md-2 col-sm-6 input-field"">
                                            <label class=""control-label"">Serial</label>
                                            <div>
                                                <input ng-disabled=""readOnlyInterPage"" class=""form-control"" ng-model=""intermediateUnit.Serial"" name=""Serial"" />
                                                <span class=""text-danger""></span>
                     ");
                WriteLiteral(@"                       </div>
                                        </div>
                                        <div class=""col-md-2 col-sm-6 input-field"">
                                            <label class=""control-label"">Size</label>
                                            <div>
                                                <input ng-disabled=""readOnlyInterPage"" class=""form-control"" ng-model=""intermediateUnit.Size"" name=""Size"" />
                                                <span class=""text-danger""></span>
                                            </div>
                                        </div>
                                        <div class=""col-md-2 col-sm-6 input-field"">
                                            <label class=""control-label"">Belt Length</label>
                                            <div>
                                                <input ng-disabled=""readOnlyInterPage"" class=""form-control"" ng-model=""intermediateUnit.BeltLength"" name=");
                WriteLiteral(@"""BeltLength"" />
                                                <span class=""text-danger""></span>
                                            </div>
                                        </div>
                                        <div class=""col-md-2 col-sm-6 input-field"">
                                            <label class=""control-label"">Pulley Dia (Drive)</label>
                                            <div>
                                                <input ng-disabled=""readOnlyInterPage"" class=""form-control"" ng-model=""intermediateUnit.PulleyDiaDrive"" name=""PulleyDiaDrive"" />
                                                <span class=""text-danger""></span>
                                            </div>
                                        </div>
                                        <div class=""col-md-2 col-sm-6 input-field"">
                                            <label class=""control-label"">Pulley Dia (Driven)</label>
                                        ");
                WriteLiteral(@"    <div>
                                                <input ng-disabled=""readOnlyInterPage"" class=""form-control"" ng-model=""intermediateUnit.PulleyDiaDriven"" name=""PulleyDiaDriven"" />
                                                <span class=""text-danger""></span>
                                            </div>
                                        </div>
");
                EndContext();
                BeginContext(65954, 4140, true);
                WriteLiteral(@"                                        <div class=""col-md-2 col-sm-6 input-field"">
                                            <label class=""control-label"">Pinion I/P Gear Teeth</label>
                                            <div>
                                                <input ng-disabled=""readOnlyInterPage"" class=""form-control"" ng-model=""intermediateUnit.PinionInputGearTeeth"" name=""PinionInputGearTeeth"" />
                                                <span class=""text-danger""></span>
                                            </div>
                                        </div>
                                        <div class=""col-md-2 col-sm-6 input-field"">
                                            <label class=""control-label"">Pinion O/P Gear Teeth</label>
                                            <div>
                                                <input ng-disabled=""readOnlyInterPage"" class=""form-control"" ng-model=""intermediateUnit.PinionOutputGearTeeth"" name=""PinionOu");
                WriteLiteral(@"tputGearTeeth"" />
                                                <span class=""text-danger""></span>
                                            </div>
                                        </div>
                                        <div class=""col-md-2 col-sm-6 input-field"">
                                            <label class=""control-label"">Idler I/P Gear Teeth</label>
                                            <div>
                                                <input ng-disabled=""readOnlyInterPage"" class=""form-control"" ng-model=""intermediateUnit.IdlerInputGearTeeth"" name=""PinionOutputGearTeeth"" />
                                                <span class=""text-danger""></span>
                                            </div>
                                        </div>
                                        <div class=""col-md-2 col-sm-6 input-field"">
                                            <label class=""control-label"">Idler O/P Gear Teeth</label>
                       ");
                WriteLiteral(@"                     <div>
                                                <input ng-disabled=""readOnlyInterPage"" class=""form-control"" ng-model=""intermediateUnit.IdlerOutputGearTeeth"" name=""IdlerInputGearTeeth"" />
                                                <span class=""text-danger""></span>
                                            </div>
                                        </div>
                                        <div class=""col-md-2 col-sm-6 input-field"">
                                            <label class=""control-label"">Ratio</label>
                                            <div>
                                                <input ng-disabled=""readOnlyInterPage"" class=""form-control"" ng-model=""intermediateUnit.Ratio"" name=""Ratio"" />
                                                <span class=""text-danger""></span>
                                            </div>
                                        </div>
                                        <div class=""col-md-");
                WriteLiteral(@"2 col-sm-6 input-field"">
                                            <label class=""control-label"">Bull Gear Teeth</label>
                                            <div>
                                                <input ng-disabled=""readOnlyInterPage"" class=""form-control"" ng-model=""intermediateUnit.BullGearTeeth"" name=""BullGearTeeth"" />
                                                <span class=""text-danger""></span>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class=""table-responsive"">
                            <div class=""grid data"">
                                <div id=""uiGrid"" ui-grid=""gridOpts2"" class=""grid"" ui-grid-cellnav ui-grid-pinning ui-grid-resize-columns ui-grid-exporter></div>
                            </div>
                        </div>
");
                WriteLiteral("                    </div>\r\n                ");
                EndContext();
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.RenderAtEndOfFormTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_8);
            BeginWriteTagHelperAttribute();
            __tagHelperStringValueBuffer = EndWriteTagHelperAttribute();
            __tagHelperExecutionContext.AddHtmlAttribute("novalidate", Html.Raw(__tagHelperStringValueBuffer), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.Minimized);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            EndContext();
            BeginContext(70101, 74, true);
            WriteLiteral("\r\n            </div>\r\n\r\n            <div class=\"driven\">\r\n                ");
            EndContext();
            BeginContext(70175, 24369, false);
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("form", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "93e05768e14e439a8c0b09dc1ff97c4b", async() => {
                BeginContext(70214, 875, true);
                WriteLiteral(@"
                    <div class=""Driven-unit animate-switch"" ng-switch-when=""stage4"">
                        <div class=""row heading-wrapper"">
                            <div class=""col-md-3 heading"">
                                <h4 class=""page-header text-primary"">{{isEditDriven?""Edit Driven Unit"":isSearchDriven?""Search Driven Unit"":isViewDriven?""View Driven Unit"":isCreateDriven?""Create Driven Unit"":""Driven Unit""}}</h4>
                            </div>
                            <div class=""col-md-9 menu-button"">
                                <a ng-click=""next('stage3')""><i class=""fa fa-arrow-left icon-filter"" title=""Back to Intermediate""></i>Go Back Intermediate</a>
                                <a ng-disabled=""isCreateDriven"" ng-click=""isCreateDriven || createDrivenToggle()"" title=""Create""><i class=""fa fa-plus icon-filter""></i>Create</a>
");
                EndContext();
                BeginContext(71292, 9136, true);
                WriteLiteral(@"                                <span class=""Pipe""></span>
                                <a ng-disabled=""readOnlyDrivenPage || DrivenUserForm.$invalid"" ng-click=""readOnlyDrivenPage || DrivenUserForm.$invalid || saveDriven()"" ng-show=""isCreateDriven"" title=""Save""><i class=""fa fa-save icon-filter""></i><span>Save</span></a>
                                <a ng-disabled=""readOnlyDrivenPage || DrivenUserForm.$invalid"" ng-click=""readOnlyDrivenPage || DrivenUserForm.$invalid || updateDriven()"" ng-hide=""isCreateDriven"" ng-show=""isEditDriven || isViewDriven"" title=""Update""><i class=""fa fa-save icon-filter""></i><span>Update</span></a>
                                <a ng-disabled=""isEditDriven || isViewDriven"" ng-click=""isEditDriven || clearOutDriven()"" ng-show=""isCreateDriven || isEditDriven || isViewDriven"" title=""Clear""><i class=""fa fa-eraser icon-filter""></i><span>Clear</span></a>
                                <a ng-show=""isSearchDriven"" ng-click=""clearDrivenModal()"" title=""Clear""><i class=""fa fa-eraser i");
                WriteLiteral(@"con-filter""></i><span>Clear</span></a>
                            </div>
                        </div>
                        <div class=""row create-form"" ng-show=""isCreateDriven || isEditDriven || isViewDriven"">
                            <div class=""col-md-12"">
                                <div class=""col-md-2 col-sm-3 input-field"">
                                    <label class=""control-label"">Equipment Name</label>
                                    <div>
                                        <input disabled class=""form-control"" value={{equipment.EquipmentName}} name=""EquipmentName"" />
                                        <span class=""text-danger""></span>
                                    </div>
                                </div>
                                <div class=""col-md-2 col-sm-3 input-field"" ng-class=""{ 'has-error' : DrivenUserForm.IdentificationName.$invalid && !DrivenUserForm.IdentificationName.$pristine }"">
                                    <label class=""");
                WriteLiteral(@"control-label"">Asset Name*</label>
                                    <div>
                                        <input ng-disabled=""readOnlyDrivenPage"" class=""form-control"" required ng-model=""DrivenUnit.IdentificationName"" name=""IdentificationName"" />
                                        <span class=""text-danger""></span>
                                    </div>
                                </div>
                                <div class=""col-md-2 col-sm-6 input-field"">
                                    <label class=""control-label"">
                                        <a ng-click=""ChooseAsset('Driven')"" tooltip-append-to-body=""true"" uib-tooltip=""Select Taxonomy"" tooltip-class=""customClass"" class=""mouse-pointer"">
                                            Select Taxonomy* <i class=""fa fa-info""></i>
                                        </a>
                                    </label>
                                    <div>
                                        <input di");
                WriteLiteral(@"sabled class=""form-control"" required ng-model=""DrivenUnit.AssetCode"" name=""Asset"" />
                                        <span class=""text-danger""></span>
                                    </div>
                                </div>
                                <div class=""col-md-2 col-sm-6 input-field"" ng-class=""{ 'has-error' : DrivenUserForm.ListOrder.$invalid && !DrivenUserForm.ListOrder.$pristine }"">
                                    <label class=""control-label"">Reporting Order</label>
                                    <div>
                                        <input type=""number"" min=""0"" onkeypress=""return event.charCode >= 48 && event.charCode <= 57 || event.charCode == 46"" ng-disabled=""readOnlyDrivenPage"" class=""form-control"" ng-model=""DrivenUnit.ListOrder"" name=""ListOrder"" />
                                        <span class=""text-danger""></span>
                                    </div>
                                </div>
                                <div class=");
                WriteLiteral(@"""col-md-2 col-sm-6 input-field"">
                                    <label class=""control-label"">Manufacturer*</label>
                                    <ui-select required ng-model=""DrivenUnit.ManufacturerId"" theme=""bootstrap"" ng-disabled=""readOnlyDrivenPage"" style=""width: 800px;"">
                                        <ui-select-match placeholder=""Select ..."">{{$select.selected.ManufacturerName}}</ui-select-match>
                                        <ui-select-choices repeat=""driven.ManufacturerId as driven in DrivenMFTDDL | propsFilter: {ManufacturerName: $select.search} | limitTo: 50"" null-option=""defaultmanufacture"" loose-null>
                                            <div ng-bind-html=""driven.ManufacturerName | highlight: $select.search""></div>
                                        </ui-select-choices>
                                    </ui-select>
                                </div>
                                <div class=""col-md-2 col-sm-6 input-field"">
                ");
                WriteLiteral(@"                    <label style=""margin-left: 15px; margin-top: 24px;"" class=""control-label shaft-label link"">
                                        <a ng-click=""SelectShaft('DN')"" ng-disabled=""DrivenUnit.IdentificationName.length == null"" tooltip-append-to-body=""true"" uib-tooltip=""Select Shaft"" tooltip-class=""customClass"" class=""mouse-pointer"">
                                            Shaft* <i class=""fa fa-info""></i>
                                        </a>
                                    </label>
                                </div>

                                <div class=""taxonomy-values"">
                                    <div class=""col-md-2 col-sm-6 input-field"">
                                        <label class=""control-label"">Mean Repair Man (Hrs)</label>
                                        <div>
                                            <input type=""number"" min=""0"" required onkeypress=""return event.charCode >= 48 && event.charCode <= 57 || event.charCode == ");
                WriteLiteral(@"46"" ng-disabled=""readOnlyDrivenPage"" class=""form-control"" ng-model=""DrivenUnit.MeanRepairManHours"" name=""MeanRepairManHours"" />
                                            <span class=""text-danger""></span>
                                        </div>
                                    </div>
                                    <div class=""col-md-2 col-sm-6 input-field"">
                                        <label class=""control-label"">Down Time Cost/Hr :</label>
                                        <span class=""unit"">$</span>
                                        <div>
                                            <input type=""number"" min=""0"" required onkeypress=""return event.charCode >= 48 && event.charCode <= 57 || event.charCode == 46"" ng-disabled=""readOnlyDrivenPage"" class=""form-control"" ng-model=""DrivenUnit.DownTimeCostPerHour"" name=""DownTimeCostPerHour"" />
                                            <span class=""text-danger""></span>
                                        </div>
    ");
                WriteLiteral(@"                                </div>
                                    <div class=""col-md-2 col-sm-6 input-field"">
                                        <label class=""control-label"">Cost To Repair :</label>
                                        <span class=""unit"">$</span>
                                        <div>
                                            <input type=""number"" min=""0"" onkeypress=""return event.charCode >= 48 && event.charCode <= 57 || event.charCode == 46"" ng-disabled=""readOnlyDrivenPage"" class=""form-control"" ng-model=""DrivenUnit.CostToRepair"" name=""CostPerUnit"" />
                                            <span class=""text-danger""></span>
                                        </div>
                                    </div>
                                    <div class=""col-md-2 col-sm-6 input-field"">
                                        <label class=""control-label"">Mean Time Failure Rate :</label>
                                        <span class=""unit"">%</s");
                WriteLiteral(@"pan>
                                        <div>
                                            <input type=""number"" min=""0"" onkeypress=""return event.charCode >= 48 && event.charCode <= 57 || event.charCode == 46"" ng-disabled=""readOnlyDrivenPage"" class=""form-control"" ng-model=""DrivenUnit.MeanFailureRate"" name=""MeanFailureRate"" />
                                            <span class=""text-danger""></span>
                                        </div>
                                    </div>


                                    <div class=""col-md-2 col-sm-6 input-field"" ng-show=""isEditDriven"">
                                        <label class=""control-label"">Status</label>
                                        <div>
                                            <select ng-disabled=""readOnlyDrivenPage"" class=""form-control"" ng-model=""DrivenUnit.Active"" name=""Active"">
                                                ");
                EndContext();
                BeginContext(80428, 33, false);
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "4f98535de74b433a8843f0932b63b7cf", async() => {
                    BeginContext(80446, 6, true);
                    WriteLiteral("Active");
                    EndContext();
                }
                );
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_4.Value;
                __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_4);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                EndContext();
                BeginContext(80461, 50, true);
                WriteLiteral("\r\n                                                ");
                EndContext();
                BeginContext(80511, 35, false);
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "2dc77e16bc7745b29eedd42ce2909467", async() => {
                    BeginContext(80529, 8, true);
                    WriteLiteral("Inactive");
                    EndContext();
                }
                );
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_5.Value;
                __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_5);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                EndContext();
                BeginContext(80546, 149, true);
                WriteLiteral("\r\n                                            </select>\r\n                                        </div>\r\n                                    </div>\r\n");
                EndContext();
                BeginContext(81219, 13318, true);
                WriteLiteral(@"                                    <div class=""col-md-2 col-sm-6 input-field"">
                                        <label class=""control-label"">Reporting Service(s)</label>
                                        <div ng-dropdown-multiselect=""""
                                             options=""DrivenReporting""
                                             selected-model=""DrivenSelectedData""
                                             extra-settings=""ReportingSerSettings"" checkboxes=""true"" disabled=""readOnlyDrivenPage"" class=""reporting"">
                                        </div>
                                    </div>
                                </div>
                                <div class=""view-more-wrapper"">
                                    <span class=""more-info"" ng-click=""morefields()"">
                                        <span class=""more-info-text"">{{moreFields?""- Less Info"":""+ More Info""}}</span>
                                    </span>
                  ");
                WriteLiteral(@"              </div>
                                <div ng-show=""moreFields"" class=""morefileds"">
                                    <div class=""col-md-2 col-sm-6 input-field"">
                                        <label class=""control-label"">Year Of Manufacture</label>
                                        <div>
                                            <input ng-disabled=""readOnlyDrivenPage"" class=""form-control"" ng-model=""DrivenUnit.ManufactureYear"" name=""Model"" />
                                            <span class=""text-danger""></span>
                                        </div>
                                    </div>
                                    <div class=""col-md-2 col-sm-6 input-field"">
                                        <label class=""control-label"">First Installation Date:</label>
                                        <p class=""input-group date-picker date-wrapper"">
                                            <input type=""text"" class=""form-control date-pick");
                WriteLiteral(@"er-input"" ng-dblclick=""d_FirstInstallationDate=true"" placeholder=""dd/mm/yyyy"" uib-datepicker-popup=""dd/MM/yyyy""
                                                   ng-model=""DrivenUnit.FirstInstallationDate"" ng-disabled=""readOnlyDrivenPage"" name=""FirstInstallationDate"" ng-init=""d_FirstInstallationDate=false"" is-open=""d_FirstInstallationDate""
                                                   datepicker-options=""E_options"" close-text=""Close"" alt-input-formats=""['M!/d!/yyyy']"" />
                                            <span class=""input-group-btn date-picker-button"">
                                                <button type=""button"" class=""btn btn-default"" ng-disabled=""readOnlyDrivenPage"" ng-click=""d_FirstInstallationDate=true""><i class=""fa fa-calendar""></i></button>
                                            </span>
                                        </p>
                                    </div>
                                    <div class=""col-md-2 col-sm-6 input-field"">
            ");
                WriteLiteral(@"                            <label class=""control-label"">Operating Mode</label>
                                        <ui-select ng-model=""DrivenUnit.OperationModeId"" theme=""bootstrap"" ng-disabled=""readOnlyDrivenPage"" style=""width: 800px;"">
                                            <ui-select-match placeholder=""Select ..."">{{$select.selected.LValue}}</ui-select-match>
                                            <ui-select-choices repeat=""driven.LookupId as driven in OperationModeDDL | propsFilter: {LValue: $select.search} | limitTo: 50"" null-option=""defaultoperationmode"" loose-null>
                                                <div ng-bind-html=""driven.LValue | highlight: $select.search""></div>

                                            </ui-select-choices>
                                        </ui-select>
                                    </div>
                                    <div class=""col-md-2 col-sm-6 input-field"">
                                        <label class=""control");
                WriteLiteral(@"-label"">Model</label>
                                        <div>
                                            <input ng-disabled=""readOnlyDrivenPage"" class=""form-control"" ng-model=""DrivenUnit.Model"" name=""Model"" />
                                            <span class=""text-danger""></span>
                                        </div>
                                    </div>
                                    <div class=""col-md-2 col-sm-6 input-field"">
                                        <label class=""control-label"">Serial Number</label>
                                        <div>
                                            <input ng-disabled=""readOnlyDrivenPage"" class=""form-control"" ng-model=""DrivenUnit.SerialNumber"" name=""SerialNumber"" />
                                            <span class=""text-danger""></span>
                                        </div>
                                    </div>
                                    <div class=""col-md-2 col-sm-6 input-field""");
                WriteLiteral(@">
                                        <label class=""control-label"">Capacity</label>
                                        <div>
                                            <input ng-disabled=""readOnlyDrivenPage"" class=""form-control"" ng-model=""DrivenUnit.Capacity"" name=""Capacity"" />
                                            <span class=""text-danger""></span>
                                        </div>
                                    </div>

                                    <div class=""col-md-2 col-sm-6 input-field"">
                                        <label class=""control-label"">Lubrication</label>
                                        <div>
                                            <input ng-disabled=""readOnlyDrivenPage"" class=""form-control"" ng-model=""DrivenUnit.Lubrication"" name=""Lubrication"" />
                                            <span class=""text-danger""></span>
                                        </div>
                                    </div>
       ");
                WriteLiteral(@"                             <div class=""col-md-2 col-sm-6 input-field"">
                                        <label class=""control-label"">Rated Flow GPM</label>
                                        <div>
                                            <input ng-disabled=""readOnlyDrivenPage"" class=""form-control"" ng-model=""DrivenUnit.RatedFlowGPM"" name=""RatedFlowGPM"" />
                                            <span class=""text-danger""></span>
                                        </div>
                                    </div>
                                    <div class=""col-md-2 col-sm-6 input-field"">
                                        <label class=""control-label"">Pump Efficiency</label>
                                        <div>
                                            <input ng-disabled=""readOnlyDrivenPage"" class=""form-control"" ng-model=""DrivenUnit.PumpEfficiency"" name=""PumpEfficiency"" />
                                            <span class=""text-danger""></span>
      ");
                WriteLiteral(@"                                  </div>
                                    </div>
                                    <div class=""col-md-2 col-sm-6 input-field"">
                                        <label class=""control-label"">Rated Suction Pressure</label>
                                        <div>
                                            <input ng-disabled=""readOnlyDrivenPage"" class=""form-control"" ng-model=""DrivenUnit.RatedSuctionPressure"" name=""RatedSuctionPressure"" />
                                            <span class=""text-danger""></span>
                                        </div>
                                    </div>
                                    <div class=""col-md-2 col-sm-6 input-field"">
                                        <label class=""control-label"">Efficiency</label>
                                        <div>
                                            <input ng-disabled=""readOnlyDrivenPage"" class=""form-control"" ng-model=""DrivenUnit.Efficiency"" nam");
                WriteLiteral(@"e=""Efficiency"" />
                                            <span class=""text-danger""></span>
                                        </div>
                                    </div>
                                    <div class=""col-md-2 col-sm-6 input-field"">
                                        <label class=""control-label"">Rated Discharge Pressure</label>
                                        <div>
                                            <input ng-disabled=""readOnlyDrivenPage"" class=""form-control"" ng-model=""DrivenUnit.RatedDischargePressure"" name=""RatedDischargePressure"" />
                                            <span class=""text-danger""></span>
                                        </div>
                                    </div>
                                    <div class=""col-md-2 col-sm-6 input-field"">
                                        <label class=""control-label"">Cost Per Unit</label>
                                        <div>
                            ");
                WriteLiteral(@"                <input ng-disabled=""readOnlyDrivenPage"" class=""form-control"" ng-model=""DrivenUnit.CostPerUnit"" name=""CostPerUnit"" />
                                            <span class=""text-danger""></span>
                                        </div>
                                    </div>

                                    <div class=""col-md-2 col-sm-6 input-field"">
                                        <label class=""control-label"">Max RPM</label>
                                        <div>
                                            <input ng-disabled=""readOnlyDrivenPage"" class=""form-control"" ng-model=""DrivenUnit.MaxRPM"" name=""MaxRPM"" />
                                            <span class=""text-danger""></span>
                                        </div>
                                    </div>
                                    <div class=""col-md-2 col-sm-6 input-field"">
                                        <label class=""control-label"">Impeller Vanes</label>
      ");
                WriteLiteral(@"                                  <div>
                                            <input ng-disabled=""readOnlyDrivenPage"" class=""form-control"" ng-model=""DrivenUnit.ImpellerVanes"" name=""ImpellerVanes"" />
                                            <span class=""text-danger""></span>
                                        </div>
                                    </div>
                                    <div class=""col-md-2 col-sm-6 input-field"">
                                        <label class=""control-label"">Impeller Vanes KW</label>
                                        <div>
                                            <input ng-disabled=""readOnlyDrivenPage"" class=""form-control"" ng-model=""DrivenUnit.ImpellerVanesKW"" name=""ImpellerVanesKW"" />
                                            <span class=""text-danger""></span>
                                        </div>
                                    </div>
                                    <div class=""col-md-2 col-sm-6 input-field"">
");
                WriteLiteral(@"                                        <label class=""control-label"">Stages</label>
                                        <div>
                                            <input ng-disabled=""readOnlyDrivenPage"" class=""form-control"" ng-model=""DrivenUnit.Stages"" name=""Stages"" />
                                            <span class=""text-danger""></span>
                                        </div>
                                    </div>
                                    <div class=""col-md-2 col-sm-6 input-field"">
                                        <label class=""control-label"">Number Of Pistons</label>
                                        <div>
                                            <input ng-disabled=""readOnlyDrivenPage"" class=""form-control"" ng-model=""DrivenUnit.NumberOfPistons"" name=""NumberOfPistons"" />
                                            <span class=""text-danger""></span>
                                        </div>
                                    </div>
    ");
                WriteLiteral(@"                                <div class=""col-md-2 col-sm-6 input-field"">
                                        <label class=""control-label"">Pump Type</label>
                                        <div>
                                            <input ng-disabled=""readOnlyDrivenPage"" class=""form-control"" ng-model=""DrivenUnit.PumpType"" name=""PumpType"" />
                                            <span class=""text-danger""></span>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class=""table-responsive"">
                            <div class=""grid data"">
                                <div id=""uiGrid"" ui-grid=""gridOpts3"" class=""grid"" ui-grid-cellnav ui-grid-pinning ui-grid-resize-columns ui-grid-exporter></div>
                            </div>
                        </div>
                    </div>
          ");
                WriteLiteral("      ");
                EndContext();
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.RenderAtEndOfFormTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_9);
            BeginWriteTagHelperAttribute();
            __tagHelperStringValueBuffer = EndWriteTagHelperAttribute();
            __tagHelperExecutionContext.AddHtmlAttribute("novalidate", Html.Raw(__tagHelperStringValueBuffer), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.Minimized);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            EndContext();
            BeginContext(94544, 58, true);
            WriteLiteral("\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n");
            EndContext();
            DefineSection("Scripts", async() => {
                BeginContext(94620, 6, true);
                WriteLiteral("\r\n    ");
                EndContext();
                BeginContext(94626, 60, false);
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "dded780df2d14d9ba40f54d1d3840a4f", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_10);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                EndContext();
                BeginContext(94686, 6, true);
                WriteLiteral("\r\n    ");
                EndContext();
                BeginContext(94692, 59, false);
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "c85f193aa4924eada243bfe231af6f96", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_11);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                EndContext();
                BeginContext(94751, 6, true);
                WriteLiteral("\r\n    ");
                EndContext();
                BeginContext(94757, 66, false);
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "678a57184e0e4a72a31263e40ec19f91", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_12);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                EndContext();
                BeginContext(94823, 6, true);
                WriteLiteral("\r\n    ");
                EndContext();
                BeginContext(94829, 59, false);
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "1f47a8f64b004b01a8635ce703bbe234", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_11);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                EndContext();
                BeginContext(94888, 6, true);
                WriteLiteral("\r\n    ");
                EndContext();
                BeginContext(94894, 63, false);
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "059e8b18599c4501b2ea985e9c105fad", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_13);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                EndContext();
                BeginContext(94957, 6, true);
                WriteLiteral("\r\n    ");
                EndContext();
                BeginContext(94963, 65, false);
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "f7347592263b40269b91495dfb137691", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_14);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                EndContext();
                BeginContext(95028, 6, true);
                WriteLiteral("\r\n    ");
                EndContext();
                BeginContext(95034, 66, false);
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "b78f827da58f42ad80f443366d2e4fb6", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_15);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                EndContext();
                BeginContext(95100, 6, true);
                WriteLiteral("\r\n    ");
                EndContext();
                BeginContext(95106, 65, false);
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "81cf234758bf43a280fad27d76d88a95", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_16);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                EndContext();
                BeginContext(95171, 6, true);
                WriteLiteral("\r\n    ");
                EndContext();
                BeginContext(95177, 74, false);
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "071571fdbb374d5ca51c0b0220054347", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_17);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                EndContext();
                BeginContext(95251, 6, true);
                WriteLiteral("\r\n    ");
                EndContext();
                BeginContext(95257, 138, false);
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("environment", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "635f352b57df49a6a03b8cf373b5867e", async() => {
                    BeginContext(95292, 10, true);
                    WriteLiteral("\r\n        ");
                    EndContext();
                    BeginContext(95302, 73, false);
                    __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "7a28984cb4cb4c7fb7ba4a630d1e0b81", async() => {
                    }
                    );
                    __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                    __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                    __Microsoft_AspNetCore_Mvc_TagHelpers_ScriptTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.ScriptTagHelper>();
                    __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_ScriptTagHelper);
                    __Microsoft_AspNetCore_Mvc_TagHelpers_ScriptTagHelper.Src = (string)__tagHelperAttribute_18.Value;
                    __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_18);
#line 1125 "C:\SSK\SKF\Source Backup\REP-Online-Dashboard-18-07-2020\REP-Online-Dashboard-30-04-2020\Observer-Dashboard-30-04-2020\EMaintanance\Views\Equipment\Index.cshtml"
__Microsoft_AspNetCore_Mvc_TagHelpers_ScriptTagHelper.AppendVersion = true;

#line default
#line hidden
                    __tagHelperExecutionContext.AddTagHelperAttribute("asp-append-version", __Microsoft_AspNetCore_Mvc_TagHelpers_ScriptTagHelper.AppendVersion, global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
                    await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                    if (!__tagHelperExecutionContext.Output.IsContentModified)
                    {
                        await __tagHelperExecutionContext.SetOutputContentAsync();
                    }
                    Write(__tagHelperExecutionContext.Output);
                    __tagHelperExecutionContext = __tagHelperScopeManager.End();
                    EndContext();
                    BeginContext(95375, 6, true);
                    WriteLiteral("\r\n    ");
                    EndContext();
                }
                );
                __Microsoft_AspNetCore_Mvc_TagHelpers_EnvironmentTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.EnvironmentTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_EnvironmentTagHelper);
                __Microsoft_AspNetCore_Mvc_TagHelpers_EnvironmentTagHelper.Include = (string)__tagHelperAttribute_19.Value;
                __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_19);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                EndContext();
                BeginContext(95395, 6, true);
                WriteLiteral("\r\n    ");
                EndContext();
                BeginContext(95401, 142, false);
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("environment", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "da00f5a3f9eb4634b3bbec2f0732ad90", async() => {
                    BeginContext(95436, 10, true);
                    WriteLiteral("\r\n        ");
                    EndContext();
                    BeginContext(95446, 77, false);
                    __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "3355d87aad4949e089d0d5788364be6d", async() => {
                    }
                    );
                    __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                    __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                    __Microsoft_AspNetCore_Mvc_TagHelpers_ScriptTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.ScriptTagHelper>();
                    __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_ScriptTagHelper);
                    __Microsoft_AspNetCore_Mvc_TagHelpers_ScriptTagHelper.Src = (string)__tagHelperAttribute_20.Value;
                    __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_20);
#line 1128 "C:\SSK\SKF\Source Backup\REP-Online-Dashboard-18-07-2020\REP-Online-Dashboard-30-04-2020\Observer-Dashboard-30-04-2020\EMaintanance\Views\Equipment\Index.cshtml"
__Microsoft_AspNetCore_Mvc_TagHelpers_ScriptTagHelper.AppendVersion = true;

#line default
#line hidden
                    __tagHelperExecutionContext.AddTagHelperAttribute("asp-append-version", __Microsoft_AspNetCore_Mvc_TagHelpers_ScriptTagHelper.AppendVersion, global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
                    await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                    if (!__tagHelperExecutionContext.Output.IsContentModified)
                    {
                        await __tagHelperExecutionContext.SetOutputContentAsync();
                    }
                    Write(__tagHelperExecutionContext.Output);
                    __tagHelperExecutionContext = __tagHelperScopeManager.End();
                    EndContext();
                    BeginContext(95523, 6, true);
                    WriteLiteral("\r\n    ");
                    EndContext();
                }
                );
                __Microsoft_AspNetCore_Mvc_TagHelpers_EnvironmentTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.EnvironmentTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_EnvironmentTagHelper);
                __Microsoft_AspNetCore_Mvc_TagHelpers_EnvironmentTagHelper.Exclude = (string)__tagHelperAttribute_21.Value;
                __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_21);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                EndContext();
                BeginContext(95543, 2, true);
                WriteLiteral("\r\n");
                EndContext();
            }
            );
            BeginContext(95548, 16224, true);
            WriteLiteral(@"
<script type=""text/ng-template"" id=""skfAttachmentModal.html"">
    <div class=""popup-product"">

        <div class=""modal-header"">
            <span class=""model-breadcrumb"">Attachments</span>
            <div class=""col-lg-5 col-md-5 col-sm-12 heading"">
                <h4 class=""page-header text-primary"">{{Uname}}</h4>
            </div>
            <div class=""col-lg-7 col-md-7 col-sm-12 create-button  menu-button"">
                <input type=""file"" id=""files"" class=""uploadfile"" name=""files[]"" ng-model=""attach"" multiple accept=""image/x-png,image/jpeg"" onchange=""angular.element(this).scope().uploadImageStart()"" />
                <a title=""Close"" ng-click=""cancel()""><i class=""fa fa-close icon-filter""></i><span>Close</span></a>
            </div>
        </div>

        <div class=""modal-body"">
            <div class=""row"">
                <div class=""col-md-12"">
                    <div class=""col-md-6 attachment-link"">
                        <h4 class=""attach-label"">Attachments :</h4>");
            WriteLiteral(@"
                        <div ng-repeat=""file in attachment"" class=""attched-images"">
                            <a ng-click=""showAttach(file.attachId, $index)"" class=""attached-imgnames"" ng-class=""{active : {{$index}} === docindex}"">
                                {{file.FileName}}
                            </a>
                            <div class=""close-button""><a ng-click=""removeAttachment(file.attachId, file.type)""><i class=""fa fa-trash""></i></a></div>
                        </div>
                        <span ng-show=""noAttachment"">No attachments Found</span>
                    </div>
                    <div class=""col-md-6"">
                        <span class=""file-upload"" ng-class=""attached-files"" ng-disabled=""readOnlyPage"">
                            <span ng-repeat=""file in files"" value=""{{file.files}}"">{{file.files}}</span>
                        </span>
                        <div class=""preview-img"">
                            <h4>Preview Image: <span class=""text-primary");
            WriteLiteral(@""" ng-show=""FileName.length > 0"">{{FileName}}</span></h4>
                            <img src=""../images/preview-icon.png"" ng-show=""previewImg"" class=""img-preview"" />
                            <img src=""{{attImage}}"" ng-show=""attImage.length > 0"" />
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</script>

<script type=""text/ng-template"" id=""skfAssetTypeModal.html"">
    <div class=""popup-product"">
        <div class=""modal-header"">
            <span class=""model-breadcrumb"">{{IndustryName}} / Taxonomy List</span>
            <div class=""col-lg-8 col-md-8 col-sm-12 heading"">
                <h4 class=""page-header text-primary"">Select Taxonomy</h4>
            </div>
            <div class=""col-lg-4 col-md-4 col-sm-12 create-button  menu-button"">
                <span class=""Pipe""></span>
                <a ng-click=""cancel()"" title=""Close""><i class=""fa fa-close icon-filter""></i><span>Close</span></a>
         ");
            WriteLiteral(@"   </div>
        </div>
        <div class=""modal-body"">
            <div class=""table-responsive"">
                <div class=""grid data"">
                    <div id=""uiGrid"" ui-grid=""gridOpts"" class=""grid"" ui-grid-edit ui-grid-cellnav ui-grid-pinning ui-grid-resize-columns ui-grid-exporter></div>
                </div>
            </div>
        </div>
        <div class=""modal-footer"">
        </div>
    </div>
</script>

<script type=""text/ng-template"" id=""skfClonePopupModal.html"">
    <div class=""popup-product clone"">
        <div class=""modal-header"">
            <span class=""model-breadcrumb"">Clone {{DispTypeName}}</span>
            <div class=""col-lg-5 col-md-5 col-sm-12 heading"">
                <h4 class=""page-header text-primary"" ng-show=""NoEq"">{{PlantAreaName}} - {{EquipmentName}}</h4>
                <h4 class=""page-header text-primary"" ng-show=""!NoEq"">{{headingName}}</h4>
            </div>
            <div class=""col-lg-7 col-md-7 col-sm-12 create-button  menu-button"">");
            WriteLiteral(@"
                <span class=""Pipe""></span>
                <a ng-click=""clone()"" ng-show=""isClone"" ng-disabled=""userForm.$invalid ||readOnlyPage"" title=""Save""><i class=""fa fa-save icon-filter""></i><span>Clone</span></a>
                <a ng-click=""save()"" ng-show=""!isClone"" ng-disabled=""userForm.$invalid ||readOnlyPage"" title=""Save""><i class=""fa fa-save icon-filter""></i><span>Save</span></a>
                <a ng-click=""cancel()"" ng-disabled=""!isClone"" title=""Close""><i class=""fa fa-close icon-filter""></i><span>Close</span></a>
            </div>
        </div>
        <div class=""row search-form"">
            <form name=""userForm"" novalidate>
                <div class=""col-md-3 col-sm-6 input-field"" ng-show=""isClone"" ng-class=""{ 'has-error' : userForm.CloneCount.$invalid && !userForm.CloneCount.$pristine }"">
                    <label class=""control-label"">Clone Count*</label>
                    <div>
                        <input type=""number"" min=""1"" max=""99"" class=""form-control"" required ng");
            WriteLiteral(@"-model=""CloneCount"" name=""CloneCount"" />
                        <span class=""text-danger""></span>
                    </div>
                </div>

            </form>
        </div>
        <form name=""userForm"" novalidate>
            <table ng-show=""!isClone"">
                <tr>
                    <th>S.no</th>
                    <th>Name</th>
                </tr>
                <tr ng-repeat=""p in cloneDDL"">
                    <td>
                        <input class=""form-control"" disabled value=""{{$index + 1}}"" name=""sno"" />
                    </td>
                    <td class=""edit-content"" ng-class=""{ 'has-error' : userForm.Name.$invalid && !userForm.Name.$pristine }"">
                        <input ng-disabled=""readOnlyPage"" class=""form-control"" required ng-model=""p.TName"" name=""Name"" />
                    </td>
                </tr>
            </table>
        </form>
    </div>
</script>

<script type=""text/ng-template"" id=""skfFailureReport.html"">
    <div ");
            WriteLiteral(@"class=""popup-product tablen failrepo"">
        <div class=""modal-header"">
            <span class=""model-breadcrumb"">Create Failure Report</span>
            <div class=""col-lg-5 col-md-5 col-sm-12 heading"">
                <h4 class=""page-header text-primary"">{{PlantAreaName}} - {{EquipmentName}}</h4>
            </div>
            <div class=""col-lg-7 col-md-7 col-sm-12 create-button  menu-button"">
                <span class=""Pipe""></span>
                <a ng-click=""save()"" ng-disabled=""readOnlyPage"" title=""Save""><i class=""fa fa-save icon-filter""></i><span>Save</span></a>
                <a ng-click=""cancel()"" title=""Close""><i class=""fa fa-close icon-filter""></i><span>Close</span></a>
            </div>
        </div>
        <div class=""row popwid"">
            <form name=""userForm"" novalidate>
                <div class=""col-md-12"">
                    <div class=""row col-md-3 col-sm-4 input-field"">
                        <label class=""control-label"">Date of Report:</label>
          ");
            WriteLiteral(@"              <p class=""input-group date-picker date-wrapper"">
                            <input type=""text"" class=""form-control date-picker-input"" ng-dblclick=""d_ReportDate=true"" placeholder=""dd/mm/yyyy"" uib-datepicker-popup=""dd/MM/yyyy""
                                   ng-model=""ReportDate"" ng-disabled=""readOnlyPage"" name=""FromDate"" ng-init=""d_StartDate=false"" is-open=""d_StartDate""
                                   datepicker-options=""options"" close-text=""Close"" alt-input-formats=""['M!/d!/yyyy']"" />
                            <span class=""input-group-btn date-picker-button"">
                                <button type=""button"" class=""btn btn-default"" ng-disabled=""readOnlyPage"" ng-click=""d_StartDate=true""><i class=""fa fa-calendar""></i></button>
                            </span>
                        </p>
                    </div>
                    <div class=""col-md-2 col-sm-6 input-field"">
                        <label class=""control-label"">Choose File</label>
                      ");
            WriteLiteral(@"  <input type=""file"" id=""files"" class=""uploadfile"" name=""files[]"" ng-model=""fileUpload"" onchange=""angular.element(this).scope().uploadImageStart()"" />
                    </div>
                </div>
                <div class=""asset-form col-md-12"" ng-show=""DriveUnitList.length > 0"">
                    <table class=""asset-set"">
                        <tr class=""first-row"">
                            <td class=""first-column"" colspan=""7"">
                                <h5 class=""control-label symptom-title"">Drive</h5>
                            </td>
                        </tr>
                        <tr class=""isdesktopview"">
                            <td class=""first-column"">
                                <label class=""control-label"">Asset Name</label>

                            </td>
                            <td class=""second-column"">
                                <label class=""control-label"">MTTR</label>

                            </td>
                            ");
            WriteLiteral(@"<td class=""third-column"">
                                <label class=""control-label"">DT. Cost</label>

                            </td>
                            <td class=""fourth-column"">
                                <label class=""control-label"">Failure Mode</label>

                            </td>
                            <td class=""fifth-column"">
                                <label class=""control-label"">Failure Cause</label>

                            </td>
                            <td class=""sixth-column"">
                                <label class=""control-label"">Repair Cost</label>

                            </td>
                            <td class=""seventh-column"">
                                <label class=""control-label"">Actual Outage</label>

                            </td>
                        </tr>
                        <tr class=""equipment-failure"" ng-repeat=""val in DriveUnitList"">
                            <td class=""first-column"">
  ");
            WriteLiteral(@"                              <label class=""control-label ismobileview"">Asset Name</label>
                                <input ng-model=""val.IdentificationName"" disabled class=""form-control search-input"" name=""IdentificationName"">
                            </td>
                            <td class=""second-column"">
                                <label class=""control-label ismobileview"">MTTR</label>
                                <input ng-model=""val.MTTR"" disabled class=""form-control search-input"" name=""MTTR"">
                            </td>
                            <td class=""third-column"">
                                <label class=""control-label ismobileview"">DT. Cost</label>
                                <input ng-model=""val.MTBF"" disabled class=""form-control search-input"" name=""MTBF"">
                            </td>
                            <td class=""fourth-column"">
                                <label class=""control-label ismobileview"">Failure Mode</label>
        ");
            WriteLiteral(@"                        <input ng-model=""val.FailureModeName"" disabled class=""form-control search-input"" name=""FailureMode"">
                                <a ng-click=""failuremode(val, $index)"" tooltip-append-to-body=""true"" uib-tooltip="""" tooltip-class=""customClass"" class=""mouse-pointer""><i class=""fa fa-plus-square""></i></a>
                            </td>
                            <td class=""fifth-column"">
                                <label class=""control-label ismobileview"">Failure Cause</label>
                                <input ng-model=""val.FailureCauseName"" disabled class=""form-control search-input"" name=""FailureCause"">
                            </td>


                            <td class=""sixth-column"">
                                <label class=""control-label ismobileview"">Repair Cost</label>
                                <div class=""input-group"">
                                    <div class=""input-group-addon""><i class=""fa fa-dollar""></i></div>
                   ");
            WriteLiteral(@"                 <input type=""number"" min=""0"" onkeypress=""return event.charCode >= 48 && event.charCode <= 57 || event.charCode == 46"" ng-model=""val.DActualRepairCost"" placeholder=""Amount"" class=""form-control search-input"" name=""RepairCost"">
                                </div>
                            </td>
                            <td class=""seventh-column"">
                                <label class=""control-label ismobileview"">Actual Outage</label>
                                <div class=""input-group"">
                                    <div class=""input-group-addon""><i class=""fa fa-clock-o""></i></div>
                                    <input type=""number"" min=""0"" onkeypress=""return event.charCode >= 48 && event.charCode <= 57 || event.charCode == 46"" ng-model=""val.DActualOutageTime"" placeholder=""Hours"" class=""form-control search-input"" name=""ActOutage"">
                                </div>
                            </td>
                        </tr>
                    </t");
            WriteLiteral(@"able>
                </div>
                <div class=""asset-form col-md-12"" ng-show=""IntermediateUnitList.length > 0"">
                    <table class=""asset-set"">
                        <tr class=""first-row"">
                            <td class=""first-column"" colspan=""7"">
                                <h5 class=""control-label symptom-title"">Intermediate</h5>
                            </td>
                        </tr>
                        <tr class=""isdesktopview"">
                            <td class=""first-column"">
                                <label class=""control-label"">Asset Name</label>

                            </td>
                            <td class=""second-column"">
                                <label class=""control-label"">MTTR</label>

                            </td>
                            <td class=""third-column"">
                                <label class=""control-label"">DT. Cost</label>

                            </td>
                ");
            WriteLiteral(@"            <td class=""fourth-column"">
                                <label class=""control-label"">Failure Mode</label>

                            </td>
                            <td class=""fifth-column"">
                                <label class=""control-label"">Failure Cause</label>

                            </td>
                            <td class=""sixth-column"">
                                <label class=""control-label"">Repair Cost</label>

                            </td>
                            <td class=""seventh-column"">
                                <label class=""control-label"">Actual Outage</label>

                            </td>
                        </tr>
                        <tr class=""equipment-failure"" ng-repeat=""val in IntermediateUnitList"">
                            <td class=""first-column"">
                                <label class=""control-label ismobileview"">Asset Name</label>
                                <input ng-model=""val.Identif");
            WriteLiteral(@"icationName"" disabled class=""form-control search-input"" name=""IdentificationName"">
                            </td>
                            <td class=""second-column"">
                                <label class=""control-label ismobileview"">MTTR</label>
                                <input ng-model=""val.MTTR"" disabled class=""form-control search-input"" name=""MTTR"">
                            </td>
                            <td class=""third-column"">
                                <label class=""control-label ismobileview"">DT. Cost</label>
                                <input ng-model=""val.MTBF"" disabled class=""form-control search-input"" name=""MTBF"">
                            </td>
                            <td class=""fourth-column"">
                                <label class=""control-label ismobileview"">Failure Mode</label>
");
            EndContext();
            BeginContext(111915, 528, true);
            WriteLiteral(@"                                <input ng-model=""val.FailureModeName"" disabled class=""form-control search-input"" name=""FailureMode"">
                                <a ng-click=""failuremode(val, $index)"" tooltip-append-to-body=""true"" uib-tooltip="""" tooltip-class=""customClass"" class=""mouse-pointer""><i class=""fa fa-plus-square""></i></a>

                            </td>
                            <td class=""fifth-column"">
                                <label class=""control-label ismobileview"">Failure Cause</label>
");
            EndContext();
            BeginContext(112588, 4423, true);
            WriteLiteral(@"                                <input ng-model=""val.FailureCauseName"" disabled class=""form-control search-input"" name=""FailureCause"">

                            </td>
                            <td class=""sixth-column"">
                                <label class=""control-label ismobileview"">Repair Cost</label>
                                <div class=""input-group"">
                                    <div class=""input-group-addon""><i class=""fa fa-dollar""></i></div>
                                    <input type=""number"" min=""0"" onkeypress=""return event.charCode >= 48 && event.charCode <= 57 || event.charCode == 46"" ng-model=""val.DActualRepairCost"" placeholder=""Amount"" class=""form-control search-input"" name=""RepairCost"">
                                </div>
                            </td>
                            <td class=""seventh-column"">
                                <label class=""control-label ismobileview"">Actual Outage</label>
                                <div class=""inpu");
            WriteLiteral(@"t-group"">
                                    <div class=""input-group-addon""><i class=""fa fa-clock-o""></i></div>
                                    <input type=""number"" min=""0"" onkeypress=""return event.charCode >= 48 && event.charCode <= 57 || event.charCode == 46"" ng-model=""val.DActualOutageTime"" placeholder=""Hours"" class=""form-control search-input"" name=""ActOutage"">
                                </div>
                            </td>
                        </tr>
                    </table>
                </div>
                <div class=""asset-form col-md-12"" ng-show=""DrivenUnitList.length > 0"">
                    <table class=""asset-set"">
                        <tr class=""first-row"">
                            <td class=""first-column"" colspan=""8"">
                                <h5 class=""control-label symptom-title"">Driven</h5>
                            </td>
                        </tr>
                        <tr class=""isdesktopview"">
                            <td clas");
            WriteLiteral(@"s=""first-column"">
                                <label class=""control-label"">Asset Name</label>

                            </td>
                            <td class=""second-column"">
                                <label class=""control-label"">MTTR</label>

                            </td>
                            <td class=""third-column"">
                                <label class=""control-label"">DT. Cost</label>

                            </td>
                            <td class=""fourth-column"">
                                <label class=""control-label"">Failure Mode</label>

                            </td>
                            <td class=""fifth-column"">
                                <label class=""control-label"">Failure Cause</label>

                            </td>
                            <td class=""sixth-column"">
                                <label class=""control-label"">Repair Cost</label>

                            </td>
                      ");
            WriteLiteral(@"      <td class=""seventh-column"">
                                <label class=""control-label"">Actual Outage</label>

                            </td>
                        </tr>
                        <tr class=""equipment-failure"" ng-repeat=""val in DrivenUnitList"">
                            <td class=""first-column"">
                                <label class=""control-label  ismobileview"">Asset Name</label>
                                <input ng-model=""val.IdentificationName"" disabled class=""form-control search-input"" name=""IdentificationName"">
                            </td>
                            <td class=""second-column"">
                                <label class=""control-label ismobileview"">MTTR</label>
                                <input ng-model=""val.MTTR"" disabled class=""form-control search-input"" name=""MTTR"">
                            </td>
                            <td class=""third-column"">
                                <label class=""control-label ismobile");
            WriteLiteral(@"view"">DT. Cost</label>
                                <input ng-model=""val.MTBF"" disabled class=""form-control search-input"" name=""MTBF"">
                            </td>
                            <td class=""fourth-column"">
                                <label class=""control-label ismobileview"">Failure Mode</label>
");
            EndContext();
            BeginContext(117154, 528, true);
            WriteLiteral(@"                                <input ng-model=""val.FailureModeName"" disabled class=""form-control search-input"" name=""FailureMode"">
                                <a ng-click=""failuremode(val, $index)"" tooltip-append-to-body=""true"" uib-tooltip="""" tooltip-class=""customClass"" class=""mouse-pointer""><i class=""fa fa-plus-square""></i></a>

                            </td>
                            <td class=""fifth-column"">
                                <label class=""control-label ismobileview"">Failure Cause</label>
");
            EndContext();
            BeginContext(117827, 3620, true);
            WriteLiteral(@"                                <input ng-model=""val.FailureCauseName"" disabled class=""form-control search-input"" name=""FailureCause"">

                            </td>
                            <td class=""sixth-column"">
                                <label class=""control-label ismobileview"">Repair Cost</label>
                                <div class=""input-group"">
                                    <div class=""input-group-addon""><i class=""fa fa-dollar""></i></div>
                                    <input type=""number"" min=""0"" onkeypress=""return event.charCode >= 48 && event.charCode <= 57 || event.charCode == 46"" ng-model=""val.DActualRepairCost"" placeholder=""Amount"" class=""form-control search-input"" name=""RepairCost"">
                                </div>
                            </td>
                            <td class=""seventh-column"">
                                <label class=""control-label ismobileview"">Actual Outage</label>
                                <div class=""inpu");
            WriteLiteral(@"t-group"">
                                    <div class=""input-group-addon""><i class=""fa fa-clock-o""></i></div>
                                    <input type=""number"" min=""0"" onkeypress=""return event.charCode >= 48 && event.charCode <= 57 || event.charCode == 46"" ng-model=""val.DActualOutageTime"" placeholder=""Hours"" class=""form-control search-input"" name=""ActOutage"">
                                </div>
                            </td>
                        </tr>
                    </table>
                </div>
            </form>
        </div>
    </div>
</script>

<script type=""text/ng-template"" id=""skffailureMode.html"">
    <div class=""popup-product"">

        <div class=""modal-header"">
            <span class=""model-breadcrumb"">Choose Failure Mode and Cause</span>
            <div class=""col-lg-5 col-md-5 col-sm-12 heading"">
                <h4 class=""page-header text-primary"">{{assetName}}</h4>
            </div>
            <div class=""col-lg-7 col-md-12 col-sm-12 create-");
            WriteLiteral(@"button  menu-button"">
                <span class=""Pipe""></span>
                <a ng-click=""save(val, value)"" ng-disabled=""skfForm.$invalid || value.FailureCauseName.length == null"" title=""Add""><i class=""fa fa-save icon-filter""></i><span>Add</span></a>
                <a ng-click=""cancel()"" title=""Cancel""><i class=""fa fa-close icon-filter""></i><span>Close</span></a>
            </div>
        </div>
        <div class=""modal-body"">
            <form name=""skfForm"" id=""skfForm"" novalidate>
                <div class=""row"">
                    <div class=""col-md-4 col-sm-10 input-field"">
                        <label class=""control-label"">Failure Mode*</label>
                        <div>
                            <select ng-model=""val"" class=""form-control search-input"" name=""FailureMode"" ng-change=""loadFailureCause(val)""
                                    ng-options=""val.FailureModeName group by val.group for val in FailureModeDDL""></select>
                        </div>
                ");
            WriteLiteral(@"    </div>
                    <div class=""col-md-4 col-sm-10 input-field"">
                        <label class=""control-label"">Failure Cause*</label>
                        <div>
                            <select ng-model=""value"" class=""form-control search-input"" name=""FailureCause""
                                    ng-options=""value.FailureCauseName group by value.group for value in FailureCauseDDL""></select>
                        </div>
                    </div>
                </div>
            </form>
        </div>
");
            EndContext();
            BeginContext(121853, 18885, true);
            WriteLiteral(@"    </div>
</script>

<script type=""text/ng-template"" id=""skffailRepopopupModal.html"">
    <div class=""popup-product"">
        <div class=""modal-body job-list-navigate"">
            <span>Would you like to navigate to Failure Report Page ? </span>
            <button ng-click=""GotoFailureReport()"" class=""btn btn-info"" title=""Yes""><i class=""fa fa-save icon-filter""></i>Yes</button>
            <button ng-click=""cancel()"" class=""btn btn-info"" title=""No""><i class=""fa fa-close icon-filter""></i>No</button>
        </div>
        <div class=""modal-footer"">
        </div>
    </div>
</script>

<script type=""text/ng-template"" id=""skfAvoidedplmaint.html"">
    <div class=""popup-product tablen"">
        <div class=""modal-header"">
            <span class=""model-breadcrumb"">Create Avoided Planned Maintenance</span>
            <div class=""col-lg-5 col-md-5 col-sm-12 heading"">
                <h4 class=""page-header text-primary"">{{PlantAreaName}} - {{EquipmentName}}</h4>
            </div>
            ");
            WriteLiteral(@"<div class=""col-lg-7 col-md-7 col-sm-12 create-button  menu-button"">
                <span class=""Pipe""></span>
                <a ng-click=""save()"" ng-disabled=""readOnlyPage"" title=""Save""><i class=""fa fa-save icon-filter""></i><span>Save</span></a>
                <a ng-click=""cancel()"" title=""Close""><i class=""fa fa-close icon-filter""></i><span>Close</span></a>
            </div>
        </div>
        <div class=""row popwid"">
            <form name=""userForm"" novalidate>
                <div class=""col-md-12"">
                    <div class=""row col-md-3 col-sm-4 input-field"">
                        <label class=""control-label"">Date of Report:</label>
                        <p class=""input-group date-picker date-wrapper"">
                            <input type=""text"" class=""form-control date-picker-input"" ng-dblclick=""d_ReportDate=true"" placeholder=""dd/mm/yyyy"" uib-datepicker-popup=""dd/MM/yyyy""
                                   ng-model=""ReportDate"" ng-disabled=""readOnlyPage"" name=""FromDate""");
            WriteLiteral(@" ng-init=""d_StartDate=false"" is-open=""d_StartDate""
                                   datepicker-options=""options"" close-text=""Close"" alt-input-formats=""['M!/d!/yyyy']"" />
                            <span class=""input-group-btn date-picker-button"">
                                <button type=""button"" class=""btn btn-default"" ng-disabled=""readOnlyPage"" ng-click=""d_StartDate=true""><i class=""fa fa-calendar""></i></button>
                            </span>
                        </p>
                    </div>
                    <div class=""col-md-2 col-sm-6 input-field"">
                        <label class=""control-label"">Choose File</label>
                        <input type=""file"" id=""files"" class=""uploadfile"" name=""files[]"" ng-model=""fileUpload"" onchange=""angular.element(this).scope().uploadImageStart()"" />
                    </div>
                </div>
                <div class=""AvoidPl-form col-md-12"" ng-show=""DriveUnitList.length > 0"">
                    <table class=""AvoidPl-set"">");
            WriteLiteral(@"
                        <tr class=""first-row"">
                            <td class=""first-column"" colspan=""6"">
                                <h5 class=""control-label symptom-title"">Drive</h5>
                            </td>
                        </tr>
                        <tr class=""isdesktopview"">
                            <td class=""first-column"">
                                <label class=""control-label"">Asset Name</label>

                            </td>
                            <td class=""second-column"">
                                <label class=""control-label"">MTTR</label>

                            </td>
                            <td class=""third-column"">
                                <label class=""control-label"">DT. Cost</label>

                            </td>
                            <td class=""fourth-column"">
                                <label class=""control-label"">Description</label>

                            </td>
                   ");
            WriteLiteral(@"         <td class=""fifth-column"">
                                <label class=""control-label"">Repair Cost</label>

                            </td>
                            <td class=""sixth-column"">
                                <label class=""control-label"">Actual Outage</label>

                            </td>
                        </tr>
                        <tr ng-repeat=""val in DriveUnitList"">
                            <td class=""first-column"">
                                <label class=""control-label ismobileview"">Asset Name</label>
                                <input ng-model=""val.IdentificationName"" disabled class=""form-control search-input"" name=""IdentificationName"">
                            </td>
                            <td class=""second-column"">
                                <label class=""control-label ismobileview"">MTTR</label>
                                <input ng-model=""val.MTTR"" disabled class=""form-control search-input"" name=""MTTR"">
           ");
            WriteLiteral(@"                 </td>
                            <td class=""third-column"">
                                <label class=""control-label ismobileview"">DT. Cost</label>
                                <input ng-model=""val.MTBF"" disabled class=""form-control search-input"" name=""MTBF"">
                            </td>
                            <td class=""fourth-column"">
                                <label class=""control-label ismobileview"">Description</label>
                                <textarea ng-model=""val.Descriptions"" class=""form-control search-input"" name=""Descriptions"" cols=""1"" rows=""2""></textarea>
                            </td>
                            <td class=""fifth-column"">
                                <label class=""control-label ismobileview"">Repair Cost</label>
                                <div class=""input-group"">
                                    <div class=""input-group-addon""><i class=""fa fa-dollar""></i></div>
                                    <input type=""");
            WriteLiteral(@"number"" min=""0"" onkeypress=""return event.charCode >= 48 && event.charCode <= 57 || event.charCode == 46"" ng-model=""val.DActualRepairCost"" placeholder=""Amount"" class=""form-control search-input"" name=""RepairCost"">
                                </div>
                            </td>
                            <td class=""sixth-column"">
                                <label class=""control-label ismobileview"">Actual Outage</label>
                                <div class=""input-group"">
                                    <div class=""input-group-addon""><i class=""fa fa-clock-o""></i></div>
                                    <input type=""number"" min=""0"" onkeypress=""return event.charCode >= 48 && event.charCode <= 57 || event.charCode == 46"" ng-model=""val.DActualOutageTime"" placeholder=""Hours"" class=""form-control search-input"" name=""ActualOutage"">
                                </div>
                            </td>
                        </tr>
                    </table>
                </div>");
            WriteLiteral(@"
                <div class=""AvoidPl-form col-md-12"" ng-show=""IntermediateUnitList.length > 0"">
                    <table class=""AvoidPl-set"">
                        <tr class=""first-row"">
                            <td class=""first-column"" colspan=""6"">
                                <h5 class=""control-label symptom-title"">Intermediate</h5>
                            </td>
                        </tr>
                        <tr class=""isdesktopview"">
                            <td class=""first-column"">
                                <label class=""control-label"">Asset Name</label>

                            </td>
                            <td class=""second-column"">
                                <label class=""control-label"">MTTR</label>

                            </td>
                            <td class=""third-column"">
                                <label class=""control-label"">DT. Cost</label>

                            </td>
                            <td class=""fo");
            WriteLiteral(@"urth-column"">
                                <label class=""control-label"">Description</label>

                            </td>
                            <td class=""fifth-column"">
                                <label class=""control-label"">Repair Cost</label>

                            </td>
                            <td class=""sixth-column"">
                                <label class=""control-label"">Actual Outage</label>

                            </td>
                        </tr>
                        <tr ng-repeat=""val in IntermediateUnitList"">
                            <td class=""first-column"">
                                <label class=""control-label ismobileview"">Asset Name</label>
                                <input ng-model=""val.IdentificationName"" disabled class=""form-control search-input"" name=""IdentificationName"">
                            </td>
                            <td class=""second-column"">
                                <label class=""control-l");
            WriteLiteral(@"abel ismobileview"">MTTR</label>
                                <input ng-model=""val.MTTR"" disabled class=""form-control search-input"" name=""MTTR"">
                            </td>
                            <td class=""third-column"">
                                <label class=""control-label ismobileview"">DT. Cost</label>
                                <input ng-model=""val.MTBF"" disabled class=""form-control search-input"" name=""MTBF"">
                            </td>
                            <td class=""fourth-column"">
                                <label class=""control-label ismobileview"">Description</label>
                                <textarea ng-model=""val.Descriptions"" class=""form-control search-input"" name=""IdentificationName"" cols=""1"" rows=""2""></textarea>
                            </td>
                            <td class=""fifth-column"">
                                <label class=""control-label ismobileview"">Repair Cost</label>
                                <div class=""i");
            WriteLiteral(@"nput-group"">
                                    <div class=""input-group-addon""><i class=""fa fa-dollar""></i></div>
                                    <input type=""number"" ng-model=""val.DActualRepairCost"" placeholder=""Amount"" class=""form-control search-input"" name=""RepairCost"">
                                </div>
                            </td>
                            <td class=""sixth-column"">
                                <label class=""control-label ismobileview"">Actual Outage</label>
                                <div class=""input-group"">
                                    <div class=""input-group-addon""><i class=""fa fa-clock-o""></i></div>
                                    <input type=""number"" ng-model=""val.DActualOutageTime"" placeholder=""Hours"" class=""form-control search-input"" name=""ActualOutage"">
                                </div>
                            </td>
                        </tr>
                    </table>
                </div>
                <div class");
            WriteLiteral(@"=""AvoidPl-form col-md-12"" ng-show=""DrivenUnitList.length > 0"">
                    <table class=""AvoidPl-set"">
                        <tr class=""first-row"">
                            <td class=""first-column"" colspan=""6"">
                                <h5 class=""control-label symptom-title"">Driven</h5>
                            </td>
                        </tr>
                        <tr class=""isdesktopview"">
                            <td class=""first-column"">
                                <label class=""control-label"">Asset Name</label>

                            </td>
                            <td class=""second-column"">
                                <label class=""control-label"">MTTR</label>

                            </td>
                            <td class=""third-column"">
                                <label class=""control-label"">DT. Cost</label>

                            </td>
                            <td class=""fourth-column"">
                         ");
            WriteLiteral(@"       <label class=""control-label"">Description</label>

                            </td>
                            <td class=""fifth-column"">
                                <label class=""control-label"">Repair Cost</label>

                            </td>
                            <td class=""sixth-column"">
                                <label class=""control-label"">Actual Outage</label>

                            </td>
                        </tr>
                        <tr ng-repeat=""val in DrivenUnitList"">
                            <td class=""first-column"">
                                <label class=""control-label ismobileview"">Asset Name</label>
                                <input ng-model=""val.IdentificationName"" disabled class=""form-control search-input"" name=""IdentificationName"">
                            </td>
                            <td class=""second-column"">
                                <label class=""control-label ismobileview"">MTTR</label>
             ");
            WriteLiteral(@"                   <input ng-model=""val.MTTR"" disabled class=""form-control search-input"" name=""MTTR"">
                            </td>
                            <td class=""third-column"">
                                <label class=""control-label ismobileview"">DT. Cost</label>
                                <input ng-model=""val.MTBF"" disabled class=""form-control search-input"" name=""MTBF"">
                            </td>
                            <td class=""fourth-column"">
                                <label class=""control-label ismobileview"">Description</label>
                                <textarea ng-model=""val.Descriptions"" class=""form-control search-input"" name=""Descriptions"" cols=""1"" rows=""2""></textarea>
                            </td>
                            <td class=""fifth-column"">
                                <label class=""control-label ismobileview"">Repair Cost</label>
                                <div class=""input-group"">
                                    <d");
            WriteLiteral(@"iv class=""input-group-addon""><i class=""fa fa-dollar""></i></div>
                                    <input type=""number"" min=""0"" onkeypress=""return event.charCode >= 48 && event.charCode <= 57 || event.charCode == 46"" ng-model=""val.DActualRepairCost"" placeholder=""Amount"" class=""form-control search-input"" name=""RepairCost"">
                                </div>
                            </td>
                            <td class=""sixth-column"">
                                <label class=""control-label ismobileview"">Actual Outage</label>
                                <div class=""input-group"">
                                    <div class=""input-group-addon""><i class=""fa fa-clock-o""></i></div>
                                    <input type=""number"" min=""0"" onkeypress=""return event.charCode >= 48 && event.charCode <= 57 || event.charCode == 46"" ng-model=""val.DActualOutageTime"" placeholder=""Hours"" class=""form-control search-input"" name=""ActualOutage"">
                                </div>
    ");
            WriteLiteral(@"                        </td>
                        </tr>
                    </table>
                </div>
            </form>
        </div>
    </div>
</script>

<script type=""text/ng-template"" id=""skfavoidplmainpopopupModal.html"">
    <div class=""popup-product"">
        <div class=""modal-body job-list-navigate"">
            <span>Would you like to navigate to Avoided Planned Maintenance Page ? </span>
            <button ng-click=""GotoAvoidedPlMain()"" class=""btn btn-info"" title=""Yes""><i class=""fa fa-save icon-filter""></i>Yes</button>
            <button ng-click=""cancel()"" class=""btn btn-info"" title=""No""><i class=""fa fa-close icon-filter""></i>No</button>
        </div>
        <div class=""modal-footer"">
        </div>
    </div>
</script>

<script type=""text/ng-template"" id=""skfPlant.html"">
    <div class=""popup-product"">

        <div class=""modal-header"">
            <span class=""model-breadcrumb"">Plant - Create</span>

            <div class=""col-lg-12 col-md-12 col-sm-12");
            WriteLiteral(@" create-button  menu-button"">
                <span class=""Pipe""></span>
                <a ng-click=""save()"" title=""Save""><i class=""fa fa-save icon-filter""></i><span>Save</span></a>
                <a ng-click=""cancel()"" title=""Cancel""><i class=""fa fa-close icon-filter""></i><span>Close</span></a>
            </div>
        </div>
        <div class=""modal-body"">
            <form name=""skfForm"" id=""skfForm"" novalidate>
                <div class=""row"">
                    <div class=""col-md-10 col-sm-10 input-field"">
                        <label class=""control-label"">Plant Name*</label>
                        <div>
                            <input ng-disabled=""readOnlyPage"" class=""form-control"" required ng-model=""Plant.PlantAreaName"" name=""PlantAreaName"" />
                            <span class=""text-danger""></span>
                        </div>
                    </div>
                    <div class=""col-md-10 col-sm-10 input-field"">
                        <label class=""control-l");
            WriteLiteral(@"abel"">Description</label>
                        <div>
                            <textarea ng-disabled=""readOnlyPage"" class=""form-control"" ng-model=""Plant.Descriptions"" name=""Descriptions""></textarea>
                        </div>
                    </div>

                </div>
            </form>
        </div>

    </div>
</script>

<script type=""text/ng-template"" id=""skfArea.html"">
    <div class=""popup-product"">

        <div class=""modal-header"">
            <span class=""model-breadcrumb"">Area - Create</span>

            <div class=""col-lg-12 col-md-12 col-sm-12 create-button  menu-button"">
                <span class=""Pipe""></span>
                <a ng-click=""save()"" title=""Save""><i class=""fa fa-save icon-filter""></i><span>Save</span></a>
                <a ng-click=""cancel()"" title=""Cancel""><i class=""fa fa-close icon-filter""></i><span>Close</span></a>
            </div>
        </div>
        <div class=""modal-body"">
            <form name=""skfForm"" id=""skfForm"" noval");
            WriteLiteral(@"idate>
                <div class=""row"">
                    <div class=""col-md-10 col-sm-10 input-field"">
                        <label class=""control-label"">Plant Name</label>
                        <select ng-model=""PlantAreaId"" disabled class=""form-control search-input"" name=""Plant""
                                ng-options=""value.PlantAreaId as value.PlantAreaName for (key, value) in PlantDDL""></select>

                    </div>

");
            EndContext();
            BeginContext(141164, 2394, true);
            WriteLiteral(@"                    <div class=""col-md-10 col-sm-10 input-field"">
                        <label class=""control-label"">Area Name*</label>
                        <div>
                            <input ng-disabled=""readOnlyPage"" class=""form-control"" required ng-model=""Area.AreaName"" name=""AreaName"" />
                            <span class=""text-danger""></span>
                        </div>
                    </div>
                    <div class=""col-md-10 col-sm-10 input-field"">
                        <label class=""control-label"">Description</label>
                        <div>
                            <textarea ng-disabled=""readOnlyPage"" class=""form-control"" ng-model=""Area.Descriptions"" name=""Descriptions""></textarea>
                        </div>
                    </div>

                </div>
            </form>
        </div>
    </div>
</script>

<script type=""text/ng-template"" id=""skfSystem.html"">
    <div class=""popup-product"">

        <div class=""modal-header"">
");
            WriteLiteral(@"            <span class=""model-breadcrumb"">System - Create</span>

            <div class=""col-lg-12 col-md-12 col-sm-12 create-button  menu-button"">
                <span class=""Pipe""></span>
                <a ng-click=""save()"" title=""Save""><i class=""fa fa-save icon-filter""></i><span>Save</span></a>
                <a ng-click=""cancel()"" title=""Cancel""><i class=""fa fa-close icon-filter""></i><span>Close</span></a>
            </div>
        </div>
        <div class=""modal-body"">
            <form name=""skfForm"" id=""skfForm"" novalidate>
                <div class=""row"">
                    <div class=""col-md-3 col-sm-6 input-field"">
                        <label class=""control-label"">Plant Name</label>
                        <select ng-model=""PlantAreaId"" disabled class=""form-control search-input""
                                ng-options=""value.PlantAreaId as value.PlantAreaName for (key, value) in PlantDDL""></select>

                    </div>
                    <div class=""col-md-3 c");
            WriteLiteral(@"ol-sm-6 input-field"">
                        <label class=""control-label"">Area Name</label>
                        <select ng-model=""AreaId"" disabled class=""form-control search-input"" name=""Area""
                                ng-options=""value.AreaId as value.AreaName for (key, value) in AreaDDL""></select>

                    </div>
");
            EndContext();
            BeginContext(144654, 11976, true);
            WriteLiteral(@"                    <div class=""col-md-3 col-sm-6 input-field"">
                        <label class=""control-label"">System Name*</label>
                        <div>
                            <input ng-disabled=""readOnlyPage"" class=""form-control"" required ng-model=""System.SystemName"" name=""AreaName"" />
                            <span class=""text-danger""></span>
                        </div>
                    </div>
                    <div class=""col-md-3 col-sm-4 input-field"">
                        <label class=""control-label"">Descriptions</label>
                        <div>
                            <textarea ng-disabled=""readOnlyPage"" class=""form-control"" ng-model=""System.Descriptions"" name=""Descriptions""></textarea>
                        </div>
                    </div>
                </div>
            </form>
        </div>

    </div>
</script>

<script type=""text/ng-template"" id=""skfShaftModal.html"">
    <div class=""popup-product popup-user-role"">
        <div ");
            WriteLiteral(@"class=""modal-header"">
            <span class=""model-breadcrumb"">Shaft List</span>
            <div class=""col-lg-6 col-md-8 col-sm-12 heading"">
                <h4 class=""page-header text-primary ng-binding"">{{DispName}} </h4>
            </div>
            <div class=""col-lg-6 col-md-4 col-sm-12 create-button  menu-button"">
                <span class=""Pipe""></span>
                <a ng-disabled=""readOnly"" ng-show=""Type == 'IN'"" ng-click=""AddShaft()"" title=""Add""><i class=""fa fa-plus icon-filter""></i><span>Add Shaft</span></a>
                <a ng-disabled=""readOnly"" ng-click=""save()"" title=""Save""><i class=""fa fa-save icon-filter""></i><span>Save</span></a>
                <a ng-click=""cancel()"" title=""Close""><i class=""fa fa-close icon-filter""></i><span>Close</span></a>
            </div>
        </div>
        <div class=""modal-body user-siteaccess"">
            <div class=""row"">
                <div class=""shaft-intermediate shaft-wrapper"">
                    <div class=""col-md-12 col-sm-1");
            WriteLiteral(@"2 input-field"" ng-repeat=""val in shaft | orderBy : ShaftOrder"">
                        <h3 class=""accordion"">
                            <a ng-click=""showAcc(val.ShaftOrder)""> {{val.ShaftName}} </a>
                        </h3>
                        <div class=""accordion-content"" ng-show=""showMode{{val.ShaftOrder}}"">
                            <div class=""col-md-12 col-sm-12 non-drive-end input-field"" ng-repeat=""i in val.DriveEnd"">
                                <h5>Drive End <span class=""bearing-count"" ng-repeat=""j in i.Bearings"">({{i.Bearings.length}})</span></h5>
                                <div>
                                    <div class=""input-field bearing-autocomp col-lg-7 col-md-4 col-sm-12"">
                                        <label class=""control-label"">Bearing Designation*</label><span class=""bearingcode ytc"">(If Bearing Designation Code not found please type 'YTC' as code) </span>
                                        <angucomplete-alt id=""BearingId""
              ");
            WriteLiteral(@"                                            placeholder=""Type Bearing Designation""
                                                          focus-in=""focusautoIn(val.ShaftOrder, i.ShaftSide)""
                                                          input-name=""{{i.ShaftSide}} {{val.ShaftOrder}}""
                                                          pause=""400""
                                                          minlength=""3""
                                                          selected-object=""selectedBearingStatusFn""
                                                          remote-url=""equipment/GetListBearingByDesignation?lId={{languageId}}&uId={{val.UnitId}}&unitType={{Type}}&type=DE&queryString=""
                                                          remote-url-data-field=""""
                                                          title-field=""Designation,BearingName,ManufacturerName""
                                                          search-fields=""Designation ""
    ");
            WriteLiteral(@"                                                      description-field=""""
                                                          image-field=""""
                                                          field-required=""true""
                                                          input-class=""form-control form-control-small""
                                                          disable-input=""readOnlyPage"" />
                                    </div>
                                    <div class=""table-responsive col-md-12 col-sm-12"">
                                        <table>
                                            <tr style=""background:#337ab7;color: #fff;"">
                                                <th style=""width:5%"">S.No</th>
                                                <th style=""width:30%"">Manufacturer Name </th>
                                                <th style=""width:20%"">Designation</th>
                                                <th style=""widt");
            WriteLiteral(@"h:40%"">Bearing Name</th>
                                                <th style=""width:5%"">Active</th>
                                            </tr>
                                            <tr ng-repeat=""j in i.Bearings"">
                                                <td style=""width:5%"">{{$index + 1}} </td>
                                                <td style=""width:30%"">{{j.ManufacturerName}}</td>
                                                <td style=""width:20%"">{{j.Designation}}</td>
                                                <td style=""width:40%"">{{j.BearingName}}</td>
                                                <td style=""width:5%""><label class=""ui-grid-cell-contents""><a ng-click=""DirtyValues(i.ShaftSide, val.ShaftOrder, j)""><i class=""fa fa-trash""></i></a></label></td>
                                            </tr>
                                            <tr ng-show=""!i.Bearings.length"">
                                                <td colspan=""5"">No Re");
            WriteLiteral(@"cords Found</td>
                                            </tr>
                                        </table>
                                    </div>
                                </div>
                            </div>
                            <div class=""col-md-12 col-sm-6 non-drive-end input-field"" ng-repeat=""i in val.NonDriveEnd"">
                                <h5>Non Drive End <span class=""bearing-count"" ng-repeat=""j in i.Bearings"">({{i.Bearings.length}})</span></h5>
                                <div>
                                    <div class=""input-field bearing-autocomp col-lg-7 col-md-4 col-sm-12"">
                                        <label class=""control-label"">Bearing Designation*</label><span class=""bearingcode ytc"">(If Bearing Designation Code not found please type 'YTC' as code) </span>
                                        <angucomplete-alt id=""BearingId""
                                                          focus-in=""focusautoIn(val.ShaftOrder, i.");
            WriteLiteral(@"ShaftSide)""
                                                          placeholder=""Type Bearing Designation""
                                                          input-name=""BearingId""
                                                          pause=""400""
                                                          minlength=""3""
                                                          selected-object=""selectedBearingStatusFn""
                                                          remote-url=""equipment/GetListBearingByDesignation?lId={{languageId}}&uId={{val.UnitId}}&unitType={{Type}}&type=DE&queryString=""
                                                          remote-url-data-field=""""
                                                          title-field=""Designation,BearingName,ManufacturerName""
                                                          search-fields=""Designation""
                                                          description-field=""""
                                  ");
            WriteLiteral(@"                        image-field=""""
                                                          field-required=""true""
                                                          input-class=""form-control form-control-small""
                                                          disable-input=""readOnlyPage"" />
                                    </div>
                                    <div class=""table-responsive col-md-12 col-sm-12"">
                                        <table>
                                            <tr style=""background:#337ab7;color: #fff;"">
                                                <th style=""width:5%"">S.No</th>
                                                <th style=""width:30%"">Manufacturer Name </th>
                                                <th style=""width:20%"">Designation</th>
                                                <th style=""width:40%"">Bearing Name</th>
                                                <th style=""width:5%"">Active</th>
  ");
            WriteLiteral(@"                                          </tr>
                                            <tr ng-repeat=""j in i.Bearings"">
                                                <td style=""width:5%"">{{$index + 1}} </td>
                                                <td style=""width:30%"">{{j.ManufacturerName}}</td>
                                                <td style=""width:20%"">{{j.Designation}}</td>
                                                <td style=""width:40%"">{{j.BearingName}}</td>
                                                <td style=""width:5%""><label class=""ui-grid-cell-contents""><a ng-click=""DirtyValues(i.ShaftSide, val.ShaftOrder, j)""><i class=""fa fa-trash""></i></a></label></td>
                                            </tr>
                                            <tr ng-show=""!i.Bearings.length"">
                                                <td colspan=""5"">No Records Found</td>
                                            </tr>
                                        <");
            WriteLiteral(@"/table>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>

            </div>
        </div>
        <div class=""modal-footer"">
        </div>
    </div>
</script>
<script type=""text/ng-template"" id=""skfIntermediateShaftModal.html"">
    <div class=""popup-product popup-user-role equipment-shaft-modal"">
        <div class=""modal-header"">
            <span class=""model-breadcrumb"">Shaft List</span>
            <div class=""col-lg-6 col-md-8 col-sm-12 heading"">
                <h4 class=""page-header text-primary ng-binding"">{{DispName}} </h4>
            </div>
            <div class=""col-lg-6 col-md-4 col-sm-12 create-button  menu-button"">
                <span class=""Pipe""></span>
                <a ng-disabled=""readOnly"" ng-show=""Type == 'IN'"" ng-click=""AddShaft()"" title=""Add""><i class=""fa fa-plus icon-filter""></i><span>Add Shaft</span></a>
 ");
            WriteLiteral(@"               <a ng-disabled=""readOnly"" ng-click=""save()"" title=""Save""><i class=""fa fa-save icon-filter""></i><span>Save</span></a>
                <a ng-click=""cancel()"" title=""Close""><i class=""fa fa-close icon-filter""></i><span>Close</span></a>
            </div>
        </div>
        <div class=""modal-body user-siteaccess"">
            <div class=""row"">
                <div class=""shaft-intermediate shaft-wrapper"">
                    <div class=""col-md-12 col-sm-12 input-field"" ng-repeat=""val in shaft | orderBy : ShaftOrder"">
                        <h3 class=""accordion"">
                            <a ng-click=""showAcc(val.ShaftOrder)"">
                                {{val.ShaftName}}
");
            EndContext();
            BeginContext(156898, 8724, true);
            WriteLiteral(@"                            </a>
                        </h3>
                        <div class=""accordion-content"" ng-show=""showMode{{val.ShaftOrder}}"">
                            <div class=""col-md-3 col-sm-6 input-field"">
                                <div class=""rpm-section"">
                                    <label class=""control-label"">RPM*</label>
                                    <input type=""text"" ng-model=""val.RPM"" class=""form-control"" name=""RPM"" />
                                </div>
                            </div>
                            <div class=""col-md-12 col-sm-6 non-drive-end input-field"" ng-repeat=""i in val.NonDriveEnd"">
                                <h5>Non Drive End <span class=""bearing-count"" ng-repeat=""j in i.Bearings"">({{i.Bearings.length}})</span></h5>
                                <div>
                                    <div class=""input-field bearing-autocomp col-lg-7 col-md-4 col-sm-12"">
                                        <label class=""con");
            WriteLiteral(@"trol-label"">Bearing Designation*</label><span class=""bearingcode ytc"">(If Bearing Designation Code not found please type 'YTC' as code) </span>
                                        <angucomplete-alt id=""BearingId""
                                                          focus-in=""focusautoIn(val.ShaftOrder, i.ShaftSide)""
                                                          placeholder=""Type Bearing Designation""
                                                          input-name=""BearingId""
                                                          pause=""400""
                                                          minlength=""3""
                                                          selected-object=""selectedBearingStatusFn""
                                                          remote-url=""equipment/GetListBearingByDesignation?lId={{languageId}}&uId=null&unitType={{Type}}&type=DE&queryString=""
                                                          remote-url-data-field=""""
        ");
            WriteLiteral(@"                                                  title-field=""Designation,BearingName,ManufacturerName""
                                                          search-fields=""Designation""
                                                          description-field=""""
                                                          image-field=""""
                                                          field-required=""true""
                                                          input-class=""form-control form-control-small""
                                                          disable-input=""readOnlyPage"" />
                                    </div>
                                    <div class=""table-responsive col-md-12 col-sm-12"">
                                        <table>
                                            <tr style=""background:#337ab7; color: #fff;"">
                                                <th style=""width:5%"">S.No</th>
                                                ");
            WriteLiteral(@"<th style=""width:30%"">Manufacturer Name </th>
                                                <th style=""width:20%"">Designation</th>
                                                <th style=""width:40%"">Bearing Name</th>
                                                <th style=""width:5%"">Active</th>
                                            </tr>
                                            <tr ng-repeat=""j in i.Bearings"">
                                                <td style=""width:5%"">{{$index + 1}} </td>
                                                <td style=""width:30%"">{{j.ManufacturerName}}</td>
                                                <td style=""width:20%"">{{j.Designation}}</td>
                                                <td style=""width:40%"">{{j.BearingName}}</td>
                                                <td style=""width:5%""><label class=""ui-grid-cell-contents""><a ng-click=""DirtyValues(i.ShaftSide, val.ShaftOrder, j)""><i class=""fa fa-trash""></i></a></label></td>
 ");
            WriteLiteral(@"                                           </tr>
                                            <tr ng-show=""!i.Bearings.length"">
                                                <td colspan=""5"">No Records Found</td>
                                            </tr>
                                        </table>
                                    </div>
                                </div>
                            </div>
                            <div class=""col-md-12 col-sm-12 non-drive-end input-field"" ng-repeat=""i in val.DriveEnd"">
                                <h5>Drive End <span class=""bearing-count"" ng-repeat=""j in i.Bearings"">({{i.Bearings.length}})</span></h5>
                                <div>
                                    <div class=""input-field bearing-autocomp col-lg-7 col-md-4 col-sm-12"">
                                        <label class=""control-label"">Bearing Designation*</label><span class=""bearingcode ytc"">(If Bearing Designation Code not found please type 'YTC");
            WriteLiteral(@"' as code) </span>
                                        <angucomplete-alt id=""BearingId""
                                                          placeholder=""Type Bearing Designation""
                                                          focus-in=""focusautoIn(val.ShaftOrder, i.ShaftSide)""
                                                          input-name=""{{i.ShaftSide}} {{val.ShaftOrder}}""
                                                          pause=""400""
                                                          minlength=""3""
                                                          selected-object=""selectedBearingStatusFn""
                                                          remote-url=""equipment/GetListBearingByDesignation?lId={{languageId}}&uId=null&unitType={{Type}}&type=DE&queryString=""
                                                          remote-url-data-field=""""
                                                          title-field=""Designation,BearingName,ManufacturerN");
            WriteLiteral(@"ame""
                                                          search-fields=""Designation ""
                                                          description-field=""""
                                                          image-field=""""
                                                          field-required=""true""
                                                          input-class=""form-control form-control-small""
                                                          disable-input=""readOnlyPage"" />
                                    </div>
                                    <div class=""table-responsive col-md-12 col-sm-12"">
                                        <table>
                                            <tr style=""background:#337ab7; color: #fff;"">
                                                <th style=""width:5%"">S.No</th>
                                                <th style=""width:30%"">Manufacturer Name </th>
                                                <th ");
            WriteLiteral(@"style=""width:20%"">Designation</th>
                                                <th style=""width:40%"">Bearing Name</th>
                                                <th style=""width:5%"">Active</th>
                                            </tr>
                                            <tr ng-repeat=""j in i.Bearings"">
                                                <td style=""width:5%"">{{$index + 1}} </td>
                                                <td style=""width:30%"">{{j.ManufacturerName}}</td>
                                                <td style=""width:20%"">{{j.Designation}}</td>
                                                <td style=""width:40%"">{{j.BearingName}}</td>
                                                <td style=""width:15%""><label class=""ui-grid-cell-contents""><a ng-click=""DirtyValues(i.ShaftSide, val.ShaftOrder, j)""><i class=""fa fa-trash""></i></a></label></td>
                                            </tr>
                                            <tr ");
            WriteLiteral(@"ng-show=""!i.Bearings.length"">
                                                <td colspan=""5"">No Records Found</td>
                                            </tr>
                                        </table>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div class=""modal-footer"">
        </div>
    </div>
</script>");
            EndContext();
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; }
    }
}
#pragma warning restore 1591
